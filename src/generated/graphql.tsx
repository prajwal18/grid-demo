import { gql } from '@apollo/client';
import * as Apollo from '@apollo/client';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
const defaultOptions = {} as const;
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  BigInt: { input: any; output: any; }
  ISO8601Date: { input: any; output: any; }
  ISO8601DateTime: { input: any; output: any; }
  JSON: { input: any; output: any; }
};

/** Autogenerated input type of AcknowledgeNote */
export type AcknowledgeNoteInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: NoteAcknowledgeInput;
};

/** Autogenerated return type of AcknowledgeNote */
export type AcknowledgeNotePayload = {
  __typename?: 'AcknowledgeNotePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  note?: Maybe<Note>;
};

/** Autogenerated input type of AddAssetToDeliveryOrder */
export type AddAssetToDeliveryOrderInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  deliveryOrderId: Scalars['ID']['input'];
  requestedVolume?: InputMaybe<Scalars['Float']['input']>;
  subscriptionId: Scalars['ID']['input'];
  topOff?: InputMaybe<Scalars['Boolean']['input']>;
  type?: InputMaybe<DeliveryOrderLineItemTypeEnum>;
};

/** Autogenerated return type of AddAssetToDeliveryOrder */
export type AddAssetToDeliveryOrderPayload = {
  __typename?: 'AddAssetToDeliveryOrderPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  deliveryOrderLineItem?: Maybe<DeliveryOrderLineItem>;
  message: Scalars['String']['output'];
};

/** Autogenerated input type of AddFeeToOrderGroup */
export type AddFeeToOrderGroupInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  feeId: Scalars['ID']['input'];
  isManuallyUpdated?: InputMaybe<Scalars['Boolean']['input']>;
  orderGroupId: Scalars['ID']['input'];
  price: Scalars['Float']['input'];
  quantity: Scalars['Float']['input'];
};

/** Autogenerated return type of AddFeeToOrderGroup */
export type AddFeeToOrderGroupPayload = {
  __typename?: 'AddFeeToOrderGroupPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  orderGroup?: Maybe<OrderGroup>;
};

/** Autogenerated input type of AddFeesToOrderGroup */
export type AddFeesToOrderGroupInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  feeIds: Array<Scalars['ID']['input']>;
  orderGroupId: Scalars['ID']['input'];
};

/** Autogenerated return type of AddFeesToOrderGroup */
export type AddFeesToOrderGroupPayload = {
  __typename?: 'AddFeesToOrderGroupPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  error?: Maybe<Scalars['String']['output']>;
  orderGroup?: Maybe<OrderGroup>;
};

/** Autogenerated input type of AddOrderGroupsToShift */
export type AddOrderGroupsToShiftInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  orderGroupIds: Array<Scalars['ID']['input']>;
  shiftId: Scalars['ID']['input'];
};

/** Autogenerated return type of AddOrderGroupsToShift */
export type AddOrderGroupsToShiftPayload = {
  __typename?: 'AddOrderGroupsToShiftPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  errorMsg?: Maybe<Scalars['String']['output']>;
  orderGroups?: Maybe<Array<OrderGroup>>;
  success?: Maybe<Scalars['Boolean']['output']>;
};

/** Autogenerated input type of AddQrCodeToAsset */
export type AddQrCodeToAssetInput = {
  assetId: Scalars['ID']['input'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  qrCodeText: Scalars['String']['input'];
};

/** Autogenerated return type of AddQrCodeToAsset */
export type AddQrCodeToAssetPayload = {
  __typename?: 'AddQrCodeToAssetPayload';
  asset?: Maybe<Asset>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
};

export type AddressBook = {
  __typename?: 'AddressBook';
  address?: Maybe<Scalars['String']['output']>;
  customerBranches?: Maybe<Array<CustomerBranch>>;
  customers?: Maybe<Array<Customer>>;
  email?: Maybe<Scalars['String']['output']>;
  hasAccessToCustomerPortal?: Maybe<Scalars['Boolean']['output']>;
  id: Scalars['ID']['output'];
  image?: Maybe<AttachedFile>;
  isDeliveryTicketRecipient?: Maybe<Scalars['Boolean']['output']>;
  jobTitle?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  phone?: Maybe<Scalars['String']['output']>;
  showInviteLink?: Maybe<Scalars['Boolean']['output']>;
};

export type AddressBookCollection = {
  __typename?: 'AddressBookCollection';
  collection: Array<AddressBook>;
  metadata: MetaQuery;
};

export type AddressBookFilter = {
  address?: InputMaybe<Scalars['String']['input']>;
  all?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  or?: InputMaybe<Array<AddressBookFilter>>;
  phone?: InputMaybe<Scalars['String']['input']>;
};

/** Point of contact Input */
export type AddressBookInput = {
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  address?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  hasAccessToCustomerPortal?: InputMaybe<Scalars['Boolean']['input']>;
  /** ID of point of contact. */
  id?: InputMaybe<Scalars['ID']['input']>;
  imageSignedBlobId?: InputMaybe<Scalars['ID']['input']>;
  isDeliveryTicketRecipient?: InputMaybe<Scalars['Boolean']['input']>;
  jobTitle?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
};

export type AddressBookSorter = {
  field: AddressBookSorterEnum;
  order?: InputMaybe<FieldOrder>;
};

/** Enum to use on sorter fields when call a query */
export enum AddressBookSorterEnum {
  Address = 'ADDRESS',
  Email = 'EMAIL',
  Name = 'NAME',
  Phone = 'PHONE'
}

export type AppData = {
  __typename?: 'AppData';
  appBuild?: Maybe<Scalars['String']['output']>;
  appOta?: Maybe<Scalars['String']['output']>;
  appVersion?: Maybe<Scalars['String']['output']>;
  authorization?: Maybe<Scalars['String']['output']>;
  batteryLevel?: Maybe<Scalars['String']['output']>;
  brand?: Maybe<Scalars['String']['output']>;
  controllerAction?: Maybe<Scalars['String']['output']>;
  ip?: Maybe<Scalars['String']['output']>;
  isLocationEnabled?: Maybe<Scalars['String']['output']>;
  isLocationPermissionEnabled?: Maybe<Scalars['String']['output']>;
  lastSyncedAt?: Maybe<Scalars['ISO8601DateTime']['output']>;
  lowPowerMode?: Maybe<Scalars['String']['output']>;
  mac?: Maybe<Scalars['String']['output']>;
  model?: Maybe<Scalars['String']['output']>;
  os?: Maybe<Scalars['String']['output']>;
  osVersion?: Maybe<Scalars['String']['output']>;
};

export type ApplicableFee = {
  __typename?: 'ApplicableFee';
  fee?: Maybe<Fee>;
  feeable?: Maybe<Feeable>;
  feeableId: Scalars['ID']['output'];
  feeableType: Scalars['String']['output'];
  hardcoded?: Maybe<Scalars['Boolean']['output']>;
  id: Scalars['ID']['output'];
  isDefault?: Maybe<Scalars['Boolean']['output']>;
  netsuiteId?: Maybe<Scalars['ID']['output']>;
  price?: Maybe<Scalars['Float']['output']>;
  quantity?: Maybe<Scalars['Float']['output']>;
};

export type ApplicableFeeCollection = {
  __typename?: 'ApplicableFeeCollection';
  collection: Array<ApplicableFee>;
  metadata: MetaQuery;
};

export type ApplicableFeeFilter = {
  all?: InputMaybe<Scalars['String']['input']>;
  feeId?: InputMaybe<Scalars['ID']['input']>;
  feeableId?: InputMaybe<Scalars['ID']['input']>;
  feeableType?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  or?: InputMaybe<Array<ApplicableFeeFilter>>;
  priceGte?: InputMaybe<Scalars['Float']['input']>;
  priceLte?: InputMaybe<Scalars['Float']['input']>;
};

export type ApplicableFeeSorter = {
  field: ApplicableFeeSorterEnum;
  order?: InputMaybe<FieldOrder>;
};

/** Enum to use on sorter fields when call a query */
export enum ApplicableFeeSorterEnum {
  Name = 'NAME',
  Price = 'PRICE'
}

export type ApplicableMargin = {
  __typename?: 'ApplicableMargin';
  id?: Maybe<Scalars['ID']['output']>;
  margin?: Maybe<Margin>;
};

/** Default ApplicableMargins Input */
export type ApplicableMarginsInput = {
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  marginId?: InputMaybe<Scalars['ID']['input']>;
};

export type ApplicableTax = {
  __typename?: 'ApplicableTax';
  id?: Maybe<Scalars['ID']['output']>;
  tax?: Maybe<Tax>;
};

/** Default ApplicableTaxes Input */
export type ApplicableTaxesInput = {
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  taxId?: InputMaybe<Scalars['ID']['input']>;
};

/** Enum for fee applicable types */
export enum ApplicableTypeEnum {
  /** For delivery type */
  Delivery = 'delivery',
  /** For service type */
  Service = 'service'
}

export type AppliedMargin = {
  __typename?: 'AppliedMargin';
  applicableMargin?: Maybe<ApplicableMargin>;
  id?: Maybe<Scalars['ID']['output']>;
  price?: Maybe<Scalars['Float']['output']>;
  quantity?: Maybe<Scalars['Float']['output']>;
  total?: Maybe<Scalars['Float']['output']>;
};

/** Applied Margins Input */
export type AppliedMarginsInput = {
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  price?: InputMaybe<Scalars['Float']['input']>;
  quantity?: InputMaybe<Scalars['Float']['input']>;
  total?: InputMaybe<Scalars['Float']['input']>;
};

export type AppliedPricing = {
  __typename?: 'AppliedPricing';
  appliedMargins?: Maybe<Array<AppliedMargin>>;
  appliedTaxes?: Maybe<Array<AppliedTax>>;
  cardInTime?: Maybe<Scalars['ISO8601DateTime']['output']>;
  completedOn?: Maybe<Scalars['ISO8601DateTime']['output']>;
  customer?: Maybe<ResourceDetails>;
  customerBranch?: Maybe<ResourceDetails>;
  data?: Maybe<Scalars['String']['output']>;
  /** Deprecated, use delivery_order_line_item_ids instead */
  deliveryOrderLineItemId?: Maybe<Scalars['ID']['output']>;
  deliveryOrderLineItemIds?: Maybe<Array<Scalars['ID']['output']>>;
  discount?: Maybe<Scalars['Float']['output']>;
  error?: Maybe<AppliedPricingError>;
  hubId?: Maybe<Scalars['ID']['output']>;
  id?: Maybe<Scalars['ID']['output']>;
  isManuallyUpdated?: Maybe<Scalars['Boolean']['output']>;
  /** Deprecated, use loading_order_line_item_ids instead */
  loadingOrderLineItemId?: Maybe<Scalars['ID']['output']>;
  loadingOrderLineItemIds?: Maybe<Array<Scalars['ID']['output']>>;
  marketId?: Maybe<Scalars['ID']['output']>;
  orderGroupId?: Maybe<Scalars['ID']['output']>;
  orderType?: Maybe<Scalars['String']['output']>;
  price?: Maybe<Scalars['Float']['output']>;
  pricing?: Maybe<Pricing>;
  product?: Maybe<Product>;
  productId?: Maybe<Scalars['ID']['output']>;
  quantity?: Maybe<Scalars['Float']['output']>;
  receiptNumber?: Maybe<Scalars['String']['output']>;
  resourcePricing?: Maybe<ResourcePricing>;
  success?: Maybe<Scalars['Boolean']['output']>;
  sumTotal?: Maybe<Scalars['Float']['output']>;
  supplierId?: Maybe<Scalars['ID']['output']>;
  terminalId?: Maybe<Scalars['ID']['output']>;
  total?: Maybe<Scalars['Float']['output']>;
};

export type AppliedPricingError = {
  __typename?: 'AppliedPricingError';
  description?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

export type AppliedTax = {
  __typename?: 'AppliedTax';
  applicableTax?: Maybe<ApplicableTax>;
  id?: Maybe<Scalars['ID']['output']>;
  price?: Maybe<Scalars['Float']['output']>;
  quantity?: Maybe<Scalars['Float']['output']>;
  total?: Maybe<Scalars['Float']['output']>;
};

/** Applied Tax Input */
export type AppliedTaxesInput = {
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  price?: InputMaybe<Scalars['Float']['input']>;
  quantity?: InputMaybe<Scalars['Float']['input']>;
  total?: InputMaybe<Scalars['Float']['input']>;
};

export enum ApplyAsOnFeeEnum {
  /** Default Option */
  Default = '_default',
  /** Per Asset */
  PerAsset = 'per_asset',
  /** Per Delivery */
  PerDelivery = 'per_delivery',
  /** Per Gallon */
  PerGallon = 'per_gallon',
  /** Per Hour */
  PerHour = 'per_hour',
  /** Per Mile */
  PerMile = 'per_mile'
}

/** Autogenerated input type of ArchiveDrivers */
export type ArchiveDriversInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  driverIds?: InputMaybe<Array<Scalars['ID']['input']>>;
};

/** Autogenerated return type of ArchiveDrivers */
export type ArchiveDriversPayload = {
  __typename?: 'ArchiveDriversPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  drivers?: Maybe<Array<Driver>>;
};

/** Autogenerated input type of ArrivedAtCustomer */
export type ArrivedAtCustomerInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  deliveryOrderId?: InputMaybe<Scalars['ID']['input']>;
  /** Don't use, deprecated! */
  taskId?: InputMaybe<Scalars['ID']['input']>;
};

/** Autogenerated return type of ArrivedAtCustomer */
export type ArrivedAtCustomerPayload = {
  __typename?: 'ArrivedAtCustomerPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  orderGroup?: Maybe<OrderGroup>;
  /** Don't use, deprecated! */
  task?: Maybe<Task>;
};

/** Autogenerated input type of ArrivedAtTerminal */
export type ArrivedAtTerminalInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  loadingOrderId?: InputMaybe<Scalars['ID']['input']>;
  /** Don't use, deprecated! */
  taskId?: InputMaybe<Scalars['ID']['input']>;
};

/** Autogenerated return type of ArrivedAtTerminal */
export type ArrivedAtTerminalPayload = {
  __typename?: 'ArrivedAtTerminalPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  orderGroup?: Maybe<OrderGroup>;
  /** Don't use, deprecated! */
  task?: Maybe<Task>;
};

export type Asset = {
  __typename?: 'Asset';
  activeShift?: Maybe<Shift>;
  assetMovementLocation?: Maybe<AssetMovementLocation>;
  assetProductCategories?: Maybe<Array<AssetProductCategory>>;
  assetsPeripherals?: Maybe<Array<AssetsPeripheral>>;
  averageDaysBetweenFills?: Maybe<Scalars['Int']['output']>;
  averageUtilization?: Maybe<Scalars['Int']['output']>;
  category?: Maybe<Scalars['String']['output']>;
  categoryProducts?: Maybe<Array<Product>>;
  color?: Maybe<Scalars['String']['output']>;
  compartments?: Maybe<Array<Compartment>>;
  costOfTank?: Maybe<Scalars['Float']['output']>;
  customer?: Maybe<Customer>;
  customerBranch?: Maybe<CustomerBranch>;
  data?: Maybe<Scalars['JSON']['output']>;
  erpId?: Maybe<Scalars['String']['output']>;
  existingActiveMovementOrder?: Maybe<Scalars['Boolean']['output']>;
  fuelCategories?: Maybe<Array<Scalars['String']['output']>>;
  /** @deprecated Use fuel_categories instead. */
  fuelCategory?: Maybe<Array<Scalars['String']['output']>>;
  fuelTypeProducts?: Maybe<Array<Product>>;
  /** Supported for Company, Rental and Delivery Assets only */
  hubResources?: Maybe<Array<HubResource>>;
  /** Supported for Company, Rental and Delivery Assets only */
  hubs?: Maybe<Array<Hub>>;
  id: Scalars['ID']['output'];
  /** Timestamp when the asset was last delivered */
  lastDeliveredTimestamp?: Maybe<Scalars['Int']['output']>;
  lastDeliveredVolume?: Maybe<Scalars['Float']['output']>;
  /** Deprecated, use asset_movement_location instead */
  lat?: Maybe<Scalars['String']['output']>;
  licensePlateNumber?: Maybe<Scalars['String']['output']>;
  lineOfServices?: Maybe<Array<LineOfService>>;
  /** Deprecated, use asset_movement_location instead */
  lng?: Maybe<Scalars['String']['output']>;
  make?: Maybe<Scalars['String']['output']>;
  marketValue?: Maybe<Scalars['Float']['output']>;
  model?: Maybe<Scalars['String']['output']>;
  movementOrders?: Maybe<Array<MovementOrder>>;
  name?: Maybe<Scalars['String']['output']>;
  netsuiteId?: Maybe<Scalars['ID']['output']>;
  pandaDocuments?: Maybe<Array<PandaDocument>>;
  purchasedOn?: Maybe<Scalars['ISO8601DateTime']['output']>;
  qrCodeText?: Maybe<Scalars['String']['output']>;
  site?: Maybe<Site>;
  status?: Maybe<Scalars['String']['output']>;
  subscriptions?: Maybe<Array<Subscription>>;
  tankSize?: Maybe<Scalars['String']['output']>;
  tankType?: Maybe<Scalars['String']['output']>;
  terminals?: Maybe<Array<Terminal>>;
  type?: Maybe<Scalars['String']['output']>;
  useInDelivery?: Maybe<Scalars['Boolean']['output']>;
  vin?: Maybe<Scalars['String']['output']>;
  year?: Maybe<Scalars['Int']['output']>;
};


export type AssetCompartmentsArgs = {
  deletedAfter?: InputMaybe<Scalars['Int']['input']>;
  includeDeleted?: InputMaybe<Scalars['Boolean']['input']>;
};


export type AssetSubscriptionsArgs = {
  showAll?: InputMaybe<Scalars['Boolean']['input']>;
};

export enum AssetCategoryEnum {
  /** Box Truck */
  BoxTruck = 'box_truck',
  /** Equipment */
  Equipment = 'equipment',
  /** Flatbed Truck */
  FlatbedTruck = 'flatbed_truck',
  /** Generator */
  Generator = 'generator',
  /** Others */
  Others = 'others',
  /** Reefer */
  Reefer = 'reefer',
  /** Tank */
  Tank = 'tank',
  /** Tank wagon */
  TankWagon = 'tank_wagon',
  /** Trailer */
  Trailer = 'trailer',
  /** Truck */
  Truck = 'truck',
  /** Vehicle */
  Vehicle = 'vehicle'
}

export type AssetCollection = {
  __typename?: 'AssetCollection';
  collection: Array<Asset>;
  metadata: MetaQuery;
};

export type AssetFilter = {
  all?: InputMaybe<Scalars['String']['input']>;
  /** Any categories among ["tank_wagon", "truck", "box_truck", "flatbed_truck", "trailer", "tank", "vehicle", "others", "equipment", "generator", "reefer"] */
  categories?: InputMaybe<Array<Scalars['String']['input']>>;
  customerBranchId?: InputMaybe<Array<Scalars['ID']['input']>>;
  customerIds?: InputMaybe<Array<Scalars['ID']['input']>>;
  or?: InputMaybe<Array<AssetFilter>>;
  qrCode?: InputMaybe<Scalars['String']['input']>;
  /** Any status among ["active", "inactive", "paused"] */
  statuses?: InputMaybe<Array<Scalars['String']['input']>>;
  type?: InputMaybe<AssetTypeEnum>;
  types?: InputMaybe<Array<AssetTypeEnum>>;
  useInDelivery?: InputMaybe<Scalars['Boolean']['input']>;
};

/** Asset Input */
export type AssetInput = {
  category?: InputMaybe<Scalars['String']['input']>;
  deliveryOrderLineItemsAttributes?: InputMaybe<Array<DeliveryOrderLineItemInput>>;
  licensePlate?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  productId?: InputMaybe<Scalars['ID']['input']>;
};

/** AssetInventories Input */
export type AssetInventoriesInput = {
  assetId: Scalars['ID']['input'];
  inventories?: InputMaybe<Array<InventoryInput>>;
};

/** AssetMovementLocation Type */
export type AssetMovementLocation = {
  __typename?: 'AssetMovementLocation';
  id: Scalars['ID']['output'];
  lat?: Maybe<Scalars['String']['output']>;
  lng?: Maybe<Scalars['String']['output']>;
  orderGroupId?: Maybe<Scalars['ID']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  updatable?: Maybe<Updatable>;
  updatedAt?: Maybe<Scalars['ISO8601DateTime']['output']>;
};

/** AssetMovementLocation Input */
export type AssetMovementLocationInput = {
  id?: InputMaybe<Scalars['ID']['input']>;
  lat?: InputMaybe<Scalars['String']['input']>;
  lng?: InputMaybe<Scalars['String']['input']>;
  orderGroupId?: InputMaybe<Scalars['ID']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
};

/** AssetMovementOrderHistoryList Type */
export type AssetMovementOrderHistory = {
  __typename?: 'AssetMovementOrderHistory';
  averageDaysBetweenFills?: Maybe<Scalars['Int']['output']>;
  completedDate?: Maybe<Scalars['ISO8601Date']['output']>;
  customerBranchId?: Maybe<Scalars['String']['output']>;
  customerBranchName?: Maybe<Scalars['String']['output']>;
  customerName?: Maybe<Scalars['String']['output']>;
  numberOfDays?: Maybe<Scalars['Int']['output']>;
  startedDate?: Maybe<Scalars['ISO8601Date']['output']>;
};

/** AssetMovementOrderHistoryList Type */
export type AssetMovementOrderHistoryList = {
  __typename?: 'AssetMovementOrderHistoryList';
  completedOn?: Maybe<Scalars['ISO8601DateTime']['output']>;
  driverName?: Maybe<Scalars['String']['output']>;
  licensePlateNumber?: Maybe<Scalars['String']['output']>;
  productName?: Maybe<Scalars['String']['output']>;
  volume?: Maybe<Scalars['Float']['output']>;
};

export type AssetMovementOrderHistoryListCollection = {
  __typename?: 'AssetMovementOrderHistoryListCollection';
  collection: Array<AssetMovementOrderHistoryList>;
  metadata: MetaQuery;
};

export type AssetMovementOrderHistoryListFilter = {
  all?: InputMaybe<Scalars['String']['input']>;
  completedOn?: InputMaybe<Scalars['ISO8601DateTime']['input']>;
  customerBranchId: Scalars['ID']['input'];
  name?: InputMaybe<Scalars['String']['input']>;
  or?: InputMaybe<Array<AssetMovementOrderHistoryListFilter>>;
  rentalAssetId: Scalars['ID']['input'];
  startedOn?: InputMaybe<Scalars['ISO8601DateTime']['input']>;
};

export type AssetMovementOrderHistorySorter = {
  field: AssetMovementOrderHistorySorterEnum;
  order?: InputMaybe<FieldOrder>;
};

/** Enum to use on sorter fields when call a query */
export enum AssetMovementOrderHistorySorterEnum {
  Completedon = 'COMPLETEDON',
  Licenseplatenumber = 'LICENSEPLATENUMBER',
  Productname = 'PRODUCTNAME',
  Workername = 'WORKERNAME'
}

export type AssetProductCategory = {
  __typename?: 'AssetProductCategory';
  id: Scalars['ID']['output'];
  networkName?: Maybe<Scalars['String']['output']>;
  networkNumber?: Maybe<Scalars['String']['output']>;
  productCategory?: Maybe<ProductCategory>;
  registerModel?: Maybe<Scalars['String']['output']>;
  totalizer?: Maybe<Scalars['Float']['output']>;
};

export type AssetSorter = {
  field: AssetSorterEnum;
  order?: InputMaybe<FieldOrder>;
};

/** Enum to use on sorter fields when call a query */
export enum AssetSorterEnum {
  Erpid = 'ERPID',
  Name = 'NAME',
  Shipto = 'SHIPTO',
  Status = 'STATUS',
  Type = 'TYPE',
  Uniqueid = 'UNIQUEID'
}

export enum AssetStatusEnum {
  /** Active */
  Active = 'active',
  /** Inactive */
  Inactive = 'inactive',
  /** Inactive */
  Paused = 'paused'
}

/** Enum for asset types */
export enum AssetTypeEnum {
  /** For company assets type */
  CompanyAsset = 'CompanyAsset',
  /** For customer assets type */
  CustomerAsset = 'CustomerAsset',
  /** For delivery assets type */
  DeliveryAsset = 'DeliveryAsset',
  /** For rental assets type */
  RentalAsset = 'RentalAsset'
}

export type AssetsPeripheral = {
  __typename?: 'AssetsPeripheral';
  assetId?: Maybe<Scalars['ID']['output']>;
  assetsPeripheralsRecords?: Maybe<Array<AssetsPeripheralsRecord>>;
  id: Scalars['ID']['output'];
  peripheralId: Scalars['ID']['output'];
};

export type AssetsPeripheralInput = {
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  assetId?: InputMaybe<Scalars['ID']['input']>;
  assetsPeripheralsRecordsAttributes?: InputMaybe<Array<AssetsPeripheralsRecordInput>>;
  id?: InputMaybe<Scalars['ID']['input']>;
  peripheralId: Scalars['ID']['input'];
};

export type AssetsPeripheralsRecord = {
  __typename?: 'AssetsPeripheralsRecord';
  assetsPeripheralId?: Maybe<Scalars['Int']['output']>;
  fileUrl?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  peripheralAttributeId: Scalars['Int']['output'];
  value?: Maybe<Scalars['String']['output']>;
};

export type AssetsPeripheralsRecordInput = {
  assetsPeripheralId?: InputMaybe<Scalars['ID']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  peripheralAttributeId: Scalars['ID']['input'];
  value?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated input type of AssignDeliveryAssetWithInventory */
export type AssignDeliveryAssetWithInventoryInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  shiftDeliveryAssets: Array<AssetInventoriesInput>;
  shiftId: Scalars['ID']['input'];
};

/** Autogenerated return type of AssignDeliveryAssetWithInventory */
export type AssignDeliveryAssetWithInventoryPayload = {
  __typename?: 'AssignDeliveryAssetWithInventoryPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  shift?: Maybe<Shift>;
};

export type AttachedAsset = {
  __typename?: 'AttachedAsset';
  assetId?: Maybe<Scalars['ID']['output']>;
  autoOrder?: Maybe<Scalars['Boolean']['output']>;
  id?: Maybe<Scalars['ID']['output']>;
  minThreshold?: Maybe<Scalars['Float']['output']>;
  orderConfirmation?: Maybe<Scalars['Boolean']['output']>;
  purchaseOrder?: Maybe<Scalars['Boolean']['output']>;
  status?: Maybe<Scalars['String']['output']>;
};

/** Attached file information */
export type AttachedFile = {
  __typename?: 'AttachedFile';
  contentType?: Maybe<Scalars['String']['output']>;
  filename?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['ID']['output']>;
  url?: Maybe<Scalars['String']['output']>;
};

/** Attachment Input */
export type AttachmentInput = {
  /** Base64 conversion of file */
  base64Data: Scalars['String']['input'];
  /** Specify if attachment is of special, like: signature, completion, delivery_ticket, attachments, and tank_chart */
  documentType?: InputMaybe<Scalars['String']['input']>;
  /** ID of resource to which this document is to be associated */
  documentableId?: InputMaybe<Scalars['ID']['input']>;
  /** Resource Name[ex: DeliveryOrder, Shift, LoadingOrder] to which this document is to be associated */
  documentableType?: InputMaybe<Scalars['String']['input']>;
  /** Name of the file */
  fileName: Scalars['String']['input'];
  /** Deprecated, use document_type */
  type?: InputMaybe<Scalars['String']['input']>;
};

export type AuthInput = {
  password: Scalars['String']['input'];
  phone: Scalars['String']['input'];
};

/** Autogenerated input type of AutoLinkOrders */
export type AutoLinkOrdersInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  shiftId: Scalars['ID']['input'];
};

/** Autogenerated return type of AutoLinkOrders */
export type AutoLinkOrdersPayload = {
  __typename?: 'AutoLinkOrdersPayload';
  autoLinkOrders?: Maybe<AutoLinkOrdersResponse>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
};

export type AutoLinkOrdersResponse = {
  __typename?: 'AutoLinkOrdersResponse';
  errors?: Maybe<Array<Scalars['JSON']['output']>>;
  success: Scalars['Boolean']['output'];
};

export type BaseSorter = {
  field: Scalars['String']['input'];
  order?: InputMaybe<FieldOrder>;
};

export type BiResponse = {
  __typename?: 'BiResponse';
  response: Scalars['String']['output'];
  success: Scalars['Boolean']['output'];
};

export type BlendLoadingProduct = {
  __typename?: 'BlendLoadingProduct';
  blendProduct: Product;
  id: Scalars['ID']['output'];
};

export type Bol = {
  __typename?: 'Bol';
  bolNumber?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  pandaDocuments: Array<PandaDocument>;
  supplier: Supplier;
};

export type BolError = {
  __typename?: 'BolError';
  orderGroupId?: Maybe<Scalars['ID']['output']>;
  productId?: Maybe<Scalars['ID']['output']>;
  shiftId?: Maybe<Scalars['ID']['output']>;
  volume?: Maybe<Scalars['Float']['output']>;
};

export type BolRetain = {
  __typename?: 'BolRetain';
  id: Scalars['ID']['output'];
  orderGroup?: Maybe<OrderGroup>;
  product?: Maybe<Product>;
  shiftId?: Maybe<Scalars['ID']['output']>;
  timeTimestamp?: Maybe<Scalars['Int']['output']>;
  volume?: Maybe<Scalars['Float']['output']>;
};

/** Bol Retain Input */
export type BolRetainInput = {
  orderGroupId?: InputMaybe<Scalars['ID']['input']>;
  productId: Scalars['ID']['input'];
  shiftId: Scalars['ID']['input'];
  volume: Scalars['Float']['input'];
};

export enum BolTimeAtEnum {
  /** Card in */
  CardIn = 'card_in',
  /** Card out */
  CardOut = 'card_out'
}

export type Brand = {
  __typename?: 'Brand';
  id: Scalars['ID']['output'];
  name?: Maybe<Scalars['String']['output']>;
};

/** Autogenerated input type of BulkAsyncRefetchOrderQueueStatus */
export type BulkAsyncRefetchOrderQueueStatusInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  deliveryOrderIds: Array<Scalars['ID']['input']>;
};

/** Autogenerated return type of BulkAsyncRefetchOrderQueueStatus */
export type BulkAsyncRefetchOrderQueueStatusPayload = {
  __typename?: 'BulkAsyncRefetchOrderQueueStatusPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  success?: Maybe<Scalars['Boolean']['output']>;
};

/** Autogenerated input type of BulkUpdatePricings */
export type BulkUpdatePricingsInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  shiftIds: Array<Scalars['ID']['input']>;
};

/** Autogenerated return type of BulkUpdatePricings */
export type BulkUpdatePricingsPayload = {
  __typename?: 'BulkUpdatePricingsPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  success: Scalars['Boolean']['output'];
};

export enum CalculatedAsOnFeeEnum {
  /**  Delivery start to complete */
  DeliveryStartToComplete = 'delivery_start_to_complete',
  /** Geo in Geo out */
  GeoInGeoOut = 'geo_in_geo_out',
  /** Loading complete to delivery complete */
  LoadingCompleteToDeliveryComplete = 'loading_complete_to_delivery_complete',
  /**  Shift start to delivery complete */
  ShiftStartToDeliveryComplete = 'shift_start_to_delivery_complete',
  /** Shipto To Shipto */
  ShiptoToShipto = 'shipto_to_shipto',
  /** Terminal To Shipto */
  TerminalToShipto = 'terminal_to_shipto',
  /** Yard To Shipto */
  YardToShipto = 'yard_to_shipto'
}

export type Capacity = {
  __typename?: 'Capacity';
  fuelType: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  productCategory?: Maybe<ProductCategory>;
  unit: Scalars['String']['output'];
  usablePercentage?: Maybe<Scalars['Float']['output']>;
  value: Scalars['Int']['output'];
};

export type CapacityTypes = {
  __typename?: 'CapacityTypes';
  description: Scalars['String']['output'];
  value: Scalars['ID']['output'];
};

export type CcTenant = {
  __typename?: 'CcTenant';
  address?: Maybe<Scalars['String']['output']>;
  carrierTenant: Tenant;
  carrierTenantId: Scalars['ID']['output'];
  erpId?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  site?: Maybe<Site>;
  tenant: Tenant;
};

export type CcTenantCollection = {
  __typename?: 'CcTenantCollection';
  collection: Array<CcTenant>;
  metadata: MetaQuery;
};

export type CcTenantFilter = {
  address?: InputMaybe<Scalars['String']['input']>;
  all?: InputMaybe<Scalars['String']['input']>;
  erpId?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type CcTenantInput = {
  address?: InputMaybe<Scalars['String']['input']>;
  erpId: Scalars['String']['input'];
  name: Scalars['String']['input'];
  siteAttributes?: InputMaybe<SiteInput>;
};

/** Autogenerated input type of ChangeAsset */
export type ChangeAssetInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  fromAssetId?: InputMaybe<Scalars['ID']['input']>;
  shiftId: Scalars['ID']['input'];
  toAssetId: Scalars['ID']['input'];
};

/** Autogenerated return type of ChangeAsset */
export type ChangeAssetPayload = {
  __typename?: 'ChangeAssetPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  /** Contains error if success if false */
  errors?: Maybe<Scalars['String']['output']>;
  shift?: Maybe<Shift>;
  /** Show if request was success or not */
  success: Scalars['Boolean']['output'];
};

/** Autogenerated input type of ChangeDriverOtp */
export type ChangeDriverOtpInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  driverId: Scalars['ID']['input'];
};

/** Autogenerated return type of ChangeDriverOtp */
export type ChangeDriverOtpPayload = {
  __typename?: 'ChangeDriverOtpPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  driver?: Maybe<Driver>;
};

/** Autogenerated input type of ChangeOrderGroupAssignment */
export type ChangeOrderGroupAssignmentInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  /** Timestamp */
  completeTime?: InputMaybe<Scalars['String']['input']>;
  driverId?: InputMaybe<Scalars['ID']['input']>;
  isDriverLinkable?: InputMaybe<Scalars['Boolean']['input']>;
  orderGroupId: Scalars['ID']['input'];
  /** Timestamp */
  startTime?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated return type of ChangeOrderGroupAssignment */
export type ChangeOrderGroupAssignmentPayload = {
  __typename?: 'ChangeOrderGroupAssignmentPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  orderGroup: OrderGroup;
};

/** Autogenerated input type of ChangeUserOtp */
export type ChangeUserOtpInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  userId: Scalars['ID']['input'];
};

/** Autogenerated return type of ChangeUserOtp */
export type ChangeUserOtpPayload = {
  __typename?: 'ChangeUserOtpPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  user?: Maybe<User>;
};

/** Autogenerated input type of ClearDataShift */
export type ClearDataShiftInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
};

/** Autogenerated return type of ClearDataShift */
export type ClearDataShiftPayload = {
  __typename?: 'ClearDataShiftPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  shift?: Maybe<Shift>;
};

/** Returns a fetch of transfer orders with pagination meta */
export type CollectionTransferOrders = {
  __typename?: 'CollectionTransferOrders';
  meta: MetaQuery;
  records?: Maybe<Array<TransferOrder>>;
};

export type Commenter = {
  __typename?: 'Commenter';
  avatar?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  name?: Maybe<Scalars['String']['output']>;
  type: Scalars['String']['output'];
};

export type Compartment = {
  __typename?: 'Compartment';
  /** Compartment is deleted or not */
  active?: Maybe<Scalars['Boolean']['output']>;
  alignment?: Maybe<Scalars['String']['output']>;
  asset: Asset;
  capacities?: Maybe<Array<Capacity>>;
  /** Contains timestamp of deleted */
  deletedAtTimestamp?: Maybe<Scalars['Int']['output']>;
  diameter?: Maybe<Scalars['Float']['output']>;
  empty?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  initialInventory?: Maybe<Inventory>;
  lastBols?: Maybe<Array<Bol>>;
  lastCompartmentInstance?: Maybe<CompartmentInstance>;
  /** Obsolete, use latest inventory1 */
  lastInventory?: Maybe<Array<Inventory>>;
  lastLoadingOrderLineItem?: Maybe<LoadingOrderLineItem>;
  latestInventory?: Maybe<Inventory>;
  length?: Maybe<Scalars['Float']['output']>;
  liquidControls?: Maybe<Scalars['String']['output']>;
  meterInfo?: Maybe<Scalars['String']['output']>;
  meterNetworkAddress?: Maybe<Scalars['String']['output']>;
  meterNumber?: Maybe<Scalars['String']['output']>;
  midCom?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  networkName?: Maybe<Scalars['String']['output']>;
  networkNumber?: Maybe<Scalars['String']['output']>;
  subscriptionProducts?: Maybe<Array<Product>>;
  totalControlSystems?: Maybe<Scalars['String']['output']>;
};


export type CompartmentLastCompartmentInstanceArgs = {
  before?: InputMaybe<Scalars['Int']['input']>;
};

export enum CompartmentAlignmentEnum {
  /** Horizontal */
  Horizontal = 'horizontal',
  /** Vertical */
  Vertical = 'vertical'
}

export type CompartmentInstance = {
  __typename?: 'CompartmentInstance';
  afterStick?: Maybe<Scalars['String']['output']>;
  afterStickUnit?: Maybe<Scalars['String']['output']>;
  beforeStick?: Maybe<Scalars['String']['output']>;
  beforeStickUnit?: Maybe<Scalars['String']['output']>;
  compartment: Compartment;
  compartmentId: Scalars['ID']['output'];
  id: Scalars['ID']['output'];
  product?: Maybe<Product>;
  volume?: Maybe<Scalars['Float']['output']>;
  waterPostStick?: Maybe<Scalars['String']['output']>;
  waterPostStickUnit?: Maybe<Scalars['String']['output']>;
  waterPreStick?: Maybe<Scalars['String']['output']>;
  waterPreStickUnit?: Maybe<Scalars['String']['output']>;
  waterReadings?: Maybe<Scalars['JSON']['output']>;
};

/** Compartment Instance Input */
export type CompartmentInstanceInput = {
  /** Post stick measurement. */
  afterStick?: InputMaybe<Scalars['String']['input']>;
  /** Post stick measurment unit. */
  afterStickUnit?: InputMaybe<Scalars['String']['input']>;
  /** Pre stick measurement. */
  beforeStick?: InputMaybe<Scalars['String']['input']>;
  /** Pre stick measurment unit. */
  beforeStickUnit?: InputMaybe<Scalars['String']['input']>;
  /** Compartment ID. */
  compartmentId?: InputMaybe<Scalars['ID']['input']>;
  /** CompartmentInstance ID. */
  id?: InputMaybe<Scalars['ID']['input']>;
  /** Product ID. */
  productId?: InputMaybe<Scalars['ID']['input']>;
  /** Required in case of Source Compartment while updating DeliveryOrderLineItem */
  volume?: InputMaybe<Scalars['Float']['input']>;
  /** Water post stick measurement. */
  waterPostStick?: InputMaybe<Scalars['String']['input']>;
  /** Water post stick measurment unit. */
  waterPostStickUnit?: InputMaybe<Scalars['String']['input']>;
  /** Water pre stick measurement. */
  waterPreStick?: InputMaybe<Scalars['String']['input']>;
  /** Water pre stick measurment unit. */
  waterPreStickUnit?: InputMaybe<Scalars['String']['input']>;
  /** Miscellaneous data. Example: Chlorine content in water. */
  waterReadings?: InputMaybe<Scalars['JSON']['input']>;
};

/** Updating transfer orders assets */
export type CompartmentMappingInput = {
  /** ID of new compartment */
  compartmentId?: InputMaybe<Scalars['ID']['input']>;
  /** ID of old compartment */
  oldCompartmentId?: InputMaybe<Scalars['ID']['input']>;
};

export type Coordinates = {
  __typename?: 'Coordinates';
  lat?: Maybe<Scalars['String']['output']>;
  lng?: Maybe<Scalars['String']['output']>;
};

/** Autogenerated input type of CopyPreviousRecords */
export type CopyPreviousRecordsInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  effectiveEndTimestamp: Scalars['Int']['input'];
  effectiveStartTimestamp: Scalars['Int']['input'];
};

/** Autogenerated return type of CopyPreviousRecords */
export type CopyPreviousRecordsPayload = {
  __typename?: 'CopyPreviousRecordsPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  success: Scalars['Boolean']['output'];
};

/** Create asset input */
export type CreateAssetInput = {
  /** Use this for multiple locations. */
  assetMovementLocationsAttributes?: InputMaybe<Array<AssetMovementLocationInput>>;
  assetProductCategoriesAttributes?: InputMaybe<Array<NestedAssetProductCategoryInput>>;
  assetsPeripheralsAttributes?: InputMaybe<Array<AssetsPeripheralInput>>;
  category: AssetCategoryEnum;
  color?: InputMaybe<Scalars['String']['input']>;
  compartmentsAttributes?: InputMaybe<Array<NestedCompartmentInput>>;
  completeMovementOrder?: InputMaybe<Scalars['Boolean']['input']>;
  costOfTank?: InputMaybe<Scalars['Float']['input']>;
  customerBranchId?: InputMaybe<Scalars['ID']['input']>;
  customerId: Scalars['ID']['input'];
  description?: InputMaybe<Scalars['String']['input']>;
  erpId?: InputMaybe<Scalars['String']['input']>;
  /** Send form_type in CamelCase example: rental asset would be RentalAsset */
  formType?: InputMaybe<Scalars['String']['input']>;
  fuelCategories?: InputMaybe<Array<Scalars['String']['input']>>;
  hubResourcesAttributes?: InputMaybe<Array<HubResourceInput>>;
  lat?: InputMaybe<Scalars['String']['input']>;
  licensePlateNumber: Scalars['String']['input'];
  lineOfServiceIds?: InputMaybe<Array<Scalars['ID']['input']>>;
  lng?: InputMaybe<Scalars['String']['input']>;
  make?: InputMaybe<Scalars['String']['input']>;
  marketValue?: InputMaybe<Scalars['Float']['input']>;
  model?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  pandaDocuments?: InputMaybe<Array<NestedPandaDocumentsInput>>;
  purchasedOn?: InputMaybe<Scalars['ISO8601DateTime']['input']>;
  sites?: InputMaybe<Array<SiteInput>>;
  status: AssetStatusEnum;
  subscriptionsAttributes?: InputMaybe<Array<NestedSubscriptionsInput>>;
  tankSize?: InputMaybe<Scalars['String']['input']>;
  tankType?: InputMaybe<Scalars['String']['input']>;
  terminals?: InputMaybe<Array<NestedTerminalInput>>;
  type?: InputMaybe<Scalars['String']['input']>;
  useInDelivery?: InputMaybe<Scalars['Boolean']['input']>;
  vin?: InputMaybe<Scalars['String']['input']>;
  year?: InputMaybe<Scalars['Int']['input']>;
};

/** Autogenerated input type of CreateAssets */
export type CreateAssetsInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: CreateAssetInput;
};

/** Autogenerated return type of CreateAssets */
export type CreateAssetsPayload = {
  __typename?: 'CreateAssetsPayload';
  asset?: Maybe<Asset>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
};

/** Autogenerated input type of CreateAttachedAsset */
export type CreateAttachedAssetInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: CreateAttachedAssetsInput;
};

/** Autogenerated return type of CreateAttachedAsset */
export type CreateAttachedAssetPayload = {
  __typename?: 'CreateAttachedAssetPayload';
  attachedAsset?: Maybe<AttachedAsset>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
};

/** Tank Monitor attached assets input */
export type CreateAttachedAssetsInput = {
  assetId: Scalars['String']['input'];
  autoOrder?: InputMaybe<Scalars['Boolean']['input']>;
  detachedAt?: InputMaybe<Scalars['String']['input']>;
  deviceId?: InputMaybe<Scalars['ID']['input']>;
  hubIds?: InputMaybe<Array<Scalars['ID']['input']>>;
  minThreshold: Scalars['Float']['input'];
  orderConfirmation?: InputMaybe<Scalars['Boolean']['input']>;
  purchaseOrder?: InputMaybe<Scalars['Boolean']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  tankMonitorId?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated input type of CreateBolRetain */
export type CreateBolRetainInput = {
  bolRetainsAttributes: Array<BolRetainInput>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated return type of CreateBolRetain */
export type CreateBolRetainPayload = {
  __typename?: 'CreateBolRetainPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  result?: Maybe<Scalars['JSON']['output']>;
};

/** Create Brand input */
export type CreateBrandInput = {
  name: Scalars['String']['input'];
};

/** Autogenerated input type of CreateBrands */
export type CreateBrandsInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: CreateBrandInput;
};

/** Autogenerated return type of CreateBrands */
export type CreateBrandsPayload = {
  __typename?: 'CreateBrandsPayload';
  brand?: Maybe<Brand>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
};

/** Autogenerated input type of CreateCommonCarrier */
export type CreateCommonCarrierInput = {
  ccTenantAttributes: CcTenantInput;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  userAttributes: UserInput;
};

/** Autogenerated return type of CreateCommonCarrier */
export type CreateCommonCarrierPayload = {
  __typename?: 'CreateCommonCarrierPayload';
  ccTenant?: Maybe<CcTenant>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  errorMsg?: Maybe<Scalars['String']['output']>;
};

/** Autogenerated input type of CreateCustomerAsset */
export type CreateCustomerAssetInput = {
  alignment?: InputMaybe<Scalars['String']['input']>;
  capacityType?: InputMaybe<Scalars['String']['input']>;
  capacityUnit?: InputMaybe<Scalars['String']['input']>;
  capacityValue?: InputMaybe<Scalars['Float']['input']>;
  category: Scalars['String']['input'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  color?: InputMaybe<Scalars['String']['input']>;
  customerBranchId: Scalars['ID']['input'];
  deliveryOrderId?: InputMaybe<Scalars['ID']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  diameter?: InputMaybe<Scalars['Float']['input']>;
  length?: InputMaybe<Scalars['Float']['input']>;
  licensePlateNumber?: InputMaybe<Scalars['String']['input']>;
  make?: InputMaybe<Scalars['String']['input']>;
  model?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  pandaDocumentIds?: InputMaybe<Array<Scalars['Int']['input']>>;
  productId: Scalars['ID']['input'];
  productIds?: InputMaybe<Array<Scalars['ID']['input']>>;
  qrCodeText?: InputMaybe<Scalars['String']['input']>;
  requestedVolume?: InputMaybe<Scalars['Float']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  topOff?: InputMaybe<Scalars['Boolean']['input']>;
  type?: InputMaybe<DeliveryOrderLineItemTypeEnum>;
  vin?: InputMaybe<Scalars['String']['input']>;
  year?: InputMaybe<Scalars['Int']['input']>;
};

/** Autogenerated return type of CreateCustomerAsset */
export type CreateCustomerAssetPayload = {
  __typename?: 'CreateCustomerAssetPayload';
  asset?: Maybe<Asset>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  message: Scalars['String']['output'];
};

/** Create ShipTos input */
export type CreateCustomerBranchInput = {
  addressBooksAttributes?: InputMaybe<Array<AddressBookInput>>;
  applicableFeesAttributes?: InputMaybe<Array<UpdateApplicableFeeInput>>;
  attachBolOnDeliveryTicket?: InputMaybe<Scalars['Boolean']['input']>;
  autoEmailDeliveryTicket?: InputMaybe<Scalars['Boolean']['input']>;
  customerId: Scalars['ID']['input'];
  deliveryInstruction?: InputMaybe<Scalars['String']['input']>;
  erpId?: InputMaybe<Scalars['String']['input']>;
  hubResourcesAttributes?: InputMaybe<Array<HubResourceInput>>;
  isCustomerSignatureRequired?: InputMaybe<Scalars['Boolean']['input']>;
  lineOfServiceIds?: InputMaybe<Array<Scalars['ID']['input']>>;
  loadingAccountIds?: InputMaybe<Array<Scalars['ID']['input']>>;
  marketResourcesAttributes?: InputMaybe<Array<MarketResourceInput>>;
  name?: InputMaybe<Scalars['String']['input']>;
  pandaDocuments?: InputMaybe<Array<DirectAttachmentInput>>;
  pickupPointCodeIds?: InputMaybe<Array<Scalars['ID']['input']>>;
  poNumber?: InputMaybe<Scalars['String']['input']>;
  purchaseOrder?: InputMaybe<Scalars['Boolean']['input']>;
  purchaseOrderType?: InputMaybe<PurchaseOrderTypeEnum>;
  siteAttributes?: InputMaybe<SiteInput>;
  supplierIds?: InputMaybe<Array<Scalars['ID']['input']>>;
};

/** Autogenerated input type of CreateCustomerBranches */
export type CreateCustomerBranchesInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: CreateCustomerBranchInput;
};

/** Autogenerated return type of CreateCustomerBranches */
export type CreateCustomerBranchesPayload = {
  __typename?: 'CreateCustomerBranchesPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  customerBranch?: Maybe<CustomerBranch>;
};

/** Create customer input */
export type CreateCustomerInput = {
  address?: InputMaybe<Scalars['String']['input']>;
  applicableFeesAttributes?: InputMaybe<Array<UpdateApplicableFeeInput>>;
  creditChecked?: InputMaybe<Scalars['Boolean']['input']>;
  creditLimit?: InputMaybe<Scalars['String']['input']>;
  creditLimitDaysOverdueBuffer?: InputMaybe<Scalars['String']['input']>;
  creditLimitPercentageBuffer?: InputMaybe<Scalars['String']['input']>;
  currentBalance?: InputMaybe<Scalars['String']['input']>;
  customerBranchesAttributes?: InputMaybe<Array<NestedCustomerBranchInput>>;
  daysOverdue?: InputMaybe<Scalars['String']['input']>;
  deliveryInstruction?: InputMaybe<Scalars['String']['input']>;
  dueDate?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  erpId?: InputMaybe<Scalars['String']['input']>;
  fees?: InputMaybe<Array<NestedFeeInput>>;
  hubResourcesAttributes?: InputMaybe<Array<HubResourceInput>>;
  isTenant?: InputMaybe<Scalars['Boolean']['input']>;
  lineOfServiceIds?: InputMaybe<Array<Scalars['ID']['input']>>;
  marketResourcesAttributes?: InputMaybe<Array<MarketResourceInput>>;
  name: Scalars['String']['input'];
  originalCustomerId?: InputMaybe<Scalars['String']['input']>;
  poNumber?: InputMaybe<Scalars['String']['input']>;
  preferredDrivers?: InputMaybe<Array<NestedDriverInput>>;
  purchaseOrder?: InputMaybe<Scalars['Boolean']['input']>;
  purchaseOrderType?: InputMaybe<PurchaseOrderTypeEnum>;
  siteAttributes?: InputMaybe<SiteInput>;
  status?: InputMaybe<StatusEnum>;
  tankReadingThreshold?: InputMaybe<Scalars['Float']['input']>;
  usersAttributes?: InputMaybe<Array<NestedUserInput>>;
};

/** Autogenerated input type of CreateCustomerUsers */
export type CreateCustomerUsersInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: CustomerUserInput;
};

/** Autogenerated return type of CreateCustomerUsers */
export type CreateCustomerUsersPayload = {
  __typename?: 'CreateCustomerUsersPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  customerUser?: Maybe<CustomerUser>;
};

/** Autogenerated input type of CreateCustomers */
export type CreateCustomersInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: CreateCustomerInput;
};

/** Autogenerated return type of CreateCustomers */
export type CreateCustomersPayload = {
  __typename?: 'CreateCustomersPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  customer?: Maybe<Customer>;
};

/** Autogenerated input type of CreateDeliveryOrder */
export type CreateDeliveryOrderInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  deliveryOrderAttributes: DeliveryOrderInput;
  driverId: Scalars['ID']['input'];
  executionTime: Scalars['Int']['input'];
};

/** Autogenerated return type of CreateDeliveryOrder */
export type CreateDeliveryOrderPayload = {
  __typename?: 'CreateDeliveryOrderPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  orderGroup?: Maybe<OrderGroup>;
};

/** File information required to prepare a direct upload */
export type CreateDirectUpload = {
  /** File size (bytes) */
  byteSize: Scalars['Int']['input'];
  /** MD5 file checksum as base64 */
  checksum: Scalars['String']['input'];
  /** File content type */
  contentType: Scalars['String']['input'];
  /** Original file name */
  filename: Scalars['String']['input'];
};

/** Autogenerated input type of CreateDirectUpload */
export type CreateDirectUploadInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  input: CreateDirectUpload;
};

/** Create driver input */
export type CreateDriverInput = {
  contractSignDate?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  endDate?: InputMaybe<Scalars['String']['input']>;
  erpId?: InputMaybe<Scalars['String']['input']>;
  homeAddress?: InputMaybe<Scalars['String']['input']>;
  hubResourcesAttributes?: InputMaybe<Array<HubResourceInput>>;
  imageSignedBlobId?: InputMaybe<Scalars['ID']['input']>;
  licenceExpiryDate?: InputMaybe<Scalars['String']['input']>;
  lineOfServiceIds?: InputMaybe<Array<Scalars['ID']['input']>>;
  name: Scalars['String']['input'];
  paymentStrategy?: InputMaybe<Scalars['String']['input']>;
  phoneNumbersAttributes: Array<NestedPhoneInput>;
  reasonForLeaving?: InputMaybe<Scalars['String']['input']>;
  s3BackgroundCheckBlobId?: InputMaybe<Scalars['ID']['input']>;
  s3DriverApplicationBlobId?: InputMaybe<Scalars['ID']['input']>;
  s3H6BlobId?: InputMaybe<Scalars['ID']['input']>;
  s3Licenses?: InputMaybe<Array<LicenseInput>>;
  startDate?: InputMaybe<Scalars['String']['input']>;
  status: DriverStatusEnum;
};

/** Autogenerated input type of CreateDrivers */
export type CreateDriversInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: CreateDriverInput;
};

/** Autogenerated return type of CreateDrivers */
export type CreateDriversPayload = {
  __typename?: 'CreateDriversPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  driver?: Maybe<Driver>;
};

/** Create fee input */
export type CreateFeeInput = {
  applicableType?: InputMaybe<ApplicableTypeEnum>;
  applyAsOnFee?: InputMaybe<ApplyAsOnFeeEnum>;
  calculatedAsOnFee?: InputMaybe<CalculatedAsOnFeeEnum>;
  code?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  erpId?: InputMaybe<Scalars['String']['input']>;
  feeProductCategoriesAttributes?: InputMaybe<Array<FeeProductCategoryInput>>;
  feeType?: InputMaybe<FeeTypeEnum>;
  lineOfServiceIds?: InputMaybe<Array<Scalars['ID']['input']>>;
  lineOfServiceRecordsAttributes?: InputMaybe<Array<NestedLineOfServiceRecord>>;
  name: Scalars['String']['input'];
  nsManualVolume?: InputMaybe<Scalars['Boolean']['input']>;
  parentFeeId?: InputMaybe<Scalars['ID']['input']>;
  percentOnFee?: InputMaybe<Scalars['Float']['input']>;
  price?: InputMaybe<Scalars['Float']['input']>;
  productCategoryId?: InputMaybe<Scalars['ID']['input']>;
  rangeAttribute?: InputMaybe<Array<RangeAttributeInput>>;
  rangeCalculatedAsOnFee?: InputMaybe<CalculatedAsOnFeeEnum>;
  rangeTypeOnFee?: InputMaybe<RangeTypeOnFeeEnum>;
  rateOnFee?: InputMaybe<Scalars['Float']['input']>;
  rateUnitOnFee?: InputMaybe<RateUnitOnFeeEnum>;
};

/** Create feedback input */
export type CreateFeedbackInput = {
  content?: InputMaybe<Scalars['String']['input']>;
  rating?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated input type of CreateFeedbacks */
export type CreateFeedbacksInput = {
  attributes: CreateFeedbackInput;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated return type of CreateFeedbacks */
export type CreateFeedbacksPayload = {
  __typename?: 'CreateFeedbacksPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  feedback?: Maybe<Feedback>;
};

/** Autogenerated input type of CreateFees */
export type CreateFeesInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: CreateFeeInput;
};

/** Autogenerated return type of CreateFees */
export type CreateFeesPayload = {
  __typename?: 'CreateFeesPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  fee?: Maybe<Fee>;
};

/** Autogenerated input type of CreateGroup */
export type CreateGroupInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: CreateGroupsInput;
};

/** Autogenerated return type of CreateGroup */
export type CreateGroupPayload = {
  __typename?: 'CreateGroupPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  group?: Maybe<Group>;
};

/** Create Group Input */
export type CreateGroupsInput = {
  groupMembershipsAttributes?: InputMaybe<Array<NestedGroupMembershipInput>>;
  /** Id of Group */
  id?: InputMaybe<Scalars['ID']['input']>;
  name: Scalars['String']['input'];
};

/** Autogenerated input type of CreateLineOfServices */
export type CreateLineOfServicesInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: LineOfServiceInput;
};

/** Autogenerated return type of CreateLineOfServices */
export type CreateLineOfServicesPayload = {
  __typename?: 'CreateLineOfServicesPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  lineOfService?: Maybe<LineOfService>;
};

/** Autogenerated input type of CreateLoadingAccounts */
export type CreateLoadingAccountsInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: LoadingAccountInput;
};

/** Autogenerated return type of CreateLoadingAccounts */
export type CreateLoadingAccountsPayload = {
  __typename?: 'CreateLoadingAccountsPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  loadingAccount?: Maybe<LoadingAccount>;
};

/** Autogenerated input type of CreateLoadingOrder */
export type CreateLoadingOrderInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  driverId: Scalars['ID']['input'];
  executionTime: Scalars['Int']['input'];
  loadingOrderAttributes: LoadingOrderInput;
};

/** Autogenerated return type of CreateLoadingOrder */
export type CreateLoadingOrderPayload = {
  __typename?: 'CreateLoadingOrderPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  orderGroup?: Maybe<OrderGroup>;
};

/** Autogenerated input type of CreateMargin */
export type CreateMarginInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: CreateMarginsInput;
};

/** Autogenerated return type of CreateMargin */
export type CreateMarginPayload = {
  __typename?: 'CreateMarginPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  margin?: Maybe<Margin>;
};

/** Create Margin Input */
export type CreateMarginsInput = {
  marginRate?: InputMaybe<Scalars['Float']['input']>;
  marginType: MarginTypeEnum;
  marginUnit?: InputMaybe<RateUnitEnum>;
  name: Scalars['String']['input'];
  range?: InputMaybe<Array<MarginRangeAttributeInput>>;
};

/** Create market input */
export type CreateMarketInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  address?: InputMaybe<Scalars['String']['input']>;
  hubResourcesAttributes?: InputMaybe<Array<HubResourceInput>>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated input type of CreateMarkets */
export type CreateMarketsInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: CreateMarketInput;
};

/** Autogenerated return type of CreateMarkets */
export type CreateMarketsPayload = {
  __typename?: 'CreateMarketsPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  market?: Maybe<Market>;
};

/** Autogenerated input type of CreateMovementOrder */
export type CreateMovementOrderInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  movementOrderAttributes?: InputMaybe<MovementOrderInput>;
};

/** Autogenerated return type of CreateMovementOrder */
export type CreateMovementOrderPayload = {
  __typename?: 'CreateMovementOrderPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  movementOrder?: Maybe<MovementOrder>;
};

/** Autogenerated input type of CreateNote */
export type CreateNoteInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  content: Scalars['String']['input'];
  notableId: Scalars['ID']['input'];
  notableType: Scalars['String']['input'];
};

/** Autogenerated return type of CreateNote */
export type CreateNotePayload = {
  __typename?: 'CreateNotePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  note?: Maybe<Note>;
};

/** Autogenerated input type of CreateOrUpdateMovementOrderLineItem */
export type CreateOrUpdateMovementOrderLineItemInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  movementOrderLineAttributes?: InputMaybe<MovementOrderLineItemInput>;
};

/** Autogenerated return type of CreateOrUpdateMovementOrderLineItem */
export type CreateOrUpdateMovementOrderLineItemPayload = {
  __typename?: 'CreateOrUpdateMovementOrderLineItemPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  movementOrderLineItem: MovementOrderLineItem;
};

/** Autogenerated input type of CreateOrUpdateTransferOrderLineItem */
export type CreateOrUpdateTransferOrderLineItemInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  transferOrderLineAttributes?: InputMaybe<TransferOrderLineItemInput>;
};

/** Autogenerated return type of CreateOrUpdateTransferOrderLineItem */
export type CreateOrUpdateTransferOrderLineItemPayload = {
  __typename?: 'CreateOrUpdateTransferOrderLineItemPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  transferOrderLineItem: TransferOrderLineItem;
};

/** Autogenerated input type of CreateOrderGroup */
export type CreateOrderGroupInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  /** Order group input type. */
  orderGroupAttributes?: InputMaybe<OrderGroupInput>;
};

/** Autogenerated return type of CreateOrderGroup */
export type CreateOrderGroupPayload = {
  __typename?: 'CreateOrderGroupPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  /** Order group type. */
  orderGroup?: Maybe<OrderGroup>;
};

/** Autogenerated input type of CreateOrderGroups */
export type CreateOrderGroupsInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  /** Array of Order groups input. */
  orderGroupsAttributes: Array<OrderGroupInput>;
};

/** Autogenerated return type of CreateOrderGroups */
export type CreateOrderGroupsPayload = {
  __typename?: 'CreateOrderGroupsPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  orderGroups?: Maybe<Array<OrderGroup>>;
  orderLinks?: Maybe<Array<OrderLink>>;
};

/** Autogenerated input type of CreateOrderLink */
export type CreateOrderLinkInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: CreateOrderLinksInput;
};

/** Autogenerated return type of CreateOrderLink */
export type CreateOrderLinkPayload = {
  __typename?: 'CreateOrderLinkPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  orderLink?: Maybe<OrderLink>;
};

/** Create order link Input */
export type CreateOrderLinksInput = {
  deliveryOrderId: Scalars['ID']['input'];
  loadingOrderId: Scalars['ID']['input'];
};

/** Autogenerated input type of CreatePeripheral */
export type CreatePeripheralInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: PeripheralInput;
};

/** Autogenerated return type of CreatePeripheral */
export type CreatePeripheralPayload = {
  __typename?: 'CreatePeripheralPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  peripheral?: Maybe<Peripheral>;
};

/** Autogenerated input type of CreatePoc */
export type CreatePocInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  customerId: Scalars['ID']['input'];
  email: Scalars['String']['input'];
  name: Scalars['String']['input'];
  phone: Scalars['String']['input'];
};

/** Autogenerated return type of CreatePoc */
export type CreatePocPayload = {
  __typename?: 'CreatePocPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  poc?: Maybe<User>;
};

/** Autogenerated input type of CreatePricing */
export type CreatePricingInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: CreatePricingsInput;
};

/** Autogenerated return type of CreatePricing */
export type CreatePricingPayload = {
  __typename?: 'CreatePricingPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  pricing?: Maybe<Pricing>;
};

/** Create Rate Type input */
export type CreatePricingsInput = {
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  effectiveEndDate?: InputMaybe<Scalars['Int']['input']>;
  effectiveStartDate?: InputMaybe<Scalars['Int']['input']>;
  hubId?: InputMaybe<Scalars['ID']['input']>;
  marketId?: InputMaybe<Scalars['ID']['input']>;
  price?: InputMaybe<Scalars['Float']['input']>;
  productId?: InputMaybe<Scalars['ID']['input']>;
  rateTypeId: Scalars['ID']['input'];
  supplierId?: InputMaybe<Scalars['ID']['input']>;
  terminalId?: InputMaybe<Scalars['ID']['input']>;
};

/** Create product input */
export type CreateProductInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  barcode?: InputMaybe<Scalars['String']['input']>;
  brandId?: InputMaybe<Scalars['ID']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  erpId?: InputMaybe<Scalars['String']['input']>;
  hubResourceAttributes?: InputMaybe<HubResourceInput>;
  ignoreNsPush?: InputMaybe<Scalars['Boolean']['input']>;
  legalDescription?: InputMaybe<Scalars['String']['input']>;
  lineOfServiceIds?: InputMaybe<Array<Scalars['ID']['input']>>;
  longDescription?: InputMaybe<Scalars['String']['input']>;
  productCategoryId?: InputMaybe<Scalars['ID']['input']>;
  productConstituentsAttributes?: InputMaybe<Array<NestedProductConstituentsInput>>;
  productResourcesAttributes?: InputMaybe<Array<NestedProductResourceInput>>;
  productSubCategoryId?: InputMaybe<Scalars['ID']['input']>;
  productType: ProductTypeEnum;
  shortName?: InputMaybe<Scalars['String']['input']>;
  soldAs?: InputMaybe<Scalars['String']['input']>;
  unit?: InputMaybe<UnitEnum>;
};

/** Autogenerated input type of CreateProducts */
export type CreateProductsInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: CreateProductInput;
};

/** Autogenerated return type of CreateProducts */
export type CreateProductsPayload = {
  __typename?: 'CreateProductsPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  product?: Maybe<Product>;
};

/** Autogenerated input type of CreateRate */
export type CreateRateInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: CreateRateTypeInput;
};

/** Autogenerated return type of CreateRate */
export type CreateRatePayload = {
  __typename?: 'CreateRatePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  rateType?: Maybe<RateType>;
};

/** Create Rate Type input */
export type CreateRateTypeInput = {
  description?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  operation: RateTypeOperationEnum;
  status?: InputMaybe<RateTypeStatusEnum>;
};

/** Autogenerated input type of CreateResourcePricing */
export type CreateResourcePricingInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: CreateResourcePricingsInput;
};

/** Autogenerated return type of CreateResourcePricing */
export type CreateResourcePricingPayload = {
  __typename?: 'CreateResourcePricingPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  resourcePricing?: Maybe<ResourcePricing>;
};

/** Create Resource Pricings Input */
export type CreateResourcePricingsInput = {
  /** ApplicableMargin object. */
  applicableMarginsAttributes?: InputMaybe<Array<ApplicableMarginsInput>>;
  /** ApplicableTax object. */
  applicableTaxesAttributes?: InputMaybe<Array<ApplicableTaxesInput>>;
  discount?: InputMaybe<Scalars['Float']['input']>;
  discountUnit?: InputMaybe<RateUnitEnum>;
  pocEmail?: InputMaybe<Scalars['String']['input']>;
  pocName?: InputMaybe<Scalars['String']['input']>;
  pocPhone?: InputMaybe<Scalars['String']['input']>;
  /** PriceConfiguration object. */
  priceConfigurationsAttributes?: InputMaybe<Array<PriceConfigurationInput>>;
  /** Deprecated: Use productCategoryResourcesAttributes */
  productCategoryId?: InputMaybe<Scalars['ID']['input']>;
  /** Product Category Resource object. */
  productCategoryResourcesAttributes?: InputMaybe<Array<ProductCategoryResourceInput>>;
  rateTypeId?: InputMaybe<Scalars['ID']['input']>;
  resourceId?: InputMaybe<Scalars['ID']['input']>;
  resourceType?: InputMaybe<ResourcePricingEnum>;
};

/** Autogenerated input type of CreateSetting */
export type CreateSettingInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  value: Scalars['String']['input'];
};

/** Autogenerated return type of CreateSetting */
export type CreateSettingPayload = {
  __typename?: 'CreateSettingPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  setting?: Maybe<Setting>;
};

/** Autogenerated input type of CreateShift */
export type CreateShiftInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  /** Shift input type. */
  shiftAttributes?: InputMaybe<ShiftCreateInput>;
};

/** Autogenerated return type of CreateShift */
export type CreateShiftPayload = {
  __typename?: 'CreateShiftPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  /** Shift type. */
  shift?: Maybe<Shift>;
};

/** Autogenerated input type of CreateSiteRecurrence */
export type CreateSiteRecurrenceInput = {
  ccTenantId?: InputMaybe<Scalars['ID']['input']>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  customerBranchId: Scalars['ID']['input'];
  customerId: Scalars['ID']['input'];
  driverId?: InputMaybe<Scalars['ID']['input']>;
  hubId?: InputMaybe<Scalars['ID']['input']>;
  recurrence: RecurrenceInput;
  recurrenceAssets?: InputMaybe<Array<RecurrenceAssetsInput>>;
  startOnTimestamp?: InputMaybe<Scalars['Int']['input']>;
};

/** Autogenerated return type of CreateSiteRecurrence */
export type CreateSiteRecurrencePayload = {
  __typename?: 'CreateSiteRecurrencePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  orderGroup?: Maybe<OrderGroup>;
};

/** Create supplier input */
export type CreateSupplierInput = {
  erpId?: InputMaybe<Scalars['String']['input']>;
  lineOfServiceIds?: InputMaybe<Array<Scalars['ID']['input']>>;
  loadingAccountsAttributes?: InputMaybe<Array<NestedLoadingAccountInput>>;
  name: Scalars['String']['input'];
  supplierCode?: InputMaybe<Scalars['String']['input']>;
  terminalsSuppliersAttributes?: InputMaybe<Array<NestedTerminalSupplierInput>>;
};

/** Autogenerated input type of CreateSuppliers */
export type CreateSuppliersInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: CreateSupplierInput;
};

/** Autogenerated return type of CreateSuppliers */
export type CreateSuppliersPayload = {
  __typename?: 'CreateSuppliersPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  supplier?: Maybe<Supplier>;
};

/** Autogenerated input type of CreateTax */
export type CreateTaxInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: CreateTaxesInput;
};

/** Autogenerated return type of CreateTax */
export type CreateTaxPayload = {
  __typename?: 'CreateTaxPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  tax?: Maybe<Tax>;
};

/** Create Tax Input */
export type CreateTaxesInput = {
  marketId?: InputMaybe<Scalars['ID']['input']>;
  name: Scalars['String']['input'];
  productCategoryId?: InputMaybe<Scalars['ID']['input']>;
  rateInCurrency?: InputMaybe<Scalars['Float']['input']>;
  rateInPercent?: InputMaybe<Scalars['Float']['input']>;
  rateType: RateUnitEnum;
};

/** Autogenerated input type of CreateTerminals */
export type CreateTerminalsInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: TerminalInput;
};

/** Autogenerated return type of CreateTerminals */
export type CreateTerminalsPayload = {
  __typename?: 'CreateTerminalsPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  terminal?: Maybe<Terminal>;
};

/** Autogenerated input type of CreateTerminalsSuppliers */
export type CreateTerminalsSuppliersInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: TerminalsSupplierInput;
};

/** Autogenerated return type of CreateTerminalsSuppliers */
export type CreateTerminalsSuppliersPayload = {
  __typename?: 'CreateTerminalsSuppliersPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  terminalsSupplier?: Maybe<TerminalsSupplier>;
};

/** Autogenerated input type of CreateTransferOrder */
export type CreateTransferOrderInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  transferOrderAttributes?: InputMaybe<TransferOrderInput>;
};

/** Autogenerated return type of CreateTransferOrder */
export type CreateTransferOrderPayload = {
  __typename?: 'CreateTransferOrderPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  transferOrder?: Maybe<TransferOrder>;
};

export type Current = {
  __typename?: 'Current';
  accessibleCustomers: Array<Customer>;
  customer?: Maybe<Customer>;
  features: Array<Scalars['String']['output']>;
  isCustomerClient: Scalars['Boolean']['output'];
  pusherChannelName?: Maybe<Scalars['String']['output']>;
  settingFeatures: Array<Scalars['String']['output']>;
  settings: Array<Setting>;
  tenant?: Maybe<Tenant>;
  user: User;
};

export type Customer = {
  __typename?: 'Customer';
  address?: Maybe<Scalars['String']['output']>;
  addressBooks?: Maybe<Array<AddressBook>>;
  applicableFees?: Maybe<Array<ApplicableFee>>;
  assets?: Maybe<Array<Asset>>;
  creditChecked?: Maybe<Scalars['Boolean']['output']>;
  creditLimit?: Maybe<Scalars['String']['output']>;
  creditLimitDaysOverdueBuffer?: Maybe<Scalars['String']['output']>;
  creditLimitPercentageBuffer?: Maybe<Scalars['String']['output']>;
  currentBalance?: Maybe<Scalars['String']['output']>;
  customerBranches?: Maybe<Array<CustomerBranch>>;
  data?: Maybe<Scalars['String']['output']>;
  daysOverdue?: Maybe<Scalars['String']['output']>;
  deliveryInstruction?: Maybe<Scalars['String']['output']>;
  deliveryOrders?: Maybe<Array<DeliveryOrder>>;
  dueDate?: Maybe<Scalars['String']['output']>;
  erpId?: Maybe<Scalars['String']['output']>;
  fees?: Maybe<Array<Fee>>;
  hubResources?: Maybe<Array<HubResource>>;
  hubs?: Maybe<Array<Hub>>;
  id: Scalars['ID']['output'];
  isTenant?: Maybe<Scalars['Boolean']['output']>;
  lastOrderGroup?: Maybe<OrderGroup>;
  lineOfServices?: Maybe<Array<LineOfService>>;
  marketResources?: Maybe<Array<MarketResource>>;
  markets?: Maybe<Array<Market>>;
  name?: Maybe<Scalars['String']['output']>;
  netsuiteId?: Maybe<Scalars['ID']['output']>;
  netsuiteName?: Maybe<Scalars['String']['output']>;
  nonEditableRecords?: Maybe<Array<Scalars['JSON']['output']>>;
  poNumber?: Maybe<Scalars['String']['output']>;
  preferredDrivers?: Maybe<Array<Worker>>;
  purchaseOrder?: Maybe<Scalars['Boolean']['output']>;
  purchaseOrderType?: Maybe<PurchaseOrderTypeEnum>;
  site?: Maybe<Site>;
  status?: Maybe<Scalars['Int']['output']>;
  tankReadingThreshold?: Maybe<Scalars['Float']['output']>;
  tenantSlug?: Maybe<Scalars['String']['output']>;
  upcomingOrderGroup?: Maybe<OrderGroup>;
  users?: Maybe<Array<User>>;
};


export type CustomerDeliveryOrdersArgs = {
  last?: InputMaybe<Scalars['Int']['input']>;
};

export type CustomerBranch = {
  __typename?: 'CustomerBranch';
  address?: Maybe<Scalars['String']['output']>;
  addressBooks?: Maybe<Array<AddressBook>>;
  applicableFees?: Maybe<Array<ApplicableFee>>;
  assets?: Maybe<Array<Asset>>;
  attachBolOnDeliveryTicket: Scalars['Boolean']['output'];
  autoEmailDeliveryTicket: Scalars['Boolean']['output'];
  customer?: Maybe<Customer>;
  deliveryInstruction?: Maybe<Scalars['String']['output']>;
  deliveryOrders?: Maybe<Array<DeliveryOrder>>;
  email?: Maybe<Scalars['String']['output']>;
  erpId?: Maybe<Scalars['String']['output']>;
  hubResources?: Maybe<Array<HubResource>>;
  hubs?: Maybe<Array<Hub>>;
  id: Scalars['ID']['output'];
  isCustomerSignatureRequired: Scalars['Boolean']['output'];
  lineOfServices?: Maybe<Array<LineOfService>>;
  loadingAccounts?: Maybe<Array<LoadingAccount>>;
  marketResources?: Maybe<Array<MarketResource>>;
  markets?: Maybe<Array<Market>>;
  name?: Maybe<Scalars['String']['output']>;
  netsuiteId?: Maybe<Scalars['ID']['output']>;
  netsuiteName?: Maybe<Scalars['String']['output']>;
  nonEditableRecords?: Maybe<Array<Scalars['JSON']['output']>>;
  orderedProductsAverage?: Maybe<Array<OrderedProductsAverage>>;
  pandaDocuments?: Maybe<Array<PandaDocument>>;
  phone?: Maybe<Scalars['String']['output']>;
  pickupPointCodes?: Maybe<Array<PickupPointCode>>;
  poNumber?: Maybe<Scalars['String']['output']>;
  purchaseOrder?: Maybe<Scalars['Boolean']['output']>;
  purchaseOrderType?: Maybe<PurchaseOrderTypeEnum>;
  qbAddress?: Maybe<Scalars['String']['output']>;
  qbName?: Maybe<Scalars['String']['output']>;
  site?: Maybe<Site>;
  storageAssets?: Maybe<Array<Asset>>;
  suppliers?: Maybe<Array<Supplier>>;
};


export type CustomerBranchDeliveryOrdersArgs = {
  last?: InputMaybe<Scalars['Int']['input']>;
  lineItemStatus?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type CustomerBranchCollection = {
  __typename?: 'CustomerBranchCollection';
  collection: Array<CustomerBranch>;
  metadata: MetaQuery;
};

export type CustomerBranchFilter = {
  all?: InputMaybe<Scalars['String']['input']>;
  customerId?: InputMaybe<Scalars['ID']['input']>;
  isTenant?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  or?: InputMaybe<Array<CustomerBranchFilter>>;
};

export type CustomerBranchSorter = {
  field: CustomerBranchSorterEnum;
  order?: InputMaybe<FieldOrder>;
};

/** Enum to use on sorter fields when call a query */
export enum CustomerBranchSorterEnum {
  Erpid = 'ERPID',
  Name = 'NAME'
}

export type CustomerCollection = {
  __typename?: 'CustomerCollection';
  collection: Array<Customer>;
  metadata: MetaQuery;
};

export type CustomerFilter = {
  /** Fetch only active customers */
  active?: InputMaybe<Scalars['Boolean']['input']>;
  hubIds?: InputMaybe<Array<Scalars['ID']['input']>>;
  name?: InputMaybe<Scalars['String']['input']>;
  or?: InputMaybe<Array<CustomerFilter>>;
  tenant?: InputMaybe<Scalars['Boolean']['input']>;
};

/** Customer Portal Invitation input */
export type CustomerPortalInput = {
  /** Attachment with name and url */
  attachments?: InputMaybe<Array<EmailAttachmentInput>>;
  /** BCC Receivers' Email */
  bcc?: InputMaybe<Array<Scalars['String']['input']>>;
  /** Email's body */
  body?: InputMaybe<Scalars['String']['input']>;
  /** CC Receivers' Email */
  cc?: InputMaybe<Array<Scalars['String']['input']>>;
  /** Sender Email */
  from?: InputMaybe<Scalars['String']['input']>;
  /** Customer Portal Access */
  hasAccessToCustomerPortal: Scalars['Boolean']['input'];
  /** Address Book Id */
  id: Scalars['ID']['input'];
  /** Email's Subject */
  subject?: InputMaybe<Scalars['String']['input']>;
  /** Receivers' Email */
  to?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type CustomerUser = {
  __typename?: 'CustomerUser';
  customer?: Maybe<Customer>;
  customerBranch?: Maybe<CustomerBranch>;
  hubResources?: Maybe<Array<HubResource>>;
  hubs?: Maybe<Array<Hub>>;
  id: Scalars['ID']['output'];
  lineOfServices?: Maybe<Array<LineOfService>>;
  user?: Maybe<User>;
};

export type CustomerUserCollection = {
  __typename?: 'CustomerUserCollection';
  collection: Array<CustomerUser>;
  metadata: MetaQuery;
};

export type CustomerUserFilter = {
  all?: InputMaybe<Scalars['String']['input']>;
  customerId?: InputMaybe<Scalars['ID']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  or?: InputMaybe<Array<CustomerUserFilter>>;
  userId?: InputMaybe<Scalars['ID']['input']>;
};

/** Default customer user Input */
export type CustomerUserInput = {
  customerBranchId?: InputMaybe<Scalars['ID']['input']>;
  customerId?: InputMaybe<Scalars['ID']['input']>;
  hubResourcesAttributes?: InputMaybe<Array<HubResourceInput>>;
  lineOfServiceIds?: InputMaybe<Array<Scalars['ID']['input']>>;
  userAttributes?: InputMaybe<NestedUserAttributesInput>;
};

export type CustomerUserSorter = {
  field: CustomerUserSorterEnum;
  order?: InputMaybe<FieldOrder>;
};

/** Enum to use on sorter fields when call a query */
export enum CustomerUserSorterEnum {
  Email = 'EMAIL',
  Phone = 'PHONE',
  Username = 'USERNAME'
}

export type DataImport = {
  __typename?: 'DataImport';
  createdAtTimestamp?: Maybe<Scalars['Int']['output']>;
  errorFileUrl?: Maybe<Scalars['String']['output']>;
  filename?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  importableId?: Maybe<Scalars['ID']['output']>;
  importableType?: Maybe<ImportableTypeEnum>;
  pandaDocumentId?: Maybe<Scalars['ID']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  user?: Maybe<User>;
};

/** Enum for order groups recurrence days of week */
export enum DaysOfWeek {
  /** Friday */
  Friday = 'friday',
  /** Monday */
  Monday = 'monday',
  /** Saturday */
  Saturday = 'saturday',
  /** Sunday */
  Sunday = 'sunday',
  /** Thursday */
  Thursday = 'thursday',
  /** Tuesday */
  Tuesday = 'tuesday',
  /** Wednesday */
  Wednesday = 'wednesday'
}

export type Deed = {
  __typename?: 'Deed';
  appBuild?: Maybe<Scalars['String']['output']>;
  appOta?: Maybe<Scalars['String']['output']>;
  appVersion?: Maybe<Scalars['String']['output']>;
  authorization?: Maybe<Scalars['String']['output']>;
  batteryLevel?: Maybe<Scalars['String']['output']>;
  brand?: Maybe<Scalars['String']['output']>;
  controllerAction?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['ISO8601DateTime']['output']>;
  id: Scalars['ID']['output'];
  ip?: Maybe<Scalars['String']['output']>;
  isLocationEnabled?: Maybe<Scalars['String']['output']>;
  isLocationPermissionEnabled?: Maybe<Scalars['String']['output']>;
  lowPowerMode?: Maybe<Scalars['String']['output']>;
  mac?: Maybe<Scalars['String']['output']>;
  model?: Maybe<Scalars['String']['output']>;
  os?: Maybe<Scalars['String']['output']>;
  osVersion?: Maybe<Scalars['String']['output']>;
};

/** Delay Input */
export type DelayInput = {
  delayNote: Scalars['String']['input'];
};

/** Autogenerated input type of DeleteAssets */
export type DeleteAssetsInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
};

/** Autogenerated return type of DeleteAssets */
export type DeleteAssetsPayload = {
  __typename?: 'DeleteAssetsPayload';
  asset?: Maybe<Asset>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
};

/** Autogenerated input type of DeleteBrands */
export type DeleteBrandsInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
};

/** Autogenerated return type of DeleteBrands */
export type DeleteBrandsPayload = {
  __typename?: 'DeleteBrandsPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  response?: Maybe<DeleteResponse>;
};

/** Autogenerated input type of DeleteCustomerBranches */
export type DeleteCustomerBranchesInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
};

/** Autogenerated return type of DeleteCustomerBranches */
export type DeleteCustomerBranchesPayload = {
  __typename?: 'DeleteCustomerBranchesPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  response?: Maybe<DeleteResponse>;
};

/** Autogenerated input type of DeleteDeliveryOrder */
export type DeleteDeliveryOrderInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
};

/** Autogenerated return type of DeleteDeliveryOrder */
export type DeleteDeliveryOrderPayload = {
  __typename?: 'DeleteDeliveryOrderPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  orderGroup?: Maybe<OrderGroup>;
};

/** Autogenerated input type of DeleteFees */
export type DeleteFeesInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
};

/** Autogenerated return type of DeleteFees */
export type DeleteFeesPayload = {
  __typename?: 'DeleteFeesPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  response?: Maybe<DeleteResponse>;
};

/** Autogenerated input type of DeleteLoadingOrder */
export type DeleteLoadingOrderInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
};

/** Autogenerated return type of DeleteLoadingOrder */
export type DeleteLoadingOrderPayload = {
  __typename?: 'DeleteLoadingOrderPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  orderGroup?: Maybe<OrderGroup>;
};

/** Autogenerated input type of DeleteMovementOrder */
export type DeleteMovementOrderInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
};

/** Autogenerated return type of DeleteMovementOrder */
export type DeleteMovementOrderPayload = {
  __typename?: 'DeleteMovementOrderPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  orderGroup?: Maybe<OrderGroup>;
};

/** Autogenerated input type of DeleteOrderLink */
export type DeleteOrderLinkInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data?: InputMaybe<DeleteOrderLinksInput>;
  id?: InputMaybe<Scalars['ID']['input']>;
};

/** Autogenerated return type of DeleteOrderLink */
export type DeleteOrderLinkPayload = {
  __typename?: 'DeleteOrderLinkPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  orderLink?: Maybe<OrderLink>;
  success?: Maybe<Scalars['Boolean']['output']>;
};

/** Delete order link Input */
export type DeleteOrderLinksInput = {
  deliveryOrderId?: InputMaybe<Scalars['ID']['input']>;
  loadingOrderId?: InputMaybe<Scalars['ID']['input']>;
  transferOrderId?: InputMaybe<Scalars['ID']['input']>;
};

/** Enum for delete panda price resource */
export enum DeletePandaPriceResourceEnum {
  /** Panda Price Rate Type */
  RateType = 'rate_type'
}

/** Autogenerated input type of DeletePandaPriceResource */
export type DeletePandaPriceResourceInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  ids: Array<Scalars['ID']['input']>;
  resource: DeletePandaPriceResourceEnum;
};

/** Autogenerated return type of DeletePandaPriceResource */
export type DeletePandaPriceResourcePayload = {
  __typename?: 'DeletePandaPriceResourcePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  result?: Maybe<Scalars['JSON']['output']>;
};

/** Autogenerated input type of DeletePeripheral */
export type DeletePeripheralInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
};

/** Autogenerated return type of DeletePeripheral */
export type DeletePeripheralPayload = {
  __typename?: 'DeletePeripheralPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  message?: Maybe<Scalars['String']['output']>;
  peripheral?: Maybe<Peripheral>;
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type DeletePricingResponse = {
  __typename?: 'DeletePricingResponse';
  error?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  success: Scalars['Boolean']['output'];
};

/** Enum for resource */
export enum DeleteResourceEnum {
  /** Bol Retain */
  BolRetain = 'bol_retain',
  /** Market */
  Market = 'market',
  /** Movement Order */
  MovementOrder = 'movement_order',
  /** Panda Document */
  PandaDocument = 'panda_document',
  /** Preferred Supplier */
  PreferredSupplier = 'preferred_supplier'
}

/** Autogenerated input type of DeleteResource */
export type DeleteResourceInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  ids: Array<Scalars['ID']['input']>;
  resource: DeleteResourceEnum;
};

/** Autogenerated return type of DeleteResource */
export type DeleteResourcePayload = {
  __typename?: 'DeleteResourcePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  result?: Maybe<Scalars['JSON']['output']>;
};

export type DeleteResponse = {
  __typename?: 'DeleteResponse';
  error?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  success: Scalars['Boolean']['output'];
};

/** Autogenerated input type of DeleteShiftPlan */
export type DeleteShiftPlanInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
};

/** Autogenerated return type of DeleteShiftPlan */
export type DeleteShiftPlanPayload = {
  __typename?: 'DeleteShiftPlanPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  shiftPlan?: Maybe<ShiftPlan>;
};

/** Autogenerated input type of DeleteSiteRecurrence */
export type DeleteSiteRecurrenceInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  ids: Array<Scalars['ID']['input']>;
};

/** Autogenerated return type of DeleteSiteRecurrence */
export type DeleteSiteRecurrencePayload = {
  __typename?: 'DeleteSiteRecurrencePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  success?: Maybe<Scalars['Boolean']['output']>;
};

/** Autogenerated input type of DeleteSuppliers */
export type DeleteSuppliersInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
};

/** Autogenerated return type of DeleteSuppliers */
export type DeleteSuppliersPayload = {
  __typename?: 'DeleteSuppliersPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  supplier?: Maybe<Supplier>;
};

/** Autogenerated input type of DeleteTerminals */
export type DeleteTerminalsInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
};

/** Autogenerated return type of DeleteTerminals */
export type DeleteTerminalsPayload = {
  __typename?: 'DeleteTerminalsPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  terminal?: Maybe<Terminal>;
};

/** Autogenerated input type of DeleteTransferOrder */
export type DeleteTransferOrderInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
};

/** Autogenerated return type of DeleteTransferOrder */
export type DeleteTransferOrderPayload = {
  __typename?: 'DeleteTransferOrderPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  orderGroup?: Maybe<OrderGroup>;
};

export type DeliveryAsset = {
  __typename?: 'DeliveryAsset';
  /** @deprecated Not available anymore */
  activeInspectionForm?: Maybe<Array<DvirBeCompatibilitySupport>>;
  activeShift?: Maybe<Shift>;
  assetProductCategories?: Maybe<Array<AssetProductCategory>>;
  category?: Maybe<Scalars['String']['output']>;
  color?: Maybe<Scalars['String']['output']>;
  compartments?: Maybe<Array<Compartment>>;
  erpId?: Maybe<Scalars['String']['output']>;
  /** Link with Hub */
  hubResources?: Maybe<Array<HubResource>>;
  /** Associated hubs */
  hubs?: Maybe<Array<Hub>>;
  id: Scalars['ID']['output'];
  licensePlateNumber?: Maybe<Scalars['String']['output']>;
  make?: Maybe<Scalars['String']['output']>;
  model?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  qrCodeText?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['Int']['output']>;
  vin?: Maybe<Scalars['String']['output']>;
  year?: Maybe<Scalars['Int']['output']>;
};


export type DeliveryAssetCompartmentsArgs = {
  deletedAfter?: InputMaybe<Scalars['Int']['input']>;
  includeDeleted?: InputMaybe<Scalars['Boolean']['input']>;
};

export type DeliveryAssetCollection = {
  __typename?: 'DeliveryAssetCollection';
  collection: Array<DeliveryAsset>;
  metadata: MetaQuery;
};

export type DeliveryAssetFilter = {
  all?: InputMaybe<Scalars['String']['input']>;
  hubIds?: InputMaybe<Array<Scalars['ID']['input']>>;
  ids?: InputMaybe<Array<Scalars['ID']['input']>>;
  or?: InputMaybe<Array<DeliveryAssetFilter>>;
};

export type DeliveryOrder = {
  __typename?: 'DeliveryOrder';
  customerBranch?: Maybe<CustomerBranch>;
  data?: Maybe<Scalars['JSON']['output']>;
  deliveryDate?: Maybe<Scalars['ISO8601Date']['output']>;
  deliveryDateTimestamp?: Maybe<Scalars['Int']['output']>;
  deliveryInstruction?: Maybe<Scalars['String']['output']>;
  deliveryOrderLineItems: Array<DeliveryOrderLineItem>;
  expectedDeliveryTimeTimestamp?: Maybe<Scalars['Int']['output']>;
  id: Scalars['ID']['output'];
  lineItemSummary?: Maybe<Array<LineItem>>;
  lineItems: Array<DeliveryOrderLineItem>;
  linkedOrders?: Maybe<Array<LoadingOrder>>;
  notes?: Maybe<Array<Note>>;
  orderGroup?: Maybe<OrderGroup>;
  orderGroupId?: Maybe<Scalars['Int']['output']>;
  orderLinks?: Maybe<Array<OrderLink>>;
  orderNumber?: Maybe<Scalars['String']['output']>;
  orderedProductsSummary?: Maybe<Array<DeliveryOrderOrderedProductsSummary>>;
  postDeliveryNote?: Maybe<Note>;
  /** @deprecated We have mutiple post delivery photos. Use postDeliveryPhotos */
  postDeliveryPhoto?: Maybe<PandaDocument>;
  postDeliveryPhotos?: Maybe<Array<PandaDocument>>;
  products?: Maybe<Array<Product>>;
  quickbookQueueStatus?: Maybe<Scalars['String']['output']>;
  recentLoadingReceipts?: Maybe<Array<LoadingReceipt>>;
  signature?: Maybe<PandaDocument>;
  source?: Maybe<Scalars['String']['output']>;
  status: Scalars['String']['output'];
  /** @deprecated Dont use this. This uses too much resuorces. */
  task?: Maybe<Task>;
  /** @deprecated Dont use this. This uses too much resuorces. */
  tasks?: Maybe<Array<Task>>;
  tenantName?: Maybe<Scalars['String']['output']>;
  ticketId: Scalars['Int']['output'];
  ticketMailedAtTimestamp?: Maybe<Scalars['Int']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

/** DeliveryOrder Input */
export type DeliveryOrderInput = {
  /** Deprecated. DO NOT USE. */
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  /** Deprecated. DO NOT USE. */
  attachmentsAttributes?: InputMaybe<Array<AttachmentInput>>;
  /** Customer Branch/Site ID. */
  customerBranchId?: InputMaybe<Scalars['ID']['input']>;
  /** Descriptive delivery instructions. */
  deliveryInstruction?: InputMaybe<Scalars['String']['input']>;
  /** DeliveryOrderLineItemInput object. */
  deliveryOrderLineItemsAttributes?: InputMaybe<Array<DeliveryOrderLineItemInput>>;
  /** DeliveryOrder ID. */
  id?: InputMaybe<Scalars['ID']['input']>;
  /** AssetsInputs */
  newAssetsAttributes?: InputMaybe<Array<AssetInput>>;
  /** Delivery Note Input. */
  notesAttributes?: InputMaybe<Array<NoteInput>>;
  /** OrderGroupInput object. */
  orderGroup?: InputMaybe<OrderGroupInput>;
  /** Customer's purchase order number. */
  orderNumber?: InputMaybe<Scalars['String']['input']>;
  pandaDocuments?: InputMaybe<Array<DirectAttachmentInput>>;
  /** PandaDocumentInput object. */
  postDeliveryPhotosAttributes?: InputMaybe<Array<PandaDocumentInput>>;
  /** PandaDocumentInput object. */
  signatureAttributes?: InputMaybe<PandaDocumentInput>;
  /** Source of the DeliveryOrder */
  source?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<DeliveryOrderTypeEnum>;
};

export type DeliveryOrderLineItem = {
  __typename?: 'DeliveryOrderLineItem';
  asset?: Maybe<Asset>;
  canSyncRequestedLoadingVolume: Scalars['Boolean']['output'];
  data?: Maybe<Scalars['JSON']['output']>;
  id: Scalars['ID']['output'];
  isExtraction?: Maybe<Scalars['Boolean']['output']>;
  lat?: Maybe<Scalars['String']['output']>;
  lng?: Maybe<Scalars['String']['output']>;
  meterName?: Maybe<Scalars['String']['output']>;
  notes?: Maybe<Scalars['String']['output']>;
  product?: Maybe<Product>;
  requestedVolume?: Maybe<Scalars['Float']['output']>;
  skipReason?: Maybe<Scalars['String']['output']>;
  source: Scalars['String']['output'];
  sourceAssets?: Maybe<Array<SourceAsset>>;
  sourceCompartmentInstances?: Maybe<Array<CompartmentInstance>>;
  sourceCompartments?: Maybe<Array<SourceCompartment>>;
  status: Scalars['String']['output'];
  subscription?: Maybe<Subscription>;
  targetCompartmentInstance?: Maybe<CompartmentInstance>;
  topOff?: Maybe<Scalars['Boolean']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  volume?: Maybe<Scalars['Float']['output']>;
  warehouse?: Maybe<Terminal>;
  warehouseId?: Maybe<Scalars['ID']['output']>;
};

/** DeliveryOrderLineItem Input */
export type DeliveryOrderLineItemInput = {
  /** Deprecated. DO NOT USE. */
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  /** Asset ID. */
  assetId?: InputMaybe<Scalars['ID']['input']>;
  /** CompartmentInstanceInput object. */
  compartmentInstancesAttributes?: InputMaybe<Array<CompartmentInstanceInput>>;
  /** Customer Branch/Site ID. */
  customerBranchId?: InputMaybe<Scalars['ID']['input']>;
  /** Miscellaneous JSON data. */
  data?: InputMaybe<Scalars['JSON']['input']>;
  /** DeliveryOrderLineItem ID. */
  id?: InputMaybe<Scalars['ID']['input']>;
  lat?: InputMaybe<Scalars['String']['input']>;
  lng?: InputMaybe<Scalars['String']['input']>;
  /** Name of LCR meter */
  meterName?: InputMaybe<Scalars['String']['input']>;
  /** Add/Update Driver Notes. */
  notes?: InputMaybe<Scalars['String']['input']>;
  /** Product ID. */
  productId?: InputMaybe<Scalars['ID']['input']>;
  /** Requested volume. */
  requestedVolume?: InputMaybe<Scalars['Float']['input']>;
  /** Delivery skip reason. */
  skipReason?: InputMaybe<Scalars['String']['input']>;
  /** Source of the DeliveryOrderLineItem. */
  source?: InputMaybe<Scalars['String']['input']>;
  /** SourceCompartmentInput object. */
  sourceAssetsAttributes?: InputMaybe<Array<SourceAssetInput>>;
  /** SourceCompartmentInput object. */
  sourceCompartmentsAttributes?: InputMaybe<Array<SourceCompartmentInput>>;
  /** Status of the DeliveryOrderLineItem. */
  status?: InputMaybe<Scalars['String']['input']>;
  /** Subscription ID. */
  subscriptionId?: InputMaybe<Scalars['ID']['input']>;
  /** Whether top off was requested */
  topOff?: InputMaybe<Scalars['Boolean']['input']>;
  type?: InputMaybe<DeliveryOrderLineItemTypeEnum>;
  /** Flag parameter to specify whether to sync requested volume of loading order. */
  updateRequestedLoadingVolume?: InputMaybe<Scalars['Boolean']['input']>;
  /** Id of warehouse from which packaged product is to be loaded. */
  warehouseId?: InputMaybe<Scalars['ID']['input']>;
};

/** Enum to use for filter delivery order line item type */
export enum DeliveryOrderLineItemTypeEnum {
  /** Delivery order line item */
  DeliveryOrderLineItem = 'DeliveryOrderLineItem',
  /** Extraction order line item */
  ExtractionOrderLineItem = 'ExtractionOrderLineItem'
}

export type DeliveryOrderOrderedProductsSummary = {
  __typename?: 'DeliveryOrderOrderedProductsSummary';
  /** @deprecated use product_id instead */
  product?: Maybe<Product>;
  productId?: Maybe<Scalars['ID']['output']>;
  totalDeliveredVolume: Scalars['Float']['output'];
  totalRequestedVolume: Scalars['Float']['output'];
  totalTopOffRequestCount: Scalars['Int']['output'];
  /** @deprecated use total_requested_volume instead */
  value: Scalars['Float']['output'];
  warehouseId?: Maybe<Scalars['ID']['output']>;
};

/** Enum to use for filter delivery type */
export enum DeliveryOrderTypeEnum {
  /** Delivery order */
  DeliveryOrder = 'DeliveryOrder',
  /** Extraction order */
  ExtractionOrder = 'ExtractionOrder'
}

/** Delivery Ticket Email input */
export type DeliveryTicketEmailInput = {
  /** Attachment with name and url */
  attachments?: InputMaybe<Array<EmailAttachmentInput>>;
  /** BCC Receivers' Email */
  bcc?: InputMaybe<Array<Scalars['String']['input']>>;
  /** Email's body */
  body?: InputMaybe<Scalars['String']['input']>;
  /** CC Receivers' Email */
  cc?: InputMaybe<Array<Scalars['String']['input']>>;
  /** DeliveryOrder Id */
  deliveryOrderId: Scalars['ID']['input'];
  /** URL for Delivery Ticket */
  deliveryTicketUrl: Scalars['String']['input'];
  /** Sender Email */
  from?: InputMaybe<Scalars['String']['input']>;
  /** Email's Subject */
  subject?: InputMaybe<Scalars['String']['input']>;
  /** Receivers' Email */
  to?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** Autogenerated input type of DetachAsset */
export type DetachAssetInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
};

/** Autogenerated return type of DetachAsset */
export type DetachAssetPayload = {
  __typename?: 'DetachAssetPayload';
  attachedAsset?: Maybe<AttachedAsset>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
};

export type Device = {
  __typename?: 'Device';
  attachedAsset?: Maybe<Scalars['JSON']['output']>;
  deviceId: Scalars['ID']['output'];
  deviceProvider?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  name?: Maybe<Scalars['String']['output']>;
  reading?: Maybe<Scalars['JSON']['output']>;
  tankCapacity?: Maybe<Scalars['String']['output']>;
};

export type DeviceCollection = {
  __typename?: 'DeviceCollection';
  collection: Array<Device>;
  metadata: TankMonitorMetaDataQuery;
};

export type DeviceFilterInput = {
  /** Filter for active orders */
  filterAttributes?: InputMaybe<Array<DevicesFilterEnum>>;
  hub?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** Filter for provider */
  provider?: InputMaybe<Array<ProvidersEnum>>;
};

/** Enum to use on sorter fields */
export enum DevicesFilterEnum {
  ActiveOrder = 'ActiveOrder',
  BelowThreshold = 'BelowThreshold'
}

/** Enum to use on sorter fields */
export enum DevicesSorterEnum {
  Inventory = 'INVENTORY',
  Name = 'NAME'
}

/** Direct attachment Input */
export type DirectAttachmentInput = {
  /** True if record is to be deleted, ID must be passed. */
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  /** Specify if attachment is of special, like: signature, completion, delivery_ticket, attachments, and tank_chart */
  documentType?: InputMaybe<Scalars['String']['input']>;
  /** ID of resource to which this document is to be associated */
  documentableId?: InputMaybe<Scalars['ID']['input']>;
  /** Resource Name[ex: DeliveryOrder, Shift, LoadingOrder] to which this document is to be associated */
  documentableType?: InputMaybe<Scalars['String']['input']>;
  /** Panda Document ID to perform update */
  id?: InputMaybe<Scalars['ID']['input']>;
  /** Signed blob id from S3. Required unless _destroy is set true and can be pass empty string */
  signedBlobId: Scalars['String']['input'];
};

/** Represents direct upload credentials */
export type DirectUpload = {
  __typename?: 'DirectUpload';
  /** Created blob record ID */
  blobId?: Maybe<Scalars['ID']['output']>;
  /** HTTP request headers (JSON-encoded) */
  headers?: Maybe<Scalars['String']['output']>;
  /** Created blob record signed ID */
  signedBlobId?: Maybe<Scalars['ID']['output']>;
  /** Upload URL */
  url?: Maybe<Scalars['String']['output']>;
};

/** Autogenerated input type of DirectUploadPandaDocument */
export type DirectUploadPandaDocumentInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: DirectAttachmentInput;
};

/** Autogenerated return type of DirectUploadPandaDocument */
export type DirectUploadPandaDocumentPayload = {
  __typename?: 'DirectUploadPandaDocumentPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  pandaDocument?: Maybe<PandaDocument>;
};

export type Driver = {
  __typename?: 'Driver';
  activeShift?: Maybe<Shift>;
  appData?: Maybe<AppData>;
  appStatus?: Maybe<Scalars['Int']['output']>;
  avatarUrl?: Maybe<Scalars['String']['output']>;
  contractSignDate?: Maybe<Scalars['String']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  endDate?: Maybe<Scalars['String']['output']>;
  erpId?: Maybe<Scalars['String']['output']>;
  group?: Maybe<Group>;
  hasCompanyPhone?: Maybe<Scalars['Boolean']['output']>;
  homeAddress?: Maybe<Scalars['String']['output']>;
  hubResources?: Maybe<Array<HubResource>>;
  hubs?: Maybe<Array<Hub>>;
  id: Scalars['ID']['output'];
  image?: Maybe<AttachedFile>;
  isCarrier?: Maybe<Scalars['Boolean']['output']>;
  /** @deprecated Usage of deeds is deprecated. Use appData field instead. */
  lastDeed?: Maybe<Deed>;
  lastShift?: Maybe<Shift>;
  lastSyncedAtTimestamp?: Maybe<Scalars['Int']['output']>;
  licenceExpiryDate?: Maybe<Scalars['String']['output']>;
  lineOfServices?: Maybe<Array<LineOfService>>;
  name?: Maybe<Scalars['String']['output']>;
  otp?: Maybe<Scalars['String']['output']>;
  paymentStrategy?: Maybe<Scalars['String']['output']>;
  phoneNumbers?: Maybe<Array<DriverPhoneNumber>>;
  reasonForLeaving?: Maybe<Scalars['String']['output']>;
  s3BackgroundCheck?: Maybe<AttachedFile>;
  s3DriverApplication?: Maybe<AttachedFile>;
  s3H6?: Maybe<AttachedFile>;
  s3Licenses?: Maybe<Array<AttachedFile>>;
  shifts?: Maybe<Array<Shift>>;
  startDate?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  /** @deprecated Dont use this. This uses too much resuorces */
  tasks?: Maybe<Array<Task>>;
  unreadNotificationCount?: Maybe<Scalars['Int']['output']>;
};

export type DriverCollection = {
  __typename?: 'DriverCollection';
  collection: Array<Driver>;
  metadata: MetaQuery;
};

export type DriverFilter = {
  all?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  erpId?: InputMaybe<Scalars['String']['input']>;
  hasGroup?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  or?: InputMaybe<Array<DriverFilter>>;
};

export type DriverPhoneNumber = {
  __typename?: 'DriverPhoneNumber';
  device?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  ownerType?: Maybe<Scalars['String']['output']>;
  primary?: Maybe<Scalars['Boolean']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  value?: Maybe<Scalars['String']['output']>;
};

export type DriverSorter = {
  field: DriverSorterEnum;
  order?: InputMaybe<FieldOrder>;
};

/** Enum to use on sorter fields when call a query */
export enum DriverSorterEnum {
  Address = 'ADDRESS',
  Email = 'EMAIL',
  Erpid = 'ERPID',
  Name = 'NAME',
  Phone = 'PHONE',
  Status = 'STATUS'
}

export enum DriverStatusEnum {
  /** Archived */
  Archived = 'archived',
  /** Confirmation Pending */
  ConfirmationPending = 'confirmation_pending',
  /** Inactive */
  Inactive = 'inactive',
  /** Verified */
  Verified = 'verified'
}

/** Autogenerated input type of DuplicateOrderGroup */
export type DuplicateOrderGroupInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  orderGroupId: Scalars['ID']['input'];
};

/** Autogenerated return type of DuplicateOrderGroup */
export type DuplicateOrderGroupPayload = {
  __typename?: 'DuplicateOrderGroupPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  fromOrderGroup?: Maybe<OrderGroup>;
  newOrderGroup?: Maybe<OrderGroup>;
};

export type DvirBeCompatibilitySupport = {
  __typename?: 'DvirBeCompatibilitySupport';
  asset?: Maybe<Asset>;
  id?: Maybe<Scalars['ID']['output']>;
};

/** Email Attachment Input */
export type EmailAttachmentInput = {
  /** Name of attachment */
  name: Scalars['String']['input'];
  /** URL for attachment */
  url: Scalars['String']['input'];
};

/** Autogenerated input type of EmailDeliveryTicket */
export type EmailDeliveryTicketInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: DeliveryTicketEmailInput;
};

/** Autogenerated return type of EmailDeliveryTicket */
export type EmailDeliveryTicketPayload = {
  __typename?: 'EmailDeliveryTicketPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  deliveryOrder?: Maybe<DeliveryOrder>;
};

/** Autogenerated input type of EmailResourcePricing */
export type EmailResourcePricingInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: EmailResourcePricingsInput;
};

/** Autogenerated return type of EmailResourcePricing */
export type EmailResourcePricingPayload = {
  __typename?: 'EmailResourcePricingPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  resourcePricing?: Maybe<ResourcePricing>;
};

/** Email Resource Pricings Input */
export type EmailResourcePricingsInput = {
  endDateTimestamp: Scalars['Int']['input'];
  id: Scalars['ID']['input'];
  priceConfigurationIds?: InputMaybe<Array<Scalars['Int']['input']>>;
  startDateTimestamp: Scalars['Int']['input'];
};

/** Autogenerated input type of EndShift */
export type EndShiftInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: ShiftEndInput;
};

/** Autogenerated return type of EndShift */
export type EndShiftPayload = {
  __typename?: 'EndShiftPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  shift?: Maybe<Shift>;
};

export type ExportDocument = {
  __typename?: 'ExportDocument';
  documentType?: Maybe<Scalars['String']['output']>;
  documentableId?: Maybe<Scalars['ID']['output']>;
  fileData?: Maybe<Scalars['String']['output']>;
  fileName?: Maybe<Scalars['String']['output']>;
  fileUrl?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  /** Only use when need url is needed for long time */
  permanentFileUrl?: Maybe<Scalars['String']['output']>;
  remarks?: Maybe<Scalars['String']['output']>;
  /** ["pending", "generating", "completed", "error"] */
  status?: Maybe<Scalars['String']['output']>;
};

/** Autogenerated input type of ExportOrders */
export type ExportOrdersInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  exportableFormat?: InputMaybe<Scalars['String']['input']>;
  fromTimestamp?: InputMaybe<Scalars['Int']['input']>;
  toTimestamp?: InputMaybe<Scalars['Int']['input']>;
};

/** Autogenerated return type of ExportOrders */
export type ExportOrdersPayload = {
  __typename?: 'ExportOrdersPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  exportDocument?: Maybe<ExportDocument>;
};

export type Feature = {
  __typename?: 'Feature';
  description?: Maybe<Scalars['String']['output']>;
  name: Scalars['String']['output'];
};

/** Default feature Input */
export type FeatureInput = {
  name?: InputMaybe<Scalars['String']['input']>;
  value?: InputMaybe<Scalars['String']['input']>;
};

export type Fee = {
  __typename?: 'Fee';
  applicableType?: Maybe<Scalars['String']['output']>;
  applyAsOnFee?: Maybe<Scalars['String']['output']>;
  calculatedAsOnFee?: Maybe<Scalars['String']['output']>;
  childFees?: Maybe<Array<Fee>>;
  code?: Maybe<Scalars['String']['output']>;
  deleted?: Maybe<Scalars['Boolean']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  erpId?: Maybe<Scalars['String']['output']>;
  feeProductCategories?: Maybe<Array<FeeProductCategory>>;
  feeType?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  lineOfServices?: Maybe<Array<LineOfService>>;
  name?: Maybe<Scalars['String']['output']>;
  netsuiteId?: Maybe<Scalars['ID']['output']>;
  nonEditableRecords?: Maybe<Array<Scalars['JSON']['output']>>;
  nsManualVolume?: Maybe<Scalars['Boolean']['output']>;
  parentFee?: Maybe<Fee>;
  percentOnFee?: Maybe<Scalars['Float']['output']>;
  price?: Maybe<Scalars['Float']['output']>;
  /** Deprecated, use fee_product_categories instead. */
  productCategoryId?: Maybe<Scalars['ID']['output']>;
  rangeAttribute?: Maybe<Array<RangeAttribute>>;
  rangeCalculatedAsOnFee?: Maybe<Scalars['String']['output']>;
  rangeTypeOnFee?: Maybe<Scalars['String']['output']>;
  rateOnFee?: Maybe<Scalars['Float']['output']>;
  rateUnitOnFee?: Maybe<Scalars['String']['output']>;
  standard?: Maybe<Scalars['Boolean']['output']>;
};

export type FeeCollection = {
  __typename?: 'FeeCollection';
  collection: Array<Fee>;
  metadata: MetaQuery;
};

export type FeeFilter = {
  all?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  erpId?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  or?: InputMaybe<Array<FeeFilter>>;
  priceGte?: InputMaybe<Scalars['Float']['input']>;
  priceLte?: InputMaybe<Scalars['Float']['input']>;
  types?: InputMaybe<Array<ApplicableTypeEnum>>;
};

export type FeeProductCategory = {
  __typename?: 'FeeProductCategory';
  id: Scalars['ID']['output'];
  productCategory?: Maybe<ProductCategory>;
};

export type FeeProductCategoryInput = {
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  productCategoryId?: InputMaybe<Scalars['ID']['input']>;
};

export type FeeSorter = {
  field: FeeSorterEnum;
  order?: InputMaybe<FieldOrder>;
};

/** Enum to use on sorter fields when call a query */
export enum FeeSorterEnum {
  Code = 'CODE',
  Erpid = 'ERPID',
  Name = 'NAME',
  Price = 'PRICE'
}

export enum FeeTypeEnum {
  /** Flat */
  Flat = 'flat',
  /** Range */
  Range = 'range'
}

/** Feeable resource */
export type Feeable = CustomerBranch;

export type Feedback = {
  __typename?: 'Feedback';
  content?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['ISO8601DateTime']['output'];
  id: Scalars['ID']['output'];
  rating?: Maybe<Scalars['String']['output']>;
  tenant?: Maybe<Tenant>;
  worker?: Maybe<Worker>;
};

export type FeedbackCollection = {
  __typename?: 'FeedbackCollection';
  collection: Array<Feedback>;
  metadata: MetaQuery;
};

export type FeedbackFilter = {
  all?: InputMaybe<Scalars['String']['input']>;
  fromTimestamp?: InputMaybe<Scalars['Int']['input']>;
  toTimestamp?: InputMaybe<Scalars['Int']['input']>;
};

/** Enum to use on sorter fields when call a query */
export enum FieldOrder {
  /** ascending sorter */
  Asc = 'asc',
  /** descending sorter */
  Desc = 'desc'
}

export type FiltersInput = {
  status?: InputMaybe<RateTypeStatusEnum>;
};

/** Autogenerated input type of GotoCustomer */
export type GotoCustomerInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  deliveryOrderId?: InputMaybe<Scalars['ID']['input']>;
  /** Don't use, deprecated! */
  taskId?: InputMaybe<Scalars['ID']['input']>;
};

/** Autogenerated return type of GotoCustomer */
export type GotoCustomerPayload = {
  __typename?: 'GotoCustomerPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  orderGroup?: Maybe<OrderGroup>;
  /** Don't use, deprecated! */
  task?: Maybe<Task>;
};

/** Autogenerated input type of GotoTerminal */
export type GotoTerminalInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  loadingOrderId?: InputMaybe<Scalars['ID']['input']>;
  /** Don't use, deprecated! */
  taskId?: InputMaybe<Scalars['ID']['input']>;
};

/** Autogenerated return type of GotoTerminal */
export type GotoTerminalPayload = {
  __typename?: 'GotoTerminalPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  orderGroup?: Maybe<OrderGroup>;
  /** Don't use, deprecated! */
  task?: Maybe<Task>;
};

export type Graph = {
  __typename?: 'Graph';
  data: Array<Scalars['JSON']['output']>;
};

export type Group = {
  __typename?: 'Group';
  groupMemberships?: Maybe<Array<GroupMembership>>;
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
};

export type GroupCollection = {
  __typename?: 'GroupCollection';
  collection: Array<Group>;
  metadata: MetaQuery;
};

export type GroupFilter = {
  name?: InputMaybe<Scalars['String']['input']>;
  or?: InputMaybe<Array<GroupFilter>>;
};

export type GroupMembership = {
  __typename?: 'GroupMembership';
  groupable?: Maybe<Groupable>;
  groupableType: Scalars['String']['output'];
  id: Scalars['ID']['output'];
};

export type GroupSorter = {
  field: GroupSorterEnum;
  order?: InputMaybe<FieldOrder>;
};

/** Enum to use on sorter fields when call a query */
export enum GroupSorterEnum {
  Name = 'NAME'
}

/** Members of groups */
export type Groupable = Driver | User;

export type Hub = {
  __typename?: 'Hub';
  address?: Maybe<Scalars['JSON']['output']>;
  addressBooks?: Maybe<Array<AddressBook>>;
  applicableFees?: Maybe<Array<ApplicableFee>>;
  assets?: Maybe<Array<Asset>>;
  attachBolOnDeliveryTicket: Scalars['Boolean']['output'];
  autoEmailDeliveryTicket: Scalars['Boolean']['output'];
  customer?: Maybe<Customer>;
  customerBranches?: Maybe<Array<CustomerBranch>>;
  customers?: Maybe<Array<Customer>>;
  deliveryInstruction?: Maybe<Scalars['String']['output']>;
  erpId?: Maybe<Scalars['String']['output']>;
  hubResources?: Maybe<Array<HubResource>>;
  id: Scalars['ID']['output'];
  lineOfServices?: Maybe<Array<LineOfService>>;
  name?: Maybe<Scalars['String']['output']>;
  netsuiteId?: Maybe<Scalars['ID']['output']>;
  netsuiteName?: Maybe<Scalars['String']['output']>;
  nonEditableRecords?: Maybe<Array<Scalars['JSON']['output']>>;
  orderedProductsAverage?: Maybe<Array<OrderedProductsAverage>>;
  pandaDocuments?: Maybe<Array<PandaDocument>>;
  pickupPointCodes?: Maybe<Array<PickupPointCode>>;
  poNumber?: Maybe<Scalars['String']['output']>;
  site?: Maybe<Site>;
  storageAssets?: Maybe<Array<Asset>>;
  suppliers?: Maybe<Array<Supplier>>;
};

export type HubResource = {
  __typename?: 'HubResource';
  hub: Hub;
  hubable: Hubable;
  hubableId: Scalars['ID']['output'];
  hubableType: Scalars['String']['output'];
  id: Scalars['ID']['output'];
};

/** Manages a connection with hub */
export type HubResourceInput = {
  /** Only pass and set true when need to destroy */
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  /** ID of hub to be associated with. */
  customerBranchId?: InputMaybe<Scalars['ID']['input']>;
  /** HubResource ID. Required on update. */
  id?: InputMaybe<Scalars['ID']['input']>;
};

/** Members of groups */
export type Hubable = Customer | CustomerBranch | Driver;

export type ImportRecordInput = {
  attachment: DirectAttachmentInput;
  importable?: InputMaybe<ImportableTypeEnum>;
  importableId?: InputMaybe<Scalars['ID']['input']>;
  recordType?: InputMaybe<ImportableTypeEnum>;
};

/** Autogenerated input type of ImportRecords */
export type ImportRecordsInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: ImportRecordInput;
};

/** Autogenerated return type of ImportRecords */
export type ImportRecordsPayload = {
  __typename?: 'ImportRecordsPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  dataImport?: Maybe<DataImport>;
  pandaDocument?: Maybe<PandaDocument>;
};

/** Enum for list of importable types */
export enum ImportableTypeEnum {
  /** Customer */
  Customer = 'Customer',
  /** CustomerBranch */
  CustomerBranch = 'CustomerBranch',
  /** Rate Type */
  RateType = 'RateType'
}

export type Inventory = {
  __typename?: 'Inventory';
  product?: Maybe<Product>;
  volume?: Maybe<Scalars['Float']['output']>;
};

export type InventoryAdjustment = {
  __typename?: 'InventoryAdjustment';
  id: Scalars['ID']['output'];
  initialVolume: Scalars['Float']['output'];
  product: Product;
  reconciliationVolume: Scalars['Float']['output'];
  shiftCompartmentInstance: ShiftCompartmentInstance;
};

/** InventoryAdjustment Input */
export type InventoryAdjustmentInput = {
  /** ID of the ShiftCompartmentInstance. Required during update. */
  id?: InputMaybe<Scalars['ID']['input']>;
  /** Initial Volume */
  initialVolume?: InputMaybe<Scalars['Float']['input']>;
  /** Product's ID */
  productId?: InputMaybe<Scalars['ID']['input']>;
  /** Reconciliation Volume */
  reconciliationVolume?: InputMaybe<Scalars['Float']['input']>;
  /** 'ShiftCompartmentInstance's Id' */
  shiftCompartmentInstanceId?: InputMaybe<Scalars['ID']['input']>;
};

/** Inventory Input */
export type InventoryInput = {
  adjustmentType: ShiftInventoryAdjustmentTypes;
  adjustmentVolume: Scalars['Float']['input'];
  /** Compartment ID, required if product's unit isn't ea */
  compartmentId?: InputMaybe<Scalars['ID']['input']>;
  productId?: InputMaybe<Scalars['ID']['input']>;
};

/** Autogenerated input type of InviteCustomerToPortal */
export type InviteCustomerToPortalInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: CustomerPortalInput;
};

/** Autogenerated return type of InviteCustomerToPortal */
export type InviteCustomerToPortalPayload = {
  __typename?: 'InviteCustomerToPortalPayload';
  addressBook?: Maybe<AddressBook>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
};

/** License input for drivers */
export type LicenseInput = {
  id?: InputMaybe<Scalars['ID']['input']>;
  licenseSignedBlobId?: InputMaybe<Scalars['ID']['input']>;
};

export type LineItem = {
  __typename?: 'LineItem';
  deliveredVolume?: Maybe<Scalars['Float']['output']>;
  orderedVolume?: Maybe<Scalars['Float']['output']>;
  product?: Maybe<Scalars['String']['output']>;
  topoff?: Maybe<Scalars['Boolean']['output']>;
};

export type LineOfService = {
  __typename?: 'LineOfService';
  active?: Maybe<Scalars['Boolean']['output']>;
  ancestors: Array<LineOfService>;
  erpId?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  name?: Maybe<Scalars['String']['output']>;
  nameWithAncestors?: Maybe<Scalars['String']['output']>;
  nonEditableRecords?: Maybe<Array<Scalars['JSON']['output']>>;
  parent?: Maybe<LineOfService>;
  parentId?: Maybe<Scalars['ID']['output']>;
  shortName?: Maybe<Scalars['String']['output']>;
};

export type LineOfServiceCollection = {
  __typename?: 'LineOfServiceCollection';
  collection: Array<LineOfService>;
  metadata: MetaQuery;
};

export type LineOfServiceFilter = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  all?: InputMaybe<Scalars['String']['input']>;
  erpId?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  or?: InputMaybe<Array<LineOfServiceFilter>>;
  shortName?: InputMaybe<Scalars['String']['input']>;
};

/** Default line of service Input */
export type LineOfServiceInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  erpId?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  parentId?: InputMaybe<Scalars['ID']['input']>;
  shortName?: InputMaybe<Scalars['String']['input']>;
};

export type LineOfServiceSorter = {
  field: LineOfServiceSorterEnum;
  order?: InputMaybe<FieldOrder>;
};

/** Enum to use on sorter fields when call a query */
export enum LineOfServiceSorterEnum {
  Erpid = 'ERPID',
  Name = 'NAME',
  Shortname = 'SHORTNAME'
}

export type LinkedDriver = {
  __typename?: 'LinkedDriver';
  unassigned?: Maybe<Scalars['Int']['output']>;
  workerWithPendingOrderStatus?: Maybe<Array<Driver>>;
  workerWithoutPendingOrderStatus?: Maybe<Array<Driver>>;
};

/** LoadingFromWarehouse Input */
export type LoadWithoutBolInput = {
  /** NoteInput object. */
  demurrageNotesAttributes?: InputMaybe<Array<NoteInput>>;
  /** Unix timestamp at the time of load. */
  executionTimestamp?: InputMaybe<Scalars['Int']['input']>;
  /** LoadingOrder ID. Required incase of scheduled order. */
  loadingOrderId?: InputMaybe<Scalars['ID']['input']>;
  /** LoadingOrderLineItemInput object. */
  loadingOrderLineItemsAttributes?: InputMaybe<Array<LoadingOrderLineItemInput>>;
  /** NoteInput object. */
  notesAttributes?: InputMaybe<Array<NoteInput>>;
  /** Warehouse ID. Required incase of new order. */
  warehouseId?: InputMaybe<Scalars['ID']['input']>;
};

/** Autogenerated input type of LoadWithoutBolMutation */
export type LoadWithoutBolMutationInput = {
  attributes: LoadWithoutBolInput;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated return type of LoadWithoutBolMutation */
export type LoadWithoutBolMutationPayload = {
  __typename?: 'LoadWithoutBolMutationPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  orderGroup?: Maybe<OrderGroup>;
};

export type LoadingAccount = {
  __typename?: 'LoadingAccount';
  carrierCustomerCode?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  label?: Maybe<Scalars['String']['output']>;
  lineOfServices?: Maybe<Array<LineOfService>>;
  loadingNumber?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  pickupPointCodes?: Maybe<Array<PickupPointCode>>;
  supplier?: Maybe<Supplier>;
  supplierCode?: Maybe<Scalars['String']['output']>;
  supplierId?: Maybe<Scalars['ID']['output']>;
};

export type LoadingAccountCollection = {
  __typename?: 'LoadingAccountCollection';
  collection: Array<LoadingAccount>;
  metadata: MetaQuery;
};

export type LoadingAccountFilter = {
  all?: InputMaybe<Scalars['String']['input']>;
  carrierCustomerCode?: InputMaybe<Scalars['String']['input']>;
  erpId?: InputMaybe<Scalars['String']['input']>;
  loadingNumber?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  or?: InputMaybe<Array<LoadingAccountFilter>>;
  supplierId?: InputMaybe<Scalars['ID']['input']>;
};

/** Default loading Account Input */
export type LoadingAccountInput = {
  carrierCustomerCode?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  erpId?: InputMaybe<Scalars['String']['input']>;
  loadingNumber: Scalars['String']['input'];
  name?: InputMaybe<Scalars['String']['input']>;
  supplierCode?: InputMaybe<Scalars['String']['input']>;
  supplierId: Scalars['ID']['input'];
};

export type LoadingAccountSorter = {
  field: LoadingAccountSorterEnum;
  order?: InputMaybe<FieldOrder>;
};

/** Enum to use on sorter fields when call a query */
export enum LoadingAccountSorterEnum {
  Carriercustomercode = 'CARRIERCUSTOMERCODE',
  Erpid = 'ERPID',
  Loadingnumber = 'LOADINGNUMBER',
  Name = 'NAME',
  Suppliercode = 'SUPPLIERCODE'
}

export type LoadingOrder = {
  __typename?: 'LoadingOrder';
  bolNumbers?: Maybe<Scalars['String']['output']>;
  demurrageNotes?: Maybe<Array<Note>>;
  id: Scalars['ID']['output'];
  /** @deprecated Use summary */
  lineItemSummary?: Maybe<Array<LineItem>>;
  lineItems: Array<LoadingOrderLineItem>;
  linkedOrders?: Maybe<Array<DeliveryOrder>>;
  loadingInstruction?: Maybe<Scalars['String']['output']>;
  loadingOrderProducts?: Maybe<Array<LoadingOrderProduct>>;
  loadingReceipts?: Maybe<Array<LoadingReceipt>>;
  notes?: Maybe<Array<Note>>;
  orderGroup?: Maybe<OrderGroup>;
  orderGroupId?: Maybe<Scalars['Int']['output']>;
  orderLinks?: Maybe<Array<OrderLink>>;
  status: Scalars['String']['output'];
  summary?: Maybe<Array<LoadingOrderSummary>>;
  /** @deprecated Dont use this. This uses too much resuorces */
  task?: Maybe<Task>;
  terminal?: Maybe<Terminal>;
  ticketId: Scalars['Int']['output'];
};

/** LoadingOrder Input */
export type LoadingOrderInput = {
  /** Deprecated. DO NOT USE. */
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  /** NoteInput object. */
  demurrageNotesAttributes?: InputMaybe<Array<NoteInput>>;
  /** LoadingOrder ID. Required on update. */
  id?: InputMaybe<Scalars['ID']['input']>;
  /** LoadingOrder Instructions */
  loadingInstruction?: InputMaybe<Scalars['String']['input']>;
  /** LoadingOrderProductInput object. */
  loadingOrderProductsAttributes?: InputMaybe<Array<LoadingOrderProductInput>>;
  /** LoadingReceiptInput object. */
  loadingReceiptsAttributes?: InputMaybe<Array<LoadingReceiptInput>>;
  /** NoteInput object. */
  notesAttributes?: InputMaybe<Array<NoteInput>>;
  /** OrderGroupInput object. */
  orderGroup?: InputMaybe<OrderGroupInput>;
  /** Terminal ID for the load. */
  terminalId?: InputMaybe<Scalars['ID']['input']>;
};

export type LoadingOrderLineItem = {
  __typename?: 'LoadingOrderLineItem';
  assetId?: Maybe<Scalars['ID']['output']>;
  blendProduct?: Maybe<Product>;
  blendProductId?: Maybe<Scalars['Int']['output']>;
  compartment?: Maybe<Compartment>;
  compartmentId?: Maybe<Scalars['Int']['output']>;
  deliveryAsset?: Maybe<DeliveryAsset>;
  grossAmount?: Maybe<Scalars['Float']['output']>;
  id: Scalars['ID']['output'];
  netAmount?: Maybe<Scalars['Float']['output']>;
  product?: Maybe<Product>;
  productId?: Maybe<Scalars['Int']['output']>;
  volume?: Maybe<Scalars['Float']['output']>;
};

export type LoadingOrderLineItemCollection = {
  __typename?: 'LoadingOrderLineItemCollection';
  collection: Array<LoadingOrderLineItem>;
  metadata: MetaQuery;
};

/** Loading Order Line Item Input */
export type LoadingOrderLineItemInput = {
  /** Deprecated. DO NOT USE. */
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  /** Asset ID. */
  assetId?: InputMaybe<Scalars['ID']['input']>;
  /** ID of blend product that is formed after loading */
  blendProductId?: InputMaybe<Scalars['ID']['input']>;
  /** Compartment ID. */
  compartmentId?: InputMaybe<Scalars['ID']['input']>;
  /** Gross amount. */
  grossAmount?: InputMaybe<Scalars['Float']['input']>;
  /** Gross volume. */
  grossVolume?: InputMaybe<Scalars['Float']['input']>;
  /** LoadingOrderLineItem ID. */
  id?: InputMaybe<Scalars['ID']['input']>;
  /** Loading order product ID. */
  loadingOrderProductId?: InputMaybe<Scalars['ID']['input']>;
  /** LoadingReceiptProduct ID. */
  loadingReceiptProductId?: InputMaybe<Scalars['ID']['input']>;
  /** Net amount. */
  netAmount?: InputMaybe<Scalars['Float']['input']>;
  /** Net volume. */
  netVolume?: InputMaybe<Scalars['Float']['input']>;
  /** Product ID */
  productId?: InputMaybe<Scalars['ID']['input']>;
};

export type LoadingOrderProduct = {
  __typename?: 'LoadingOrderProduct';
  blendLoadingProduct?: Maybe<BlendLoadingProduct>;
  canSyncRequestedDeliveryVolume: Scalars['Boolean']['output'];
  /** @deprecated Use Quantity */
  grossQuantity?: Maybe<Scalars['Float']['output']>;
  id: Scalars['ID']['output'];
  /** @deprecated Use loadingReceipt -> loadingReceiptProducts -> loadingOrderLineItems */
  loadingOrderLineItems?: Maybe<Array<LoadingOrderLineItem>>;
  /** @deprecated Use Quantity */
  netQuantity?: Maybe<Scalars['Float']['output']>;
  preferredSuppliers?: Maybe<Array<PreferredSupplier>>;
  product: Product;
  quantity?: Maybe<Scalars['Float']['output']>;
};

/** LoadingProduct Input */
export type LoadingOrderProductInput = {
  /** Deprecated. DO NOT USE. */
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  /** Gross quantity. */
  grossQuantity?: InputMaybe<Scalars['Float']['input']>;
  /** LoadingOrderProduct ID. Required on update. */
  id?: InputMaybe<Scalars['ID']['input']>;
  /** PreferredSupplierInput object. */
  preferredSuppliersAttributes?: InputMaybe<Array<PreferredSupplierInput>>;
  /** Product ID. */
  productId?: InputMaybe<Scalars['ID']['input']>;
  /** Flag parameter to specify whether to sync requested volume of delivery order. */
  updateRequestedDeliveryVolume?: InputMaybe<Scalars['Boolean']['input']>;
};

export type LoadingOrderSummary = {
  __typename?: 'LoadingOrderSummary';
  productId?: Maybe<Scalars['ID']['output']>;
  totalLoadedVolume?: Maybe<Scalars['Float']['output']>;
  totalRequestedVolume?: Maybe<Scalars['Float']['output']>;
};

export type LoadingReceipt = {
  __typename?: 'LoadingReceipt';
  cardInTimestamp?: Maybe<Scalars['Int']['output']>;
  cardOutTimestamp?: Maybe<Scalars['Int']['output']>;
  id: Scalars['ID']['output'];
  loadingAccount?: Maybe<LoadingAccount>;
  loadingReceiptProducts: Array<LoadingReceiptProduct>;
  name?: Maybe<Scalars['String']['output']>;
  pandaDocuments?: Maybe<Array<PandaDocument>>;
  pickupPointCode?: Maybe<PickupPointCode>;
  receiptNumber?: Maybe<Scalars['String']['output']>;
  terminalsSupplier?: Maybe<TerminalsSupplier>;
};

/** Loading Receipt Input */
export type LoadingReceiptInput = {
  /** Deprecated. DO NOT USE. */
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  /** Attachment containing Base64 conversion of BOL images. */
  attachmentsAttributes?: InputMaybe<Array<AttachmentInput>>;
  /** Card in time. */
  cardInTimestamp?: InputMaybe<Scalars['Int']['input']>;
  /** Card out time. */
  cardOutTimestamp?: InputMaybe<Scalars['Int']['input']>;
  /** Loading Receipt ID. */
  id?: InputMaybe<Scalars['ID']['input']>;
  /** Loading account ID. */
  loadingAccountId?: InputMaybe<Scalars['ID']['input']>;
  /** LoadingReceiptProductInput object. */
  loadingReceiptProductsAttributes?: InputMaybe<Array<LoadingReceiptProductInput>>;
  /** Attachment IDs (Example BOLs). */
  pandaDocumentIds?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** PandaDocumentInput object. */
  pandaDocumentsAttributes?: InputMaybe<Array<PandaDocumentInput>>;
  /** Supplier ID. */
  pickupPointCodeId?: InputMaybe<Scalars['ID']['input']>;
  /** Receipt identifier (Example: BOL number). */
  receiptNumber?: InputMaybe<Scalars['String']['input']>;
  /** Supplier ID. */
  terminalsSupplierId?: InputMaybe<Scalars['ID']['input']>;
};

export type LoadingReceiptProduct = {
  __typename?: 'LoadingReceiptProduct';
  blendLoadingProduct?: Maybe<BlendLoadingProduct>;
  data?: Maybe<Scalars['JSON']['output']>;
  /** @deprecated Compute by adding line item's gross value */
  grossVolume?: Maybe<Scalars['Float']['output']>;
  id: Scalars['ID']['output'];
  loadingOrderLineItems?: Maybe<Array<LoadingOrderLineItem>>;
  /** @deprecated Compute by adding line item's net value */
  netVolume?: Maybe<Scalars['Float']['output']>;
  product?: Maybe<Product>;
  /** @deprecated Compute by adding line item's net/gross value, based on setting 'volume_net_gross_setting'' */
  volume?: Maybe<Scalars['Float']['output']>;
};

/** Loading Receipt Product */
export type LoadingReceiptProductInput = {
  /** Deprecated. DO NOT USE. */
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  /** ID of blend_loading_products, required if loading is done for blend product. */
  blendLoadingProductId?: InputMaybe<Scalars['ID']['input']>;
  /** Miscellaneous data. */
  data?: InputMaybe<Scalars['JSON']['input']>;
  /** Gross volume. */
  grossVolume?: InputMaybe<Scalars['Float']['input']>;
  /** LoadingReceiptProduct ID. */
  id?: InputMaybe<Scalars['ID']['input']>;
  /** LoadingOrderLineItemInput object. */
  loadingOrderLineItemsAttributes?: InputMaybe<Array<LoadingOrderLineItemInput>>;
  /** Net volume. */
  netVolume?: InputMaybe<Scalars['Float']['input']>;
  /** Product ID. */
  productId?: InputMaybe<Scalars['ID']['input']>;
};

/** Tank Monitor manual sync input */
export type ManualSyncInput = {
  deviceId: Scalars['String']['input'];
  deviceProvider: ProvidersEnum;
};

/** Applied Margins Input */
export type ManualUpdateInput = {
  /** Send quantity inplace of amount. */
  amount?: InputMaybe<Scalars['Float']['input']>;
  /** Applied Pricing */
  appliedPricingId?: InputMaybe<Scalars['ID']['input']>;
  cardInTime?: InputMaybe<Scalars['ISO8601DateTime']['input']>;
  completedOn?: InputMaybe<Scalars['ISO8601DateTime']['input']>;
  customer?: InputMaybe<ResourceDetailsInput>;
  customerBranch?: InputMaybe<ResourceDetailsInput>;
  doliIds?: InputMaybe<Array<Scalars['ID']['input']>>;
  hubId?: InputMaybe<Scalars['ID']['input']>;
  isManuallyUpdated?: InputMaybe<Scalars['Boolean']['input']>;
  loliIds?: InputMaybe<Array<Scalars['ID']['input']>>;
  marketId?: InputMaybe<Scalars['ID']['input']>;
  /** These are delivery order line items. */
  orderGroupId?: InputMaybe<Scalars['ID']['input']>;
  pricingId?: InputMaybe<Scalars['ID']['input']>;
  productId?: InputMaybe<Scalars['ID']['input']>;
  receiptNumber?: InputMaybe<Scalars['String']['input']>;
  resourcePricingId?: InputMaybe<Scalars['ID']['input']>;
  supplierId?: InputMaybe<Scalars['ID']['input']>;
  terminalId?: InputMaybe<Scalars['ID']['input']>;
  /** Add OrderType Enum from AppliedPricing query */
  type?: InputMaybe<Scalars['String']['input']>;
};

export type Margin = {
  __typename?: 'Margin';
  id?: Maybe<Scalars['ID']['output']>;
  marginRate?: Maybe<Scalars['Float']['output']>;
  marginType?: Maybe<Scalars['String']['output']>;
  marginUnit?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  range?: Maybe<Array<MarginRangeAttribute>>;
};

export type MarginCollection = {
  __typename?: 'MarginCollection';
  collection: Array<Margin>;
  metadata: MetaDataQuery;
};

export type MarginFilter = {
  all?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  or?: InputMaybe<Array<MarginFilter>>;
};

export type MarginRangeAttribute = {
  __typename?: 'MarginRangeAttribute';
  endRange?: Maybe<Scalars['String']['output']>;
  rangeRate?: Maybe<Scalars['String']['output']>;
  startRange?: Maybe<Scalars['String']['output']>;
};

/** Range Input */
export type MarginRangeAttributeInput = {
  endRange?: InputMaybe<Scalars['String']['input']>;
  rangeRate?: InputMaybe<Scalars['String']['input']>;
  startRange?: InputMaybe<Scalars['String']['input']>;
};

/** Enum for margin type */
export enum MarginTypeEnum {
  /** fixed */
  Fixed = 'fixed',
  /** volume based */
  VolumeBased = 'volume_based'
}

export type Market = {
  __typename?: 'Market';
  active?: Maybe<Scalars['Boolean']['output']>;
  address?: Maybe<Scalars['String']['output']>;
  hubResources?: Maybe<Array<HubResource>>;
  hubs?: Maybe<Array<Hub>>;
  id: Scalars['ID']['output'];
  name?: Maybe<Scalars['String']['output']>;
};

export type MarketResource = {
  __typename?: 'MarketResource';
  id: Scalars['ID']['output'];
  market: Market;
  marketable: Marketable;
  marketableId: Scalars['ID']['output'];
  marketableType: Scalars['String']['output'];
};

/** Manages a connection with market */
export type MarketResourceInput = {
  /** Only pass and set true when need to destroy */
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  /** Market Resource ID. Required on update. */
  id?: InputMaybe<Scalars['ID']['input']>;
  /** ID of market to be associated with. */
  marketId?: InputMaybe<Scalars['ID']['input']>;
};

/** Marketable Type */
export type Marketable = Customer | CustomerBranch;

/** Meta data used to fetch next records and retrive total records */
export type MetaDataQuery = {
  __typename?: 'MetaDataQuery';
  hasMore: Scalars['Boolean']['output'];
  totalCount?: Maybe<Scalars['Int']['output']>;
  total_entries?: Maybe<Scalars['Int']['output']>;
};

/** Meta data used to fetch next records and retrive total records */
export type MetaQuery = {
  __typename?: 'MetaQuery';
  hasMore: Scalars['Boolean']['output'];
  totalCount?: Maybe<Scalars['Int']['output']>;
  total_entries?: Maybe<Scalars['Int']['output']>;
};

/** Autogenerated input type of ModifyLineItemProduct */
export type ModifyLineItemProductInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  /** DeliveryOrderLineItem ID */
  id: Scalars['ID']['input'];
  /** The new product ID */
  productId: Scalars['ID']['input'];
};

/** Autogenerated return type of ModifyLineItemProduct */
export type ModifyLineItemProductPayload = {
  __typename?: 'ModifyLineItemProductPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  orderGroup?: Maybe<OrderGroup>;
};

/** Autogenerated input type of ModifyShiftInventory */
export type ModifyShiftInventoryInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  shiftDeliveryAssets: Array<AssetInventoriesInput>;
  shiftId: Scalars['ID']['input'];
};

/** Autogenerated return type of ModifyShiftInventory */
export type ModifyShiftInventoryPayload = {
  __typename?: 'ModifyShiftInventoryPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  shift?: Maybe<Shift>;
};

export type MovementOrder = {
  __typename?: 'MovementOrder';
  asset?: Maybe<Asset>;
  assetMovementLocation?: Maybe<AssetMovementLocation>;
  assignedTankSize?: Maybe<Scalars['String']['output']>;
  assignedTankType?: Maybe<Scalars['String']['output']>;
  fromCustomerBranch?: Maybe<CustomerBranch>;
  hub?: Maybe<Hub>;
  id: Scalars['ID']['output'];
  instruction?: Maybe<Scalars['String']['output']>;
  movementOrderLineItems?: Maybe<Array<MovementOrderLineItem>>;
  notes?: Maybe<Array<Note>>;
  orderGroup: OrderGroup;
  orderGroupId: Scalars['ID']['output'];
  orderNotes?: Maybe<Scalars['String']['output']>;
  product?: Maybe<Product>;
  requestedMovementOrderLineItems?: Maybe<Array<RequestedMovementOrderLineItem>>;
  requestedTankSize?: Maybe<Scalars['String']['output']>;
  requestedTankType?: Maybe<Scalars['String']['output']>;
  resourceStatuses?: Maybe<Array<ResourceStatus>>;
  skipReason?: Maybe<Scalars['String']['output']>;
  toCustomerBranch: CustomerBranch;
};

/** Movement Order Input */
export type MovementOrderInput = {
  /** Asset ID. */
  assetId?: InputMaybe<Scalars['ID']['input']>;
  /** Assigned Tank Size. */
  assignedTankSize?: InputMaybe<Scalars['Float']['input']>;
  /** Assigned Tank Type. */
  assignedTankType?: InputMaybe<Scalars['String']['input']>;
  /** From Customer Branch/Site ID. */
  fromCustomerBranchId?: InputMaybe<Scalars['ID']['input']>;
  /** Customer Branch/Site Hub ID. */
  hubId?: InputMaybe<Scalars['ID']['input']>;
  /** Movement Order ID. */
  id?: InputMaybe<Scalars['ID']['input']>;
  /** MovementOrder Instruction Type. */
  instruction?: InputMaybe<Scalars['String']['input']>;
  /** Movement Order Line Item Input object. */
  movementOrderLineItemsAttributes?: InputMaybe<Array<MovementOrderLineItemInput>>;
  /** Movement Order Note Input. */
  notesAttributes?: InputMaybe<Array<NoteInput>>;
  /** Descriptive order notes. */
  orderNotes?: InputMaybe<Scalars['String']['input']>;
  /** Requested Product */
  productId?: InputMaybe<Scalars['ID']['input']>;
  /** Movement Order Line Item Input object. */
  requestedMovementOrderLineItemsAttributes?: InputMaybe<Array<RequestedMovementOrderLineItemInput>>;
  /** Requested Tank Size. */
  requestedTankSize?: InputMaybe<Scalars['Float']['input']>;
  /** Requested Tank Type. */
  requestedTankType?: InputMaybe<Scalars['String']['input']>;
  resourceStatusesAttributes?: InputMaybe<Array<ResourceStatusInput>>;
  skipReason?: InputMaybe<Scalars['String']['input']>;
  /** To Customer Branch/Site ID. */
  toCustomerBranchId?: InputMaybe<Scalars['ID']['input']>;
};

export type MovementOrderLineItem = {
  __typename?: 'MovementOrderLineItem';
  id: Scalars['ID']['output'];
  peripheral?: Maybe<Peripheral>;
  peripheralInstances?: Maybe<Array<PeripheralInstance>>;
  resourceStatuses?: Maybe<Array<ResourceStatus>>;
};

/** Movement Order Line Item Input */
export type MovementOrderLineItemInput = {
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  /** ID of Movement Order Line Item. Required on update. */
  id?: InputMaybe<Scalars['ID']['input']>;
  /** Movement Order ID. */
  movementOrderId?: InputMaybe<Scalars['ID']['input']>;
  /** Peripheral Input object */
  peripheralAttributes?: InputMaybe<PeripheralInput>;
  /** Peripheral ID. */
  peripheralId?: InputMaybe<Scalars['ID']['input']>;
  /** Peripheral Instance Input object. */
  peripheralInstancesAttributes?: InputMaybe<Array<PeripheralInstanceInput>>;
  /** Resource Statuses Attributes. */
  resourceStatusesAttributes?: InputMaybe<Array<ResourceStatusInput>>;
};

export type Mutation = {
  __typename?: 'Mutation';
  acknowledgeNote?: Maybe<AcknowledgeNotePayload>;
  addAssetToDeliveryOrder?: Maybe<AddAssetToDeliveryOrderPayload>;
  addFeeToOrderGroup?: Maybe<AddFeeToOrderGroupPayload>;
  addFeesToOrderGroup?: Maybe<AddFeesToOrderGroupPayload>;
  addOrderGroupsToShift?: Maybe<AddOrderGroupsToShiftPayload>;
  addQrCodeToAsset?: Maybe<AddQrCodeToAssetPayload>;
  archiveDriver?: Maybe<ArchiveDriversPayload>;
  arrivedAtCustomer?: Maybe<ArrivedAtCustomerPayload>;
  arrivedAtTerminal?: Maybe<ArrivedAtTerminalPayload>;
  assignDeliveryAssetWithInventory?: Maybe<AssignDeliveryAssetWithInventoryPayload>;
  autoLinkOrders?: Maybe<AutoLinkOrdersPayload>;
  bulkAsyncRefetchOrderQueueStatus?: Maybe<BulkAsyncRefetchOrderQueueStatusPayload>;
  bulkUpdatePricings?: Maybe<BulkUpdatePricingsPayload>;
  changeOrderGroupAssignment?: Maybe<ChangeOrderGroupAssignmentPayload>;
  changeShiftAsset?: Maybe<ChangeAssetPayload>;
  clearDataShift?: Maybe<ClearDataShiftPayload>;
  copyPreviousRecords?: Maybe<CopyPreviousRecordsPayload>;
  createAsset?: Maybe<CreateAssetsPayload>;
  createAttachedAsset?: Maybe<CreateAttachedAssetPayload>;
  createBolRetain?: Maybe<CreateBolRetainPayload>;
  createBrand?: Maybe<CreateBrandsPayload>;
  createCommonCarrier?: Maybe<CreateCommonCarrierPayload>;
  /** Creates delivery order from self dispatch */
  createCompletedDeliveryOrder?: Maybe<CreateDeliveryOrderPayload>;
  /** Creates loading order from self dispatch */
  createCompletedLoadingOrder?: Maybe<CreateLoadingOrderPayload>;
  createCustomer?: Maybe<CreateCustomersPayload>;
  createCustomerAsset?: Maybe<CreateCustomerAssetPayload>;
  createCustomerBranch?: Maybe<CreateCustomerBranchesPayload>;
  createCustomerUser?: Maybe<CreateCustomerUsersPayload>;
  createDirectUpload?: Maybe<DirectUpload>;
  createDriver?: Maybe<CreateDriversPayload>;
  createFee?: Maybe<CreateFeesPayload>;
  createFeedback?: Maybe<CreateFeedbacksPayload>;
  createGroup?: Maybe<CreateGroupPayload>;
  createLineOfService?: Maybe<CreateLineOfServicesPayload>;
  createLoadingAccount?: Maybe<CreateLoadingAccountsPayload>;
  createMargin?: Maybe<CreateMarginPayload>;
  createMarket?: Maybe<CreateMarketsPayload>;
  createMovementOrder?: Maybe<CreateMovementOrderPayload>;
  createNote?: Maybe<CreateNotePayload>;
  createOrUpdateMovementOrderLineItem?: Maybe<CreateOrUpdateMovementOrderLineItemPayload>;
  createOrUpdateTransferOrderLineItem?: Maybe<CreateOrUpdateTransferOrderLineItemPayload>;
  createOrderGroup?: Maybe<CreateOrderGroupPayload>;
  createOrderGroups?: Maybe<CreateOrderGroupsPayload>;
  createOrderLink?: Maybe<CreateOrderLinkPayload>;
  createPeripheral?: Maybe<CreatePeripheralPayload>;
  createPoc?: Maybe<CreatePocPayload>;
  createPricings?: Maybe<CreatePricingPayload>;
  createProduct?: Maybe<CreateProductsPayload>;
  createRateType?: Maybe<CreateRatePayload>;
  createResourcePricings?: Maybe<CreateResourcePricingPayload>;
  createSetting?: Maybe<CreateSettingPayload>;
  createShift?: Maybe<CreateShiftPayload>;
  createSiteRecurrence?: Maybe<CreateSiteRecurrencePayload>;
  createSupplier?: Maybe<CreateSuppliersPayload>;
  createTax?: Maybe<CreateTaxPayload>;
  createTerminal?: Maybe<CreateTerminalsPayload>;
  createTerminalsSupplier?: Maybe<CreateTerminalsSuppliersPayload>;
  createTransferOrder?: Maybe<CreateTransferOrderPayload>;
  deleteAsset?: Maybe<DeleteAssetsPayload>;
  deleteBrand?: Maybe<DeleteBrandsPayload>;
  deleteCustomerBranch?: Maybe<DeleteCustomerBranchesPayload>;
  deleteDeliveryOrder?: Maybe<DeleteDeliveryOrderPayload>;
  deleteFee?: Maybe<DeleteFeesPayload>;
  deleteLoadingOrder?: Maybe<DeleteLoadingOrderPayload>;
  deleteMovementOrder?: Maybe<DeleteMovementOrderPayload>;
  deleteOrderLink?: Maybe<DeleteOrderLinkPayload>;
  deletePandaPriceResource?: Maybe<DeletePandaPriceResourcePayload>;
  deletePeripheral?: Maybe<DeletePeripheralPayload>;
  deleteResource?: Maybe<DeleteResourcePayload>;
  deleteShiftPlan?: Maybe<DeleteShiftPlanPayload>;
  deleteSiteRecurrence?: Maybe<DeleteSiteRecurrencePayload>;
  deleteSupplier?: Maybe<DeleteSuppliersPayload>;
  deleteTerminal?: Maybe<DeleteTerminalsPayload>;
  deleteTransferOrder?: Maybe<DeleteTransferOrderPayload>;
  detachAttachedAsset?: Maybe<DetachAssetPayload>;
  directUploadPandaDocument?: Maybe<DirectUploadPandaDocumentPayload>;
  duplicateOrder?: Maybe<DuplicateOrderGroupPayload>;
  emailDeliveryTicket?: Maybe<EmailDeliveryTicketPayload>;
  emailResourcePricing?: Maybe<EmailResourcePricingPayload>;
  endShift?: Maybe<EndShiftPayload>;
  exportOrders?: Maybe<ExportOrdersPayload>;
  gotoCustomer?: Maybe<GotoCustomerPayload>;
  gotoTerminal?: Maybe<GotoTerminalPayload>;
  importRecords?: Maybe<ImportRecordsPayload>;
  inviteCustomerToPortal?: Maybe<InviteCustomerToPortalPayload>;
  modifyLineItemProduct?: Maybe<ModifyLineItemProductPayload>;
  modifyShiftInventory?: Maybe<ModifyShiftInventoryPayload>;
  optimizeShiftPlan?: Maybe<OptimizeShiftPlanPayload>;
  partialSync?: Maybe<PartialSyncPayload>;
  postDeliveryNoteCreate?: Maybe<PostDeliveryNoteCreatePayload>;
  purgeUserImage?: Maybe<PurgeUserImagePayload>;
  quickbookDeliveryOrderSync?: Maybe<SalesOrderSyncPayload>;
  quickbookShiftSync?: Maybe<ShiftsSyncPayload>;
  /** Reauthenticates the users by recreating access token based on refresh token */
  reauthenticateUser?: Maybe<ReauthenticatePayload>;
  refetchCustomersAsynchronously?: Maybe<RefetchCustomersAsynchronouslyPayload>;
  refetchOrderQueueStatus?: Maybe<RefetchOrderQueueStatusPayload>;
  refreshApiToken?: Maybe<RefreshApiTokenPayload>;
  removeFeeToOrderGroup?: Maybe<RemoveFeeToOrderGroupPayload>;
  removeFeesFromOrderGroup?: Maybe<RemoveFeesFromOrderGroupPayload>;
  removeQrCodeFromAsset?: Maybe<RemoveQrCodePayload>;
  resetPricing?: Maybe<ResetPricingPayload>;
  shiftReconciliation?: Maybe<ShiftReconciliationPayload>;
  /** Signs in user */
  signInUser?: Maybe<SignInPayload>;
  startShift?: Maybe<StartShiftPayload>;
  submitDelivery?: Maybe<SubmitDeliveryPayload>;
  submitLoading?: Maybe<SubmitLoadingPayload>;
  /** Load  from warehouse without BOL */
  submitLoadingWithoutBol?: Maybe<LoadWithoutBolMutationPayload>;
  switchTenant?: Maybe<SwitchTenantPayload>;
  syncAllTanks?: Maybe<SyncAllPayload>;
  syncIndividualTank?: Maybe<SyncIndividualTankPayload>;
  updateAppliedPricing?: Maybe<UpdateAppliedPricingPayload>;
  updateAsset?: Maybe<UpdateAssetsPayload>;
  updateAttachedAssets?: Maybe<UpdateAttachedAssetPayload>;
  updateBrand?: Maybe<UpdateBrandsPayload>;
  updateCustomer?: Maybe<UpdateCustomersPayload>;
  updateCustomerBranch?: Maybe<UpdateCustomerBranchesPayload>;
  updateCustomerPreferences?: Maybe<UpdateCustomerPreferencesPayload>;
  updateCustomerUser?: Maybe<UpdateCustomerUsersPayload>;
  updateDeliveryOrder?: Maybe<UpdateDeliveryOrderPayload>;
  updateDeliveryOrderLineItem?: Maybe<UpdateDeliveryOrderLineItemPayload>;
  updateDriver?: Maybe<UpdateDriversPayload>;
  updateDriverOtp?: Maybe<ChangeDriverOtpPayload>;
  updateDriverShift?: Maybe<UpdateDriverShiftPayload>;
  updateFee?: Maybe<UpdateFeesPayload>;
  updateGroup?: Maybe<UpdateGroupPayload>;
  updateLineOfService?: Maybe<UpdateLineOfServicesPayload>;
  updateLoadingAccount?: Maybe<UpdateLoadingAccountsPayload>;
  updateLoadingOrder?: Maybe<UpdateLoadingOrderPayload>;
  updateLoadingOrderLineItem?: Maybe<UpdateLoadingOrderLineItemPayload>;
  updateMargin?: Maybe<UpdateMarginPayload>;
  updateMarket?: Maybe<UpdateMarketsPayload>;
  updateMovementOrder?: Maybe<UpdateMovementOrderPayload>;
  updateNote?: Maybe<UpdateNotePayload>;
  updateOrderGroup?: Maybe<UpdateOrderGroupMutationPayload>;
  updateOrderLink?: Maybe<UpdateOrderLinkPayload>;
  updatePeripheral?: Maybe<UpdatePeripheralPayload>;
  updatePoc?: Maybe<UpdatePocPayload>;
  updatePricings?: Maybe<UpdatePricingPayload>;
  updateProduct?: Maybe<UpdateProductsPayload>;
  updateRateType?: Maybe<UpdateRatePayload>;
  updateResource?: Maybe<UpdateResourcePayload>;
  updateResourcePricings?: Maybe<UpdateResourcePricingPayload>;
  updateSettings?: Maybe<UpdateSettingsPayload>;
  updateShift?: Maybe<UpdateShiftPayload>;
  updateShiftPlanDelivery?: Maybe<UpdateStopDetailsPayload>;
  updateShiftPlanTruck?: Maybe<UpdateTruckDetailsPayload>;
  updateSupplier?: Maybe<UpdateSuppliersPayload>;
  updateTax?: Maybe<UpdateTaxPayload>;
  updateTerminal?: Maybe<UpdateTerminalsPayload>;
  updateTerminalsSupplier?: Maybe<UpdateTerminalsSuppliersPayload>;
  updateTransferOrder?: Maybe<UpdateTransferOrderPayload>;
  updateTransferOrderAssets?: Maybe<UpdateTransferOrderAssetsPayload>;
  updateUser?: Maybe<UpdateUsersPayload>;
  updateUserOtp?: Maybe<ChangeUserOtpPayload>;
  uploadPandaDocument?: Maybe<UploadPandaDocumentPayload>;
};


export type MutationAcknowledgeNoteArgs = {
  input: AcknowledgeNoteInput;
};


export type MutationAddAssetToDeliveryOrderArgs = {
  input: AddAssetToDeliveryOrderInput;
};


export type MutationAddFeeToOrderGroupArgs = {
  input: AddFeeToOrderGroupInput;
};


export type MutationAddFeesToOrderGroupArgs = {
  input: AddFeesToOrderGroupInput;
};


export type MutationAddOrderGroupsToShiftArgs = {
  input: AddOrderGroupsToShiftInput;
};


export type MutationAddQrCodeToAssetArgs = {
  input: AddQrCodeToAssetInput;
};


export type MutationArchiveDriverArgs = {
  input: ArchiveDriversInput;
};


export type MutationArrivedAtCustomerArgs = {
  input: ArrivedAtCustomerInput;
};


export type MutationArrivedAtTerminalArgs = {
  input: ArrivedAtTerminalInput;
};


export type MutationAssignDeliveryAssetWithInventoryArgs = {
  input: AssignDeliveryAssetWithInventoryInput;
};


export type MutationAutoLinkOrdersArgs = {
  input: AutoLinkOrdersInput;
};


export type MutationBulkAsyncRefetchOrderQueueStatusArgs = {
  input: BulkAsyncRefetchOrderQueueStatusInput;
};


export type MutationBulkUpdatePricingsArgs = {
  input: BulkUpdatePricingsInput;
};


export type MutationChangeOrderGroupAssignmentArgs = {
  input: ChangeOrderGroupAssignmentInput;
};


export type MutationChangeShiftAssetArgs = {
  input: ChangeAssetInput;
};


export type MutationClearDataShiftArgs = {
  input: ClearDataShiftInput;
};


export type MutationCopyPreviousRecordsArgs = {
  input: CopyPreviousRecordsInput;
};


export type MutationCreateAssetArgs = {
  input: CreateAssetsInput;
};


export type MutationCreateAttachedAssetArgs = {
  input: CreateAttachedAssetInput;
};


export type MutationCreateBolRetainArgs = {
  input: CreateBolRetainInput;
};


export type MutationCreateBrandArgs = {
  input: CreateBrandsInput;
};


export type MutationCreateCommonCarrierArgs = {
  input: CreateCommonCarrierInput;
};


export type MutationCreateCompletedDeliveryOrderArgs = {
  input: CreateDeliveryOrderInput;
};


export type MutationCreateCompletedLoadingOrderArgs = {
  input: CreateLoadingOrderInput;
};


export type MutationCreateCustomerArgs = {
  input: CreateCustomersInput;
};


export type MutationCreateCustomerAssetArgs = {
  input: CreateCustomerAssetInput;
};


export type MutationCreateCustomerBranchArgs = {
  input: CreateCustomerBranchesInput;
};


export type MutationCreateCustomerUserArgs = {
  input: CreateCustomerUsersInput;
};


export type MutationCreateDirectUploadArgs = {
  input: CreateDirectUploadInput;
};


export type MutationCreateDriverArgs = {
  input: CreateDriversInput;
};


export type MutationCreateFeeArgs = {
  input: CreateFeesInput;
};


export type MutationCreateFeedbackArgs = {
  input: CreateFeedbacksInput;
};


export type MutationCreateGroupArgs = {
  input: CreateGroupInput;
};


export type MutationCreateLineOfServiceArgs = {
  input: CreateLineOfServicesInput;
};


export type MutationCreateLoadingAccountArgs = {
  input: CreateLoadingAccountsInput;
};


export type MutationCreateMarginArgs = {
  input: CreateMarginInput;
};


export type MutationCreateMarketArgs = {
  input: CreateMarketsInput;
};


export type MutationCreateMovementOrderArgs = {
  input: CreateMovementOrderInput;
};


export type MutationCreateNoteArgs = {
  input: CreateNoteInput;
};


export type MutationCreateOrUpdateMovementOrderLineItemArgs = {
  input: CreateOrUpdateMovementOrderLineItemInput;
};


export type MutationCreateOrUpdateTransferOrderLineItemArgs = {
  input: CreateOrUpdateTransferOrderLineItemInput;
};


export type MutationCreateOrderGroupArgs = {
  input: CreateOrderGroupInput;
};


export type MutationCreateOrderGroupsArgs = {
  input: CreateOrderGroupsInput;
};


export type MutationCreateOrderLinkArgs = {
  input: CreateOrderLinkInput;
};


export type MutationCreatePeripheralArgs = {
  input: CreatePeripheralInput;
};


export type MutationCreatePocArgs = {
  input: CreatePocInput;
};


export type MutationCreatePricingsArgs = {
  input: CreatePricingInput;
};


export type MutationCreateProductArgs = {
  input: CreateProductsInput;
};


export type MutationCreateRateTypeArgs = {
  input: CreateRateInput;
};


export type MutationCreateResourcePricingsArgs = {
  input: CreateResourcePricingInput;
};


export type MutationCreateSettingArgs = {
  input: CreateSettingInput;
};


export type MutationCreateShiftArgs = {
  input: CreateShiftInput;
};


export type MutationCreateSiteRecurrenceArgs = {
  input: CreateSiteRecurrenceInput;
};


export type MutationCreateSupplierArgs = {
  input: CreateSuppliersInput;
};


export type MutationCreateTaxArgs = {
  input: CreateTaxInput;
};


export type MutationCreateTerminalArgs = {
  input: CreateTerminalsInput;
};


export type MutationCreateTerminalsSupplierArgs = {
  input: CreateTerminalsSuppliersInput;
};


export type MutationCreateTransferOrderArgs = {
  input: CreateTransferOrderInput;
};


export type MutationDeleteAssetArgs = {
  input: DeleteAssetsInput;
};


export type MutationDeleteBrandArgs = {
  input: DeleteBrandsInput;
};


export type MutationDeleteCustomerBranchArgs = {
  input: DeleteCustomerBranchesInput;
};


export type MutationDeleteDeliveryOrderArgs = {
  input: DeleteDeliveryOrderInput;
};


export type MutationDeleteFeeArgs = {
  input: DeleteFeesInput;
};


export type MutationDeleteLoadingOrderArgs = {
  input: DeleteLoadingOrderInput;
};


export type MutationDeleteMovementOrderArgs = {
  input: DeleteMovementOrderInput;
};


export type MutationDeleteOrderLinkArgs = {
  input: DeleteOrderLinkInput;
};


export type MutationDeletePandaPriceResourceArgs = {
  input: DeletePandaPriceResourceInput;
};


export type MutationDeletePeripheralArgs = {
  input: DeletePeripheralInput;
};


export type MutationDeleteResourceArgs = {
  input: DeleteResourceInput;
};


export type MutationDeleteShiftPlanArgs = {
  input: DeleteShiftPlanInput;
};


export type MutationDeleteSiteRecurrenceArgs = {
  input: DeleteSiteRecurrenceInput;
};


export type MutationDeleteSupplierArgs = {
  input: DeleteSuppliersInput;
};


export type MutationDeleteTerminalArgs = {
  input: DeleteTerminalsInput;
};


export type MutationDeleteTransferOrderArgs = {
  input: DeleteTransferOrderInput;
};


export type MutationDetachAttachedAssetArgs = {
  input: DetachAssetInput;
};


export type MutationDirectUploadPandaDocumentArgs = {
  input: DirectUploadPandaDocumentInput;
};


export type MutationDuplicateOrderArgs = {
  input: DuplicateOrderGroupInput;
};


export type MutationEmailDeliveryTicketArgs = {
  input: EmailDeliveryTicketInput;
};


export type MutationEmailResourcePricingArgs = {
  input: EmailResourcePricingInput;
};


export type MutationEndShiftArgs = {
  input: EndShiftInput;
};


export type MutationExportOrdersArgs = {
  input: ExportOrdersInput;
};


export type MutationGotoCustomerArgs = {
  input: GotoCustomerInput;
};


export type MutationGotoTerminalArgs = {
  input: GotoTerminalInput;
};


export type MutationImportRecordsArgs = {
  input: ImportRecordsInput;
};


export type MutationInviteCustomerToPortalArgs = {
  input: InviteCustomerToPortalInput;
};


export type MutationModifyLineItemProductArgs = {
  input: ModifyLineItemProductInput;
};


export type MutationModifyShiftInventoryArgs = {
  input: ModifyShiftInventoryInput;
};


export type MutationOptimizeShiftPlanArgs = {
  input: OptimizeShiftPlanInput;
};


export type MutationPartialSyncArgs = {
  input: PartialSyncInput;
};


export type MutationPostDeliveryNoteCreateArgs = {
  input: PostDeliveryNoteCreateInput;
};


export type MutationPurgeUserImageArgs = {
  input: PurgeUserImageInput;
};


export type MutationQuickbookDeliveryOrderSyncArgs = {
  input: SalesOrderSyncInput;
};


export type MutationQuickbookShiftSyncArgs = {
  input: ShiftsSyncInput;
};


export type MutationReauthenticateUserArgs = {
  input: ReauthenticateInput;
};


export type MutationRefetchCustomersAsynchronouslyArgs = {
  input: RefetchCustomersAsynchronouslyInput;
};


export type MutationRefetchOrderQueueStatusArgs = {
  input: RefetchOrderQueueStatusInput;
};


export type MutationRefreshApiTokenArgs = {
  input: RefreshApiTokenInput;
};


export type MutationRemoveFeeToOrderGroupArgs = {
  input: RemoveFeeToOrderGroupInput;
};


export type MutationRemoveFeesFromOrderGroupArgs = {
  input: RemoveFeesFromOrderGroupInput;
};


export type MutationRemoveQrCodeFromAssetArgs = {
  input: RemoveQrCodeInput;
};


export type MutationResetPricingArgs = {
  input: ResetPricingInput;
};


export type MutationShiftReconciliationArgs = {
  input: ShiftReconciliationInput;
};


export type MutationSignInUserArgs = {
  input: SignInInput;
};


export type MutationStartShiftArgs = {
  input: StartShiftInput;
};


export type MutationSubmitDeliveryArgs = {
  input: SubmitDeliveryInput;
};


export type MutationSubmitLoadingArgs = {
  input: SubmitLoadingInput;
};


export type MutationSubmitLoadingWithoutBolArgs = {
  input: LoadWithoutBolMutationInput;
};


export type MutationSwitchTenantArgs = {
  input: SwitchTenantInput;
};


export type MutationSyncAllTanksArgs = {
  input: SyncAllInput;
};


export type MutationSyncIndividualTankArgs = {
  input: SyncIndividualTankInput;
};


export type MutationUpdateAppliedPricingArgs = {
  input: UpdateAppliedPricingInput;
};


export type MutationUpdateAssetArgs = {
  input: UpdateAssetsInput;
};


export type MutationUpdateAttachedAssetsArgs = {
  input: UpdateAttachedAssetInput;
};


export type MutationUpdateBrandArgs = {
  input: UpdateBrandsInput;
};


export type MutationUpdateCustomerArgs = {
  input: UpdateCustomersInput;
};


export type MutationUpdateCustomerBranchArgs = {
  input: UpdateCustomerBranchesInput;
};


export type MutationUpdateCustomerPreferencesArgs = {
  input: UpdateCustomerPreferencesInput;
};


export type MutationUpdateCustomerUserArgs = {
  input: UpdateCustomerUsersInput;
};


export type MutationUpdateDeliveryOrderArgs = {
  input: UpdateDeliveryOrderInput;
};


export type MutationUpdateDeliveryOrderLineItemArgs = {
  input: UpdateDeliveryOrderLineItemInput;
};


export type MutationUpdateDriverArgs = {
  input: UpdateDriversInput;
};


export type MutationUpdateDriverOtpArgs = {
  input: ChangeDriverOtpInput;
};


export type MutationUpdateDriverShiftArgs = {
  input: UpdateDriverShiftInput;
};


export type MutationUpdateFeeArgs = {
  input: UpdateFeesInput;
};


export type MutationUpdateGroupArgs = {
  input: UpdateGroupInput;
};


export type MutationUpdateLineOfServiceArgs = {
  input: UpdateLineOfServicesInput;
};


export type MutationUpdateLoadingAccountArgs = {
  input: UpdateLoadingAccountsInput;
};


export type MutationUpdateLoadingOrderArgs = {
  input: UpdateLoadingOrderInput;
};


export type MutationUpdateLoadingOrderLineItemArgs = {
  input: UpdateLoadingOrderLineItemInput;
};


export type MutationUpdateMarginArgs = {
  input: UpdateMarginInput;
};


export type MutationUpdateMarketArgs = {
  input: UpdateMarketsInput;
};


export type MutationUpdateMovementOrderArgs = {
  input: UpdateMovementOrderInput;
};


export type MutationUpdateNoteArgs = {
  input: UpdateNoteInput;
};


export type MutationUpdateOrderGroupArgs = {
  input: UpdateOrderGroupMutationInput;
};


export type MutationUpdateOrderLinkArgs = {
  input: UpdateOrderLinkInput;
};


export type MutationUpdatePeripheralArgs = {
  input: UpdatePeripheralInput;
};


export type MutationUpdatePocArgs = {
  input: UpdatePocInput;
};


export type MutationUpdatePricingsArgs = {
  input: UpdatePricingInput;
};


export type MutationUpdateProductArgs = {
  input: UpdateProductsInput;
};


export type MutationUpdateRateTypeArgs = {
  input: UpdateRateInput;
};


export type MutationUpdateResourceArgs = {
  input: UpdateResourceInput;
};


export type MutationUpdateResourcePricingsArgs = {
  input: UpdateResourcePricingInput;
};


export type MutationUpdateSettingsArgs = {
  input: UpdateSettingsInput;
};


export type MutationUpdateShiftArgs = {
  input: UpdateShiftInput;
};


export type MutationUpdateShiftPlanDeliveryArgs = {
  input: UpdateStopDetailsInput;
};


export type MutationUpdateShiftPlanTruckArgs = {
  input: UpdateTruckDetailsInput;
};


export type MutationUpdateSupplierArgs = {
  input: UpdateSuppliersInput;
};


export type MutationUpdateTaxArgs = {
  input: UpdateTaxInput;
};


export type MutationUpdateTerminalArgs = {
  input: UpdateTerminalsInput;
};


export type MutationUpdateTerminalsSupplierArgs = {
  input: UpdateTerminalsSuppliersInput;
};


export type MutationUpdateTransferOrderArgs = {
  input: UpdateTransferOrderInput;
};


export type MutationUpdateTransferOrderAssetsArgs = {
  input: UpdateTransferOrderAssetsInput;
};


export type MutationUpdateUserArgs = {
  input: UpdateUsersInput;
};


export type MutationUpdateUserOtpArgs = {
  input: ChangeUserOtpInput;
};


export type MutationUploadPandaDocumentArgs = {
  input: UploadPandaDocumentInput;
};

/** Nested asset product category input for assets */
export type NestedAssetProductCategoryInput = {
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  networkName?: InputMaybe<Scalars['String']['input']>;
  networkNumber?: InputMaybe<Scalars['String']['input']>;
  productCategoryId?: InputMaybe<Scalars['ID']['input']>;
  registerModel?: InputMaybe<Scalars['String']['input']>;
  totalizer?: InputMaybe<Scalars['Float']['input']>;
};

/** Nested capacity input for compartment */
export type NestedCapacityInput = {
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  fuelType?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  productCategoryId?: InputMaybe<Scalars['ID']['input']>;
  unit: UnitEnum;
  usablePercentage?: InputMaybe<Scalars['Float']['input']>;
  value?: InputMaybe<Scalars['Int']['input']>;
};

/** Nested compartment input for assets */
export type NestedCompartmentInput = {
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  alignment?: InputMaybe<CompartmentAlignmentEnum>;
  capacitiesAttributes?: InputMaybe<Array<NestedCapacityInput>>;
  diameter?: InputMaybe<Scalars['Float']['input']>;
  empty?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  length?: InputMaybe<Scalars['Float']['input']>;
  liquidControls?: InputMaybe<Scalars['String']['input']>;
  meterNetworkAddress?: InputMaybe<Scalars['String']['input']>;
  meterNumber?: InputMaybe<Scalars['String']['input']>;
  midCom?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  networkName?: InputMaybe<Scalars['String']['input']>;
  networkNumber?: InputMaybe<Scalars['String']['input']>;
  totalControlSystems?: InputMaybe<Scalars['String']['input']>;
};

/** Nested ShipTos input */
export type NestedCustomerBranchInput = {
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  addressBooksAttributes?: InputMaybe<Array<AddressBookInput>>;
  applicableFeesAttributes?: InputMaybe<Array<UpdateApplicableFeeInput>>;
  attachBolOnDeliveryTicket?: InputMaybe<Scalars['Boolean']['input']>;
  autoEmailDeliveryTicket?: InputMaybe<Scalars['Boolean']['input']>;
  deliveryInstruction?: InputMaybe<Scalars['String']['input']>;
  erpId?: InputMaybe<Scalars['String']['input']>;
  hubResourcesAttributes?: InputMaybe<Array<HubResourceInput>>;
  id?: InputMaybe<Scalars['ID']['input']>;
  isCustomerSignatureRequired?: InputMaybe<Scalars['Boolean']['input']>;
  lineOfServiceIds?: InputMaybe<Array<Scalars['ID']['input']>>;
  loadingAccountIds?: InputMaybe<Array<Scalars['ID']['input']>>;
  marketResourcesAttributes?: InputMaybe<Array<MarketResourceInput>>;
  name?: InputMaybe<Scalars['String']['input']>;
  pandaDocuments?: InputMaybe<Array<DirectAttachmentInput>>;
  pickupPointCodeIds?: InputMaybe<Array<Scalars['ID']['input']>>;
  poNumber?: InputMaybe<Scalars['String']['input']>;
  purchaseOrder?: InputMaybe<Scalars['Boolean']['input']>;
  purchaseOrderType?: InputMaybe<PurchaseOrderTypeEnum>;
  siteAttributes?: InputMaybe<SiteInput>;
  supplierIds?: InputMaybe<Array<Scalars['ID']['input']>>;
};

/** Customer preferred driver Input */
export type NestedDriverInput = {
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  workerId?: InputMaybe<Scalars['ID']['input']>;
};

/** Customer fee Input */
export type NestedFeeInput = {
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  feeId?: InputMaybe<Scalars['ID']['input']>;
};

/** Nested GroupMembership Input */
export type NestedGroupMembershipInput = {
  /** Set to true while removing from group */
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  /** Id of User/Driver; Required while assigning to group */
  groupableId?: InputMaybe<Scalars['ID']['input']>;
  /** One Value among User, or Driver; Required while assigning to group */
  groupableType?: InputMaybe<Scalars['String']['input']>;
  /** Required while removing from group */
  id?: InputMaybe<Scalars['ID']['input']>;
};

/** Nested line of service record */
export type NestedLineOfServiceRecord = {
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  lineOfServiceId: Scalars['ID']['input'];
};

/** Nested loading account Input */
export type NestedLoadingAccountInput = {
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  carrierCustomerCode?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  loadingNumber?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  supplierCode?: InputMaybe<Scalars['String']['input']>;
};

/** Nested panda documents input for assets */
export type NestedPandaDocumentsInput = {
  documentType?: InputMaybe<PandaDocumentTypeEnum>;
  id?: InputMaybe<Scalars['ID']['input']>;
  signedBlobId?: InputMaybe<Scalars['ID']['input']>;
};

/** Nested phone input for drivers */
export type NestedPhoneInput = {
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  device?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  primary?: InputMaybe<Scalars['Boolean']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  value?: InputMaybe<Scalars['String']['input']>;
};

/** Nested terminal supplier Input */
export type NestedPickupPointCodeInput = {
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  loadingAccountId?: InputMaybe<Scalars['ID']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** Nested product constituents input */
export type NestedProductConstituentsInput = {
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  basicProductId?: InputMaybe<Scalars['ID']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  percentage?: InputMaybe<Scalars['Float']['input']>;
};

/** Terminal product Input */
export type NestedProductInput = {
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  productId?: InputMaybe<Scalars['ID']['input']>;
};

/** Nested product resource input */
export type NestedProductResourceInput = {
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  resourceId?: InputMaybe<Scalars['ID']['input']>;
  resourceType?: InputMaybe<Scalars['String']['input']>;
};

/** Nested site input for terminal */
export type NestedSiteInput = {
  address?: InputMaybe<Scalars['JSON']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  lat?: InputMaybe<Scalars['String']['input']>;
  lng?: InputMaybe<Scalars['String']['input']>;
  radius?: InputMaybe<Scalars['Float']['input']>;
  tags?: InputMaybe<Scalars['JSON']['input']>;
};

/** Nested subscriptions input for assets */
export type NestedSubscriptionsInput = {
  compartmentId?: InputMaybe<Scalars['ID']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  productId?: InputMaybe<Scalars['ID']['input']>;
  status?: InputMaybe<SubscriptionStatusEnum>;
};

/** Terminal asset Input */
export type NestedTerminalInput = {
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  terminalId?: InputMaybe<Scalars['ID']['input']>;
};

/** Nested terminal supplier Input */
export type NestedTerminalSupplierInput = {
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  bolTimeAt?: InputMaybe<BolTimeAtEnum>;
  id?: InputMaybe<Scalars['ID']['input']>;
  pickupPointCode?: InputMaybe<Scalars['String']['input']>;
  pickupPointCodesAttributes?: InputMaybe<Array<NestedPickupPointCodeInput>>;
  supplierId?: InputMaybe<Scalars['ID']['input']>;
  terminalId?: InputMaybe<Scalars['ID']['input']>;
};

/** Nested user input for customer */
export type NestedUserAttributesInput = {
  address?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  password?: InputMaybe<Scalars['String']['input']>;
  passwordConfirmation?: InputMaybe<Scalars['String']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
  roleIds?: InputMaybe<Array<Scalars['ID']['input']>>;
  status?: InputMaybe<StatusEnum>;
};

/** Customer user Input */
export type NestedUserInput = {
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<StatusEnum>;
};

export type Note = {
  __typename?: 'Note';
  acknowledgedAt?: Maybe<Scalars['Int']['output']>;
  acknowledger?: Maybe<Scalars['String']['output']>;
  acknowledgerId?: Maybe<Scalars['ID']['output']>;
  commenter?: Maybe<Scalars['String']['output']>;
  commenterUser?: Maybe<Commenter>;
  content?: Maybe<Scalars['String']['output']>;
  createdAtTimestamp?: Maybe<Scalars['Int']['output']>;
  generated?: Maybe<Scalars['Boolean']['output']>;
  id: Scalars['ID']['output'];
  notableType?: Maybe<Scalars['String']['output']>;
  noteType?: Maybe<Scalars['String']['output']>;
  orderGroup?: Maybe<OrderGroup>;
  showInDeliveryTicket?: Maybe<Scalars['Boolean']['output']>;
};

/** Acknowledger Input */
export type NoteAcknowledgeInput = {
  /** Note Acknowledgement */
  acknowledged: Scalars['Boolean']['input'];
  id: Scalars['ID']['input'];
};

export type NoteCollection = {
  __typename?: 'NoteCollection';
  collection: Array<Note>;
  metadata: MetaQuery;
};

/** Note Input */
export type NoteInput = {
  content: Scalars['String']['input'];
  noteType?: InputMaybe<NoteTypeEnum>;
};

/** Enum for note types */
export enum NoteTypeEnum {
  /** Demurrage */
  Demurrage = 'demurrage',
  /** Post Delivery */
  PostDelivery = 'post_delivery'
}

export type NotesFilter = {
  fromTimestamp?: InputMaybe<Scalars['Int']['input']>;
  toTimestamp?: InputMaybe<Scalars['Int']['input']>;
};

/** Autogenerated input type of OptimizeShiftPlan */
export type OptimizeShiftPlanInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  ids: Array<Scalars['ID']['input']>;
};

/** Autogenerated return type of OptimizeShiftPlan */
export type OptimizeShiftPlanPayload = {
  __typename?: 'OptimizeShiftPlanPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  queued?: Maybe<Scalars['Boolean']['output']>;
};

export type OrderGroup = {
  __typename?: 'OrderGroup';
  allNotes?: Maybe<Array<Note>>;
  assignable?: Maybe<Groupable>;
  carrierNumber?: Maybe<Scalars['String']['output']>;
  ccTenant?: Maybe<CcTenant>;
  ccTenantId?: Maybe<Scalars['Int']['output']>;
  completeOnTimestamp?: Maybe<Scalars['Int']['output']>;
  completedOn?: Maybe<Scalars['Int']['output']>;
  completedOnTimestamp?: Maybe<Scalars['Int']['output']>;
  creatable?: Maybe<Groupable>;
  createdAtTimestamp: Scalars['Int']['output'];
  customerBranch?: Maybe<CustomerBranch>;
  deliveryOrder?: Maybe<DeliveryOrder>;
  /** @deprecated Resolve it from deliveryOrder */
  deliveryOrders?: Maybe<Array<DeliveryOrder>>;
  departedOn?: Maybe<Scalars['ISO8601DateTime']['output']>;
  departedOnTimestamp?: Maybe<Scalars['Int']['output']>;
  driver?: Maybe<Driver>;
  driverAcceptance: Scalars['String']['output'];
  fees?: Maybe<Array<Fee>>;
  hub?: Maybe<Hub>;
  id: Scalars['ID']['output'];
  lineOfService?: Maybe<LineOfService>;
  loadingOrder?: Maybe<LoadingOrder>;
  /** @deprecated Resolve it from loadingOrder */
  loadingOrders?: Maybe<Array<LoadingOrder>>;
  movementOrder?: Maybe<MovementOrder>;
  offlineOperation?: Maybe<Scalars['Boolean']['output']>;
  orderGroupChildren?: Maybe<Array<OrderGroup>>;
  orderGroupCustomer?: Maybe<Customer>;
  orderGroupsFees?: Maybe<Array<OrderGroupsFee>>;
  poNumber?: Maybe<Scalars['String']['output']>;
  priority?: Maybe<OrderGroupPriorityEnum>;
  purchaseOrderRequired?: Maybe<Scalars['Boolean']['output']>;
  purchaseOrderType?: Maybe<Scalars['String']['output']>;
  /** @deprecated Use recurrence data instead. */
  recurrence?: Maybe<RecurrenceOrderGroup>;
  recurrenceData?: Maybe<RecurrenceData>;
  shift?: Maybe<Shift>;
  shiftId?: Maybe<Scalars['ID']['output']>;
  startOn?: Maybe<Scalars['ISO8601DateTime']['output']>;
  startOnTimestamp?: Maybe<Scalars['Int']['output']>;
  startedOn?: Maybe<Scalars['ISO8601DateTime']['output']>;
  startedOnTimestamp?: Maybe<Scalars['Int']['output']>;
  status: Scalars['String']['output'];
  /** @deprecated Dont use this. This uses too much resources */
  tasks?: Maybe<Array<Task>>;
  ticketId: Scalars['Int']['output'];
  transferOrder?: Maybe<TransferOrder>;
  /** @deprecated Resolve it from transferOrder */
  transferOrders?: Maybe<Array<TransferOrder>>;
  unloadOrder?: Maybe<UnloadOrder>;
  usedAssets?: Maybe<Array<UsedAsset>>;
  user?: Maybe<User>;
  worker?: Maybe<Worker>;
};

export type OrderGroupCollection = {
  __typename?: 'OrderGroupCollection';
  collection: Array<OrderGroup>;
  metadata: MetaQuery;
};

export type OrderGroupFilter = {
  all?: InputMaybe<Scalars['String']['input']>;
  fromTimestamp?: InputMaybe<Scalars['Int']['input']>;
  or?: InputMaybe<Array<OrderGroupFilter>>;
  product?: InputMaybe<Scalars['String']['input']>;
  recurring?: InputMaybe<Scalars['Boolean']['input']>;
  /** one among: completed, verified, accounting_synced, archived, departed, started, blocked, canceled, unassigned, and scheduled */
  status?: InputMaybe<Scalars['String']['input']>;
  /** Array has one or more element among: completed, verified, accounting_synced, archived, departed, started, blocked, canceled, unassigned, and scheduled */
  statuses?: InputMaybe<Array<Scalars['String']['input']>>;
  /** one among: today, this_week, next_week, fortnight */
  timeFrame?: InputMaybe<Scalars['String']['input']>;
  toTimestamp?: InputMaybe<Scalars['Int']['input']>;
  type?: InputMaybe<OrderGroupTypeEnum>;
  /** Ids of workers/drivers */
  workerIds?: InputMaybe<Array<Scalars['ID']['input']>>;
};

export type OrderGroupFiltersInput = {
  fromTimestamp?: InputMaybe<Scalars['Int']['input']>;
  linkedOrderId?: InputMaybe<Scalars['ID']['input']>;
  product?: InputMaybe<Scalars['String']['input']>;
  /** Shift id */
  shiftId?: InputMaybe<Scalars['ID']['input']>;
  /** one among: unassigned, assigned, all */
  shiftStatus?: InputMaybe<Scalars['String']['input']>;
  /** one among: unassigned, scheduled, started, completed */
  status?: InputMaybe<Scalars['String']['input']>;
  /** Array has one or more element among: unassigned, scheduled, started, completed */
  statuses?: InputMaybe<Array<Scalars['String']['input']>>;
  /** one among: today, this_week, next_week, fortnight */
  timeFrame?: InputMaybe<Scalars['String']['input']>;
  toTimestamp?: InputMaybe<Scalars['Int']['input']>;
  /** Order groups of a particular driver */
  workerId?: InputMaybe<Scalars['ID']['input']>;
};

/** OrderGroup Input */
export type OrderGroupInput = {
  /** Asset Movement Location. */
  assetMovementLocationsAttribute?: InputMaybe<AssetMovementLocationInput>;
  /** Carrier order number. */
  carrierNumber?: InputMaybe<Scalars['String']['input']>;
  /** CC Tenant ID. */
  ccTenantId?: InputMaybe<Scalars['ID']['input']>;
  /** Completed time. Required if driver is provided. */
  completedOnTimestamp?: InputMaybe<Scalars['Int']['input']>;
  /** Customer Branch ID. */
  customerBranchId?: InputMaybe<Scalars['ID']['input']>;
  /** Delivery order input object. */
  deliveryOrderAttributes?: InputMaybe<DeliveryOrderInput>;
  /** Delivery order input object. */
  deliveryOrdersAttributes?: InputMaybe<Array<DeliveryOrderInput>>;
  /** Departed time. Required if driver is provided. */
  departedOnTimestamp?: InputMaybe<Scalars['Int']['input']>;
  /** ERP ID of the */
  erpId?: InputMaybe<Scalars['String']['input']>;
  /** ID of the order group. Required during update. */
  id?: InputMaybe<Scalars['ID']['input']>;
  isDriverLinkable?: InputMaybe<Scalars['Boolean']['input']>;
  /** Loading order input object. */
  loadingOrderAttributes?: InputMaybe<LoadingOrderInput>;
  /** Loading order input object. */
  loadingOrdersAttributes?: InputMaybe<Array<LoadingOrderInput>>;
  /** Transfer order input object. */
  movementOrderAttributes?: InputMaybe<MovementOrderInput>;
  /** Set this value to true incase of offline */
  offlineOperation?: InputMaybe<Scalars['Boolean']['input']>;
  orderGroupsFeesAttributes?: InputMaybe<Array<UpdateOrderGroupFeeInput>>;
  /** Customer's purchase order number. */
  poNumber?: InputMaybe<Scalars['String']['input']>;
  /** Should be either urgent or normal */
  priority?: InputMaybe<OrderGroupPriorityEnum>;
  purchaseOrderType?: InputMaybe<PurchaseOrderTypeEnum>;
  /** Recurrence configuration */
  recurrence?: InputMaybe<RecurrenceInput>;
  /** Shift ID. */
  shiftId?: InputMaybe<Scalars['ID']['input']>;
  /** Start time. Required if driver is provided. */
  startOnTimestamp?: InputMaybe<Scalars['Int']['input']>;
  /** Started time. Required if driver is provided. */
  startedOnTimestamp?: InputMaybe<Scalars['Int']['input']>;
  /** Status of the order; When scheduled is changed to any status, It is required to have shift defined for driver. */
  status?: InputMaybe<Scalars['String']['input']>;
  /** Transfer order input object. */
  transferOrderAttributes?: InputMaybe<TransferOrderInput>;
  /** Assigned User ID. */
  userId?: InputMaybe<Scalars['ID']['input']>;
  /** Driver ID. */
  workerId?: InputMaybe<Scalars['ID']['input']>;
};

/** Enum to set priorities for order groups */
export enum OrderGroupPriorityEnum {
  /** Normal */
  Normal = 'normal',
  /** Urgent */
  Urgent = 'urgent'
}

export type OrderGroupSorter = {
  field: OrderGroupSorterEnum;
  order?: InputMaybe<FieldOrder>;
};

/** Enum to use on sorter fields when call a query */
export enum OrderGroupSorterEnum {
  Bolnumbers = 'BOLNUMBERS',
  Completedon = 'COMPLETEDON',
  Customer = 'CUSTOMER',
  Deliveredgals = 'DELIVEREDGALS',
  Deliveryid = 'DELIVERYID',
  Departedon = 'DEPARTEDON',
  Driver = 'DRIVER',
  Erpid = 'ERPID',
  Loadedgals = 'LOADEDGALS',
  Loadingid = 'LOADINGID',
  Plannedgals = 'PLANNEDGALS',
  Requestedgals = 'REQUESTEDGALS',
  Shipto = 'SHIPTO',
  Startedon = 'STARTEDON',
  Starton = 'STARTON',
  Status = 'STATUS',
  Terminal = 'TERMINAL'
}

/** Enum for order group statuses */
export enum OrderGroupStatusEnum {
  /** Accounting Synced */
  AccountingSynced = 'accounting_synced',
  /** Archived */
  Archived = 'archived',
  /** Blocked */
  Blocked = 'blocked',
  /** Completed */
  Completed = 'completed',
  /** Departed */
  Departed = 'departed',
  /** Scheduled */
  Scheduled = 'scheduled',
  /** Started */
  Started = 'started',
  /** Unassigned */
  Unassigned = 'unassigned',
  /** Verified */
  Verified = 'verified'
}

/** Enum to use for filter order groups */
export enum OrderGroupTypeEnum {
  /** Delivery order */
  Delivery = 'delivery',
  /** Extraction order */
  Extraction = 'extraction',
  /** Loading order */
  Loading = 'loading',
  /** Movement order */
  Movement = 'movement',
  /** Transfer order */
  Transfer = 'transfer'
}

export type OrderGroupsFee = {
  __typename?: 'OrderGroupsFee';
  fee: Fee;
  id: Scalars['ID']['output'];
  orderGroup: OrderGroup;
  price?: Maybe<Scalars['Float']['output']>;
  quantity: Scalars['Float']['output'];
  total?: Maybe<Scalars['Float']['output']>;
};

export type OrderHistoryFilter = {
  id: Scalars['ID']['input'];
};

export type OrderLink = {
  __typename?: 'OrderLink';
  data?: Maybe<Scalars['JSON']['output']>;
  deliveryOrder?: Maybe<DeliveryOrder>;
  id: Scalars['ID']['output'];
  loadingOrder?: Maybe<LoadingOrder>;
  transferOrder?: Maybe<TransferOrder>;
};

export type OrderLinkCollection = {
  __typename?: 'OrderLinkCollection';
  collection: Array<OrderLink>;
  metadata: MetaQuery;
};

export type OrderLinkFilter = {
  deliveryOrderId?: InputMaybe<Scalars['ID']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  loadingOrderId?: InputMaybe<Scalars['ID']['input']>;
  or?: InputMaybe<Array<OrderLinkFilter>>;
};

export type OrderWell = {
  __typename?: 'OrderWell';
  address?: Maybe<Scalars['String']['output']>;
  assignedBy?: Maybe<Scalars['String']['output']>;
  carrierName?: Maybe<Scalars['String']['output']>;
  city?: Maybe<Scalars['String']['output']>;
  coordinates?: Maybe<Coordinates>;
  createdAtTimestamp?: Maybe<Scalars['Int']['output']>;
  createdBy?: Maybe<Scalars['String']['output']>;
  customerErpId?: Maybe<Scalars['String']['output']>;
  customerName?: Maybe<Scalars['String']['output']>;
  customerPurchaseOrder?: Maybe<Scalars['Boolean']['output']>;
  deliveredGal?: Maybe<Scalars['Float']['output']>;
  deliveredQty?: Maybe<Scalars['Float']['output']>;
  deliveryTruckNames?: Maybe<Array<Scalars['String']['output']>>;
  driverAcceptance?: Maybe<Scalars['String']['output']>;
  driverGroupName?: Maybe<Scalars['String']['output']>;
  driverId?: Maybe<Scalars['ID']['output']>;
  driverName?: Maybe<Scalars['String']['output']>;
  endAt?: Maybe<Scalars['Int']['output']>;
  /** Present only for delivery order */
  hubName?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  linkedOrders?: Maybe<Array<Scalars['ID']['output']>>;
  orderId: Scalars['ID']['output'];
  plannedAt?: Maybe<Scalars['Int']['output']>;
  plannedGal?: Maybe<Scalars['Float']['output']>;
  plannedQty?: Maybe<Scalars['Float']['output']>;
  poNumber?: Maybe<Scalars['String']['output']>;
  /** Present only if order type is loading */
  preferredSupplierNames?: Maybe<Array<Scalars['String']['output']>>;
  priority?: Maybe<OrderGroupPriorityEnum>;
  productNames?: Maybe<Array<Scalars['String']['output']>>;
  purchaseOrderIsRequired?: Maybe<Scalars['Boolean']['output']>;
  purchaseOrderType?: Maybe<Scalars['String']['output']>;
  shipToName?: Maybe<Scalars['String']['output']>;
  shipToPurchaseOrder?: Maybe<Scalars['Boolean']['output']>;
  source?: Maybe<Scalars['String']['output']>;
  startAt?: Maybe<Scalars['Int']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  /** Present only after loading is performed */
  supplierNames?: Maybe<Array<Scalars['String']['output']>>;
  ticketId: Scalars['ID']['output'];
  type?: Maybe<Scalars['String']['output']>;
  zip?: Maybe<Scalars['String']['output']>;
};

export type OrderWellCollection = {
  __typename?: 'OrderWellCollection';
  collection: Array<OrderWell>;
  metadata: MetaQuery;
};

export type OrderWellFilter = {
  fromTimestamp?: InputMaybe<Scalars['Int']['input']>;
  statuses?: InputMaybe<Array<OrderGroupStatusEnum>>;
  toTimestamp?: InputMaybe<Scalars['Int']['input']>;
};

export type OrderedProductsAverage = {
  __typename?: 'OrderedProductsAverage';
  orderCount?: Maybe<Scalars['Int']['output']>;
  productId?: Maybe<Scalars['ID']['output']>;
  volume?: Maybe<Scalars['Float']['output']>;
};

export type Pagination = {
  page: Scalars['Int']['input'];
  size: Scalars['Int']['input'];
};

export type PandaDocument = {
  __typename?: 'PandaDocument';
  blobFileUrl?: Maybe<Scalars['String']['output']>;
  documentType?: Maybe<Scalars['String']['output']>;
  documentableId?: Maybe<Scalars['ID']['output']>;
  documentableType?: Maybe<Scalars['String']['output']>;
  externalFileData?: Maybe<AttachedFile>;
  fileData?: Maybe<Scalars['String']['output']>;
  fileName?: Maybe<Scalars['String']['output']>;
  fileUrl?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
};

/** Panda Document Input */
export type PandaDocumentInput = {
  /** URL to file, should be permanent */
  directUploadFileUrl?: InputMaybe<Scalars['String']['input']>;
  /** Binary file data. */
  fileData?: InputMaybe<Scalars['String']['input']>;
  /** URL of the document. */
  fileUrl?: InputMaybe<Scalars['String']['input']>;
  /** filename */
  filename?: InputMaybe<Scalars['String']['input']>;
  /** ID of the document. */
  id?: InputMaybe<Scalars['ID']['input']>;
};

export enum PandaDocumentTypeEnum {
  /** completion */
  Completion = 'completion',
  /** Signature */
  Signature = 'signature',
  /** Tank Chart */
  TankChart = 'tank_chart'
}

/** Enum to use on sorter fields when call a query */
export enum PandaTankMonitorFieldOrder {
  /** ascending sorter */
  Asc = 'asc',
  /** descending sorter */
  Desc = 'desc'
}

/** Autogenerated input type of PartialSync */
export type PartialSyncInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  orderGroupId: Scalars['ID']['input'];
  shiftId: Scalars['ID']['input'];
};

/** Autogenerated return type of PartialSync */
export type PartialSyncPayload = {
  __typename?: 'PartialSyncPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  errors?: Maybe<Array<Scalars['JSON']['output']>>;
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type Peripheral = {
  __typename?: 'Peripheral';
  cost?: Maybe<Scalars['Int']['output']>;
  erpId?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  legalDescription?: Maybe<Scalars['String']['output']>;
  lineOfServices?: Maybe<Array<LineOfService>>;
  peripheralCategory?: Maybe<PeripheralCategory>;
  soldAs?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  subType?: Maybe<Scalars['String']['output']>;
};

export type PeripheralAttribute = {
  __typename?: 'PeripheralAttribute';
  formLabel?: Maybe<Scalars['String']['output']>;
  formName?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['ID']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  peripheralAttributeType?: Maybe<Scalars['String']['output']>;
  peripheralFormAttributeType?: Maybe<PeripheralFormAttribute>;
};

export type PeripheralCategory = {
  __typename?: 'PeripheralCategory';
  id: Scalars['ID']['output'];
  name?: Maybe<Scalars['String']['output']>;
};

export type PeripheralCollection = {
  __typename?: 'PeripheralCollection';
  collection: Array<Peripheral>;
  metadata: MetaQuery;
};

export type PeripheralFilter = {
  all?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  or?: InputMaybe<Array<PeripheralFilter>>;
};

export type PeripheralFormAttribute = {
  __typename?: 'PeripheralFormAttribute';
  options?: Maybe<Array<PeripheralFormOptionAttribute>>;
  placeholder?: Maybe<Scalars['String']['output']>;
};

export type PeripheralFormOptionAttribute = {
  __typename?: 'PeripheralFormOptionAttribute';
  label?: Maybe<Scalars['String']['output']>;
  value?: Maybe<Scalars['String']['output']>;
};

/** peripheral input */
export type PeripheralInput = {
  cost?: InputMaybe<Scalars['Int']['input']>;
  erpId?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  legalDescription?: InputMaybe<Scalars['String']['input']>;
  lineOfServiceIds?: InputMaybe<Array<Scalars['ID']['input']>>;
  peripheralCategoryId: Scalars['ID']['input'];
  soldAs?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  subType?: InputMaybe<Scalars['String']['input']>;
};

export type PeripheralInstance = {
  __typename?: 'PeripheralInstance';
  fileUrl?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['ID']['output']>;
  peripheralAttribute?: Maybe<PeripheralAttribute>;
  value?: Maybe<Scalars['String']['output']>;
};

/** Peripheral Instance Input */
export type PeripheralInstanceInput = {
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  /** ID of PeripheralInstance. Required on update. */
  id?: InputMaybe<Scalars['ID']['input']>;
  /** Movement Order Line Item ID. */
  movementOrderLineItemId?: InputMaybe<Scalars['ID']['input']>;
  /** Peripheral Attribute ID. */
  peripheralAttributeId?: InputMaybe<Scalars['ID']['input']>;
  /** Peripheral Attribute Value. */
  value?: InputMaybe<Scalars['String']['input']>;
};

export type PickupPointCode = {
  __typename?: 'PickupPointCode';
  code?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  loadingAccountId?: Maybe<Scalars['ID']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  netsuiteId?: Maybe<Scalars['String']['output']>;
  supplier: Supplier;
  terminal: Terminal;
  terminalsSupplier: TerminalsSupplier;
  terminalsSupplierId: Scalars['ID']['output'];
};

export type PickupPointCodeCollection = {
  __typename?: 'PickupPointCodeCollection';
  collection: Array<PickupPointCode>;
  metadata: MetaQuery;
};

export type PickupPointCodeFilter = {
  all?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  or?: InputMaybe<Array<PickupPointCodeFilter>>;
  supplierName?: InputMaybe<Scalars['String']['input']>;
  terminalName?: InputMaybe<Scalars['String']['input']>;
};

export type PickupPointCodeSorter = {
  field: PickupPointCodeSorterEnum;
  order?: InputMaybe<FieldOrder>;
};

/** Enum to use on sorter fields when call a query */
export enum PickupPointCodeSorterEnum {
  Code = 'CODE',
  Name = 'NAME',
  Suppliername = 'SUPPLIERNAME',
  Terminalname = 'TERMINALNAME'
}

/** Autogenerated input type of PostDeliveryNoteCreate */
export type PostDeliveryNoteCreateInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  deliveryOrderId: Scalars['ID']['input'];
  postDeliveryNote?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated return type of PostDeliveryNoteCreate */
export type PostDeliveryNoteCreatePayload = {
  __typename?: 'PostDeliveryNoteCreatePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  deliveryOrder?: Maybe<DeliveryOrder>;
};

export type PreferredSupplier = {
  __typename?: 'PreferredSupplier';
  id: Scalars['ID']['output'];
  loadingAccount?: Maybe<LoadingAccount>;
  priority?: Maybe<Scalars['Int']['output']>;
};

/** PreferredSupplier Input */
export type PreferredSupplierInput = {
  /** Deprecated. DO NOT USE. */
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  /** PreferredSupplier ID. Required on update. */
  id?: InputMaybe<Scalars['ID']['input']>;
  /** Loading account ID. */
  loadingAccountId?: InputMaybe<Scalars['ID']['input']>;
  /** Priority of Supplier, and should be one among 1, 2, and 3. */
  priority?: InputMaybe<Scalars['Int']['input']>;
};

export type PriceConfiguration = {
  __typename?: 'PriceConfiguration';
  calculatedDiscount?: Maybe<Scalars['Float']['output']>;
  calculatedFees?: Maybe<Scalars['JSON']['output']>;
  calculatedMargins?: Maybe<Scalars['JSON']['output']>;
  calculatedTaxes?: Maybe<Scalars['JSON']['output']>;
  id: Scalars['ID']['output'];
  pricing: Pricing;
  totalPrice?: Maybe<Scalars['Float']['output']>;
};

/** Create Resource Pricing Type input */
export type PriceConfigurationInput = {
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  pricingId?: InputMaybe<Scalars['ID']['input']>;
};

export type Pricing = {
  __typename?: 'Pricing';
  effectiveEndTimestamp?: Maybe<Scalars['String']['output']>;
  effectiveStartTimestamp?: Maybe<Scalars['String']['output']>;
  hubId?: Maybe<Scalars['ID']['output']>;
  id?: Maybe<Scalars['ID']['output']>;
  marketId?: Maybe<Scalars['ID']['output']>;
  previousPrice?: Maybe<Scalars['Float']['output']>;
  price?: Maybe<Scalars['Float']['output']>;
  productId?: Maybe<Scalars['ID']['output']>;
  rateType?: Maybe<RateType>;
  supplierId?: Maybe<Scalars['ID']['output']>;
  terminalId?: Maybe<Scalars['ID']['output']>;
};

export type PricingCollection = {
  __typename?: 'PricingCollection';
  collection: Array<Pricing>;
  metadata: MetaDataQuery;
};

export type PricingFilter = {
  endDateTimestamp: Scalars['Int']['input'];
  rateType: Scalars['String']['input'];
  startDateTimestamp: Scalars['Int']['input'];
};

export type PricingFiltersInput = {
  productIds: Array<Scalars['ID']['input']>;
  rateTypeId: Scalars['ID']['input'];
};

export type Product = {
  __typename?: 'Product';
  active: Scalars['Boolean']['output'];
  barcode?: Maybe<Scalars['String']['output']>;
  brand?: Maybe<Brand>;
  category: Scalars['String']['output'];
  code?: Maybe<Scalars['String']['output']>;
  colorCode?: Maybe<Scalars['String']['output']>;
  comparableProducts?: Maybe<Array<ProductResource>>;
  deletedAt?: Maybe<Scalars['ISO8601DateTime']['output']>;
  erpId?: Maybe<Scalars['String']['output']>;
  hub?: Maybe<Hub>;
  hubResource?: Maybe<HubResource>;
  id: Scalars['ID']['output'];
  ignoreNsPush?: Maybe<Scalars['Boolean']['output']>;
  imageUrl?: Maybe<Scalars['String']['output']>;
  legalDescription?: Maybe<Scalars['String']['output']>;
  lineOfServices?: Maybe<Array<LineOfService>>;
  longDescription?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  netsuiteId?: Maybe<Scalars['ID']['output']>;
  nonEditableRecords?: Maybe<Array<Scalars['JSON']['output']>>;
  productCategory?: Maybe<ProductCategory>;
  productConstituents?: Maybe<Array<ProductConstituent>>;
  productSubCategory?: Maybe<ProductSubCategory>;
  productType: Scalars['String']['output'];
  shortName?: Maybe<Scalars['String']['output']>;
  soldAs?: Maybe<Scalars['String']['output']>;
  subCategory?: Maybe<Scalars['String']['output']>;
  unit?: Maybe<Scalars['String']['output']>;
};

/** Categorable Type */
export type ProductCategorable = ResourcePricing;

export type ProductCategory = {
  __typename?: 'ProductCategory';
  categoryType?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  name?: Maybe<Scalars['String']['output']>;
  productCategoryProductSubCategories?: Maybe<Array<ProductCategoryProductSubCategory>>;
  productSubCategories?: Maybe<Array<ProductSubCategory>>;
};

export type ProductCategoryProductSubCategory = {
  __typename?: 'ProductCategoryProductSubCategory';
  id: Scalars['ID']['output'];
  productCategory: ProductCategory;
  productSubCategory: ProductSubCategory;
};

export type ProductCategoryResource = {
  __typename?: 'ProductCategoryResource';
  id: Scalars['ID']['output'];
  productCategorable: ProductCategorable;
  productCategorableId: Scalars['ID']['output'];
  productCategorableType: Scalars['String']['output'];
  productCategory: ProductCategory;
};

/** Manages a connection with product category */
export type ProductCategoryResourceInput = {
  /** Only pass and set true when need to destroy */
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  /** Product Category Resource ID. Required on update. */
  id?: InputMaybe<Scalars['ID']['input']>;
  /** ID of Product Category to be associated with. */
  productCategoryId?: InputMaybe<Scalars['ID']['input']>;
};

export type ProductCollection = {
  __typename?: 'ProductCollection';
  collection: Array<Product>;
  metadata: MetaQuery;
};

export type ProductConstituent = {
  __typename?: 'ProductConstituent';
  basicProduct: Product;
  id: Scalars['ID']['output'];
  percentage?: Maybe<Scalars['Float']['output']>;
};

export type ProductFilter = {
  /** Fetch only active products */
  active?: InputMaybe<Scalars['Boolean']['input']>;
  all?: InputMaybe<Scalars['String']['input']>;
  brand?: InputMaybe<Scalars['String']['input']>;
  category?: InputMaybe<Scalars['String']['input']>;
  erpId?: InputMaybe<Scalars['String']['input']>;
  hubIds?: InputMaybe<Array<Scalars['ID']['input']>>;
  or?: InputMaybe<Array<ProductFilter>>;
  productCategoryId?: InputMaybe<Scalars['ID']['input']>;
  unit?: InputMaybe<UnitEnum>;
  units?: InputMaybe<Array<UnitEnum>>;
};

export type ProductResource = {
  __typename?: 'ProductResource';
  comparableProductId: Scalars['ID']['output'];
  id: Scalars['ID']['output'];
  productResource: Product;
  resourceId: Scalars['ID']['output'];
  resourceType: Scalars['String']['output'];
};

export type ProductSorter = {
  field: ProductSorterEnum;
  order?: InputMaybe<FieldOrder>;
};

/** Enum to use on sorter fields when call a query */
export enum ProductSorterEnum {
  Alias = 'ALIAS',
  Category = 'CATEGORY',
  Code = 'CODE',
  Erpid = 'ERPID',
  Subcat = 'SUBCAT',
  Type = 'TYPE',
  Unit = 'UNIT'
}

export type ProductSubCategory = {
  __typename?: 'ProductSubCategory';
  id: Scalars['ID']['output'];
  name?: Maybe<Scalars['String']['output']>;
  productCategories?: Maybe<Array<ProductCategory>>;
  productCategoryProductSubCategories?: Maybe<Array<ProductCategoryProductSubCategory>>;
  value?: Maybe<Scalars['String']['output']>;
};

export enum ProductTypeEnum {
  /** Basic */
  Basic = 'basic',
  /** Blend */
  Blend = 'blend'
}

/** Enum for list of providers */
export enum ProvidersEnum {
  Anova = 'Anova',
  EcoGreen = 'EcoGreen',
  Graco = 'Graco',
  MyTankInfo = 'MyTankInfo',
  OtoData = 'OtoData',
  SmartTank = 'SmartTank',
  TankScan = 'TankScan',
  WesRock = 'WesRock'
}

/** Enum for purchase order type */
export enum PurchaseOrderTypeEnum {
  /** Dollar Amount / Blanket PO */
  BlanketPo = 'blanket_po',
  /** Job PO */
  JobPo = 'job_po',
  /** Job plus Order PO */
  JobPoPlus = 'job_po_plus',
  /** Order PO - After */
  OrderPoAfter = 'order_po_after',
  /**  Order PO - Before */
  OrderPoBefore = 'order_po_before'
}

/** Autogenerated input type of PurgeUserImage */
export type PurgeUserImageInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
};

/** Autogenerated return type of PurgeUserImage */
export type PurgeUserImagePayload = {
  __typename?: 'PurgeUserImagePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  user?: Maybe<User>;
};

export type Query = {
  __typename?: 'Query';
  appliedPricings?: Maybe<Array<AppliedPricing>>;
  asset: Asset;
  assetMovementOrderHistory: Array<AssetMovementOrderHistory>;
  assets: Array<Asset>;
  assetsDevice: Device;
  biMetabaseReport?: Maybe<BiResponse>;
  brand: Brand;
  brands: Array<Brand>;
  capacityTypes: Array<CapacityTypes>;
  ccTenants?: Maybe<Array<CcTenant>>;
  countryCodes: Scalars['JSON']['output'];
  current: Current;
  customer: Customer;
  customerBranch: CustomerBranch;
  customers: Array<Customer>;
  dataImports: Array<DataImport>;
  deliveryAsset: DeliveryAsset;
  deliveryAssets: Array<DeliveryAsset>;
  deliveryOrder: DeliveryOrder;
  deliveryOrders?: Maybe<Array<DeliveryOrder>>;
  device: Device;
  devicesSummary: Scalars['JSON']['output'];
  driver: Driver;
  drivers: Array<Driver>;
  exportDocument?: Maybe<ExportDocument>;
  features: Array<Feature>;
  fee: Fee;
  feedbacks: FeedbackCollection;
  fees: Array<Fee>;
  fetchGraphData?: Maybe<Graph>;
  fetchResourceByIds: Array<ResourceFetchableById>;
  fetchResourceNames: Scalars['JSON']['output'];
  filteredAddressBooks: AddressBookCollection;
  filteredApplicableFees: ApplicableFeeCollection;
  filteredAssetMovementOrderHistoryList: AssetMovementOrderHistoryListCollection;
  filteredAssets: AssetCollection;
  filteredCcTenants?: Maybe<CcTenantCollection>;
  filteredCustomerBranches: CustomerBranchCollection;
  filteredCustomerUsers: CustomerUserCollection;
  filteredCustomers: CustomerCollection;
  filteredDeliveryAssets: DeliveryAssetCollection;
  filteredDrivers: DriverCollection;
  filteredFees: FeeCollection;
  filteredGroups: GroupCollection;
  filteredLineOfServices: LineOfServiceCollection;
  filteredLoadOrderLineItems: LoadingOrderLineItemCollection;
  filteredLoadingAccounts: LoadingAccountCollection;
  filteredMargins: MarginCollection;
  filteredNotes: NoteCollection;
  filteredOrderGroups: OrderGroupCollection;
  filteredOrderHistory: VersionCollection;
  filteredOrderLinks: OrderLinkCollection;
  filteredOrderWell: OrderWellCollection;
  filteredPeripherals: PeripheralCollection;
  filteredPickupPointCodes: PickupPointCodeCollection;
  filteredPricings: Array<Pricing>;
  filteredProducts: ProductCollection;
  filteredShiftPlans: ShiftPlanCollection;
  filteredShifts: ShiftCollection;
  filteredSuppliers: SupplierCollection;
  filteredTankMonitors: DeviceCollection;
  filteredTaxes: TaxCollection;
  filteredTerminals: TerminalCollection;
  filteredTerminalsSuppliers: TerminalsSupplierCollection;
  filteredTransferOrders: TransferOrderCollection;
  group: Group;
  lineOfService: LineOfService;
  lineOfServices: Array<LineOfService>;
  linkedOrdersDriversLists?: Maybe<Array<LinkedDriver>>;
  loadingAccount: LoadingAccount;
  loadingLineOrderItems: Array<LoadingOrderLineItem>;
  loadingOrder: LoadingOrder;
  loadingOrders?: Maybe<Array<LoadingOrder>>;
  margin: Margin;
  market: Market;
  markets: Array<Market>;
  movementOrder: MovementOrder;
  orderGroup: OrderGroup;
  orderGroups?: Maybe<Array<OrderGroup>>;
  orderHistory?: Maybe<Array<Version>>;
  orderWell?: Maybe<Array<OrderWell>>;
  orderWellOrders?: Maybe<Array<OrderWell>>;
  ownAssets: Array<Asset>;
  peripheral: Peripheral;
  peripheralAttributes: Array<PeripheralAttribute>;
  peripherals: Array<Peripheral>;
  peripheralsCategories: Array<PeripheralCategory>;
  pickupPointCodes: Array<PickupPointCode>;
  preferredCustomers: Array<Customer>;
  pricing: Pricing;
  product: Product;
  productCategories: Array<ProductCategory>;
  productSubCategories: Array<ProductSubCategory>;
  products: Array<Product>;
  rateType: RateType;
  rateTypes: Array<RateType>;
  recurrencesOrders: Array<RecurrenceOrder>;
  resourcePricing: ResourcePricing;
  resourcePricings: Array<ResourcePricing>;
  resourceStatusType: Array<ResourceStatusTypes>;
  roles: Array<Role>;
  searchDeliveryOrders: Array<DeliveryOrder>;
  searchLoadingOrders: Array<LoadingOrder>;
  searchTransferOrders: Array<TransferOrder>;
  setting: Setting;
  settings: Array<Setting>;
  shift: Shift;
  shiftPlanDeliveries: Array<ShiftPlanDeliveries>;
  shiftStates: Scalars['JSON']['output'];
  shifts?: Maybe<Array<Shift>>;
  supplier: Supplier;
  suppliers: Array<Supplier>;
  syncAllStatus: Scalars['JSON']['output'];
  /** @deprecated Dont use this. This uses too much resuorces */
  tasks: Array<Task>;
  tax: Tax;
  terminal: Terminal;
  terminalDistance: Array<TerminalDistance>;
  terminals: Array<Terminal>;
  timezones: Scalars['JSON']['output'];
  todaysPricings: PricingCollection;
  transferOrder: TransferOrder;
  transferOrders?: Maybe<CollectionTransferOrders>;
  user: User;
  users: Array<User>;
};


export type QueryAppliedPricingsArgs = {
  orderGroupId: Scalars['ID']['input'];
};


export type QueryAssetArgs = {
  id: Scalars['ID']['input'];
};


export type QueryAssetMovementOrderHistoryArgs = {
  id: Scalars['ID']['input'];
};


export type QueryAssetsDeviceArgs = {
  id: Scalars['ID']['input'];
};


export type QueryBiMetabaseReportArgs = {
  params: Scalars['JSON']['input'];
  reportId: Scalars['Int']['input'];
  reportType: ReportEnum;
};


export type QueryBrandArgs = {
  id: Scalars['ID']['input'];
};


export type QueryCustomerArgs = {
  id: Scalars['ID']['input'];
};


export type QueryCustomerBranchArgs = {
  id: Scalars['ID']['input'];
};


export type QueryCustomersArgs = {
  tenant?: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryDeliveryAssetArgs = {
  id: Scalars['ID']['input'];
};


export type QueryDeliveryAssetsArgs = {
  ids?: InputMaybe<Array<Scalars['ID']['input']>>;
};


export type QueryDeliveryOrderArgs = {
  id: Scalars['ID']['input'];
};


export type QueryDeliveryOrdersArgs = {
  filter?: InputMaybe<OrderGroupFiltersInput>;
};


export type QueryDeviceArgs = {
  id: Scalars['ID']['input'];
};


export type QueryDevicesSummaryArgs = {
  filter?: InputMaybe<DeviceFilterInput>;
};


export type QueryDriverArgs = {
  id: Scalars['ID']['input'];
};


export type QueryExportDocumentArgs = {
  exportDocumentId: Scalars['ID']['input'];
};


export type QueryFeaturesArgs = {
  onlySettings?: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryFeeArgs = {
  id: Scalars['ID']['input'];
};


export type QueryFeedbacksArgs = {
  filter?: InputMaybe<FeedbackFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
};


export type QueryFetchGraphDataArgs = {
  fromTimestamp?: InputMaybe<Scalars['Int']['input']>;
  toTimestamp?: InputMaybe<Scalars['Int']['input']>;
};


export type QueryFetchResourceByIdsArgs = {
  ids: Array<Scalars['ID']['input']>;
  resource: ResourceFetchEnum;
};


export type QueryFetchResourceNamesArgs = {
  ids: Array<Scalars['ID']['input']>;
  resource: ResourceFetchEnum;
};


export type QueryFilteredAddressBooksArgs = {
  filter?: InputMaybe<AddressBookFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  sorter?: InputMaybe<Array<AddressBookSorter>>;
};


export type QueryFilteredApplicableFeesArgs = {
  filter?: InputMaybe<ApplicableFeeFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  sorter?: InputMaybe<Array<ApplicableFeeSorter>>;
};


export type QueryFilteredAssetMovementOrderHistoryListArgs = {
  filter?: InputMaybe<AssetMovementOrderHistoryListFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  sorter?: InputMaybe<Array<AssetMovementOrderHistorySorter>>;
};


export type QueryFilteredAssetsArgs = {
  filter?: InputMaybe<AssetFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  sorter?: InputMaybe<Array<AssetSorter>>;
};


export type QueryFilteredCcTenantsArgs = {
  filter?: InputMaybe<CcTenantFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
};


export type QueryFilteredCustomerBranchesArgs = {
  filter?: InputMaybe<CustomerBranchFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  sorter?: InputMaybe<Array<CustomerBranchSorter>>;
};


export type QueryFilteredCustomerUsersArgs = {
  filter?: InputMaybe<CustomerUserFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  sorter?: InputMaybe<Array<CustomerUserSorter>>;
};


export type QueryFilteredCustomersArgs = {
  filter?: InputMaybe<CustomerFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  sorter?: InputMaybe<Array<BaseSorter>>;
};


export type QueryFilteredDeliveryAssetsArgs = {
  filter?: InputMaybe<DeliveryAssetFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  sorter?: InputMaybe<Array<BaseSorter>>;
};


export type QueryFilteredDriversArgs = {
  filter?: InputMaybe<DriverFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  sorter?: InputMaybe<Array<DriverSorter>>;
};


export type QueryFilteredFeesArgs = {
  filter?: InputMaybe<FeeFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  sorter?: InputMaybe<Array<FeeSorter>>;
};


export type QueryFilteredGroupsArgs = {
  filter?: InputMaybe<GroupFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  sorter?: InputMaybe<Array<GroupSorter>>;
};


export type QueryFilteredLineOfServicesArgs = {
  filter?: InputMaybe<LineOfServiceFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  sorter?: InputMaybe<Array<LineOfServiceSorter>>;
};


export type QueryFilteredLoadOrderLineItemsArgs = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  sorter?: InputMaybe<Array<BaseSorter>>;
};


export type QueryFilteredLoadingAccountsArgs = {
  filter?: InputMaybe<LoadingAccountFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  sorter?: InputMaybe<Array<LoadingAccountSorter>>;
};


export type QueryFilteredMarginsArgs = {
  filter?: InputMaybe<MarginFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
};


export type QueryFilteredNotesArgs = {
  filter?: InputMaybe<NotesFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
};


export type QueryFilteredOrderGroupsArgs = {
  filter?: InputMaybe<OrderGroupFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  sorter?: InputMaybe<Array<OrderGroupSorter>>;
};


export type QueryFilteredOrderHistoryArgs = {
  filter: OrderHistoryFilter;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
};


export type QueryFilteredOrderLinksArgs = {
  filter?: InputMaybe<OrderLinkFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
};


export type QueryFilteredOrderWellArgs = {
  filter?: InputMaybe<OrderWellFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
};


export type QueryFilteredPeripheralsArgs = {
  filter?: InputMaybe<PeripheralFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  sorter?: InputMaybe<Array<BaseSorter>>;
};


export type QueryFilteredPickupPointCodesArgs = {
  filter?: InputMaybe<PickupPointCodeFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  sorter?: InputMaybe<Array<PickupPointCodeSorter>>;
};


export type QueryFilteredPricingsArgs = {
  filter?: InputMaybe<PricingFiltersInput>;
};


export type QueryFilteredProductsArgs = {
  filter?: InputMaybe<ProductFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  sorter?: InputMaybe<Array<ProductSorter>>;
};


export type QueryFilteredShiftPlansArgs = {
  filter?: InputMaybe<ShiftPlanFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  sorter?: InputMaybe<Array<ShiftPlanSorter>>;
};


export type QueryFilteredShiftsArgs = {
  filter?: InputMaybe<ShiftFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  sorter?: InputMaybe<Array<ShiftSorter>>;
};


export type QueryFilteredSuppliersArgs = {
  filter?: InputMaybe<SupplierFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  sorter?: InputMaybe<Array<SupplierSorter>>;
};


export type QueryFilteredTankMonitorsArgs = {
  filter?: InputMaybe<DeviceFilterInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  sorter?: InputMaybe<Array<TankMonitorSorter>>;
};


export type QueryFilteredTaxesArgs = {
  filter?: InputMaybe<TaxFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
};


export type QueryFilteredTerminalsArgs = {
  filter?: InputMaybe<TerminalFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  sorter?: InputMaybe<Array<TerminalSorter>>;
};


export type QueryFilteredTerminalsSuppliersArgs = {
  filter?: InputMaybe<TerminalsSupplierFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  sorter?: InputMaybe<Array<TerminalsSupplierSorter>>;
};


export type QueryFilteredTransferOrdersArgs = {
  filter?: InputMaybe<TransferOrderFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  sorter?: InputMaybe<Array<TransferOrderSorter>>;
};


export type QueryGroupArgs = {
  id: Scalars['ID']['input'];
};


export type QueryLineOfServiceArgs = {
  id: Scalars['ID']['input'];
};


export type QueryLinkedOrdersDriversListsArgs = {
  orderGroupId: Scalars['ID']['input'];
};


export type QueryLoadingAccountArgs = {
  id: Scalars['ID']['input'];
};


export type QueryLoadingOrderArgs = {
  id: Scalars['ID']['input'];
};


export type QueryLoadingOrdersArgs = {
  filter?: InputMaybe<OrderGroupFiltersInput>;
};


export type QueryMarginArgs = {
  id: Scalars['ID']['input'];
};


export type QueryMarketArgs = {
  id: Scalars['ID']['input'];
};


export type QueryMovementOrderArgs = {
  id: Scalars['ID']['input'];
};


export type QueryOrderGroupArgs = {
  id: Scalars['ID']['input'];
};


export type QueryOrderGroupsArgs = {
  filter?: InputMaybe<OrderGroupFiltersInput>;
};


export type QueryOrderHistoryArgs = {
  id: Scalars['ID']['input'];
};


export type QueryOrderWellArgs = {
  fromTimestamp: Scalars['Int']['input'];
  toTimestamp: Scalars['Int']['input'];
};


export type QueryOrderWellOrdersArgs = {
  ids: Array<Scalars['Int']['input']>;
};


export type QueryOwnAssetsArgs = {
  hubIds?: InputMaybe<Array<Scalars['ID']['input']>>;
  ids?: InputMaybe<Array<Scalars['ID']['input']>>;
};


export type QueryPeripheralArgs = {
  id: Scalars['ID']['input'];
};


export type QueryPricingArgs = {
  id: Scalars['ID']['input'];
};


export type QueryProductArgs = {
  id: Scalars['ID']['input'];
};


export type QueryRateTypeArgs = {
  id: Scalars['ID']['input'];
};


export type QueryRateTypesArgs = {
  filter?: InputMaybe<FiltersInput>;
};


export type QueryRecurrencesOrdersArgs = {
  dateFrom?: InputMaybe<Scalars['String']['input']>;
  dateUntil?: InputMaybe<Scalars['String']['input']>;
};


export type QueryResourcePricingArgs = {
  filter?: InputMaybe<ResourcePricingFilter>;
  id: Scalars['ID']['input'];
};


export type QueryResourcePricingsArgs = {
  filter?: InputMaybe<ResourcePricingFiltersInput>;
};


export type QuerySearchDeliveryOrdersArgs = {
  filter?: InputMaybe<OrderGroupFiltersInput>;
  search: Scalars['String']['input'];
};


export type QuerySearchLoadingOrdersArgs = {
  filter?: InputMaybe<OrderGroupFiltersInput>;
  search: Scalars['String']['input'];
};


export type QuerySearchTransferOrdersArgs = {
  filter?: InputMaybe<OrderGroupFiltersInput>;
  search: Scalars['String']['input'];
};


export type QuerySettingArgs = {
  id: Scalars['ID']['input'];
};


export type QueryShiftArgs = {
  id: Scalars['ID']['input'];
};


export type QueryShiftPlanDeliveriesArgs = {
  id: Scalars['ID']['input'];
};


export type QueryShiftsArgs = {
  filter?: InputMaybe<ShiftFiltersInput>;
};


export type QuerySupplierArgs = {
  id: Scalars['ID']['input'];
};


export type QueryTasksArgs = {
  filter?: InputMaybe<TaskFiltersInput>;
};


export type QueryTaxArgs = {
  id: Scalars['ID']['input'];
};


export type QueryTerminalArgs = {
  id: Scalars['ID']['input'];
};


export type QueryTerminalDistanceArgs = {
  address?: InputMaybe<Scalars['String']['input']>;
  assetId?: InputMaybe<Scalars['ID']['input']>;
  first?: InputMaybe<Scalars['Boolean']['input']>;
  lat?: InputMaybe<Scalars['Float']['input']>;
  lon?: InputMaybe<Scalars['Float']['input']>;
  products?: InputMaybe<Array<Scalars['ID']['input']>>;
};


export type QueryTodaysPricingsArgs = {
  filter?: InputMaybe<PricingFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
};


export type QueryTransferOrderArgs = {
  id: Scalars['ID']['input'];
};


export type QueryTransferOrdersArgs = {
  id?: InputMaybe<Scalars['ID']['input']>;
  page_config?: InputMaybe<Pagination>;
};


export type QueryUserArgs = {
  id: Scalars['ID']['input'];
};

export type RangeAttribute = {
  __typename?: 'RangeAttribute';
  endRange?: Maybe<Scalars['String']['output']>;
  rangeRate?: Maybe<Scalars['String']['output']>;
  startRange?: Maybe<Scalars['String']['output']>;
};

/** RangeAttribute Input */
export type RangeAttributeInput = {
  endRange?: InputMaybe<Scalars['String']['input']>;
  rangeRate?: InputMaybe<Scalars['String']['input']>;
  startRange?: InputMaybe<Scalars['String']['input']>;
};

export enum RangeTypeOnFeeEnum {
  /** Distance Based */
  DistanceBased = 'distance_based',
  /** Quantity Based */
  QuantityBased = 'quantity_based',
  /** Time Based */
  TimeBased = 'time_based'
}

export type RateType = {
  __typename?: 'RateType';
  default: Scalars['Boolean']['output'];
  description?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  operation: Scalars['String']['output'];
  status: Scalars['String']['output'];
};

/** Enum for rate type operations */
export enum RateTypeOperationEnum {
  /** add */
  Add = 'add',
  /** no operation */
  NoOperation = 'no_operation'
}

/** Enum for rate type status */
export enum RateTypeStatusEnum {
  /** active */
  Active = 'active',
  /** inactive */
  Inactive = 'inactive'
}

/** Enum for margin unit */
export enum RateUnitEnum {
  /** currency */
  Currency = 'currency',
  /** percentage */
  Percentage = 'percentage'
}

export enum RateUnitOnFeeEnum {
  /** Currency */
  Currency = 'currency',
  /** Percent */
  Percent = 'percent'
}

/** Autogenerated input type of Reauthenticate */
export type ReauthenticateInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  refreshToken: Scalars['String']['input'];
};

/** Autogenerated return type of Reauthenticate */
export type ReauthenticatePayload = {
  __typename?: 'ReauthenticatePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  message?: Maybe<Scalars['String']['output']>;
  refreshToken?: Maybe<Scalars['String']['output']>;
  token?: Maybe<Scalars['String']['output']>;
  user?: Maybe<User>;
};

/** Enum for order groups recurrence types */
export enum Recurrence {
  /** Daily recurrence */
  Daily = 'daily',
  /** Monthly recurrence */
  Monthly = 'monthly',
  /** Weekly recurrence */
  Weekly = 'weekly',
  /** Yearly recurrence */
  Yearly = 'yearly'
}

/** Recurrence Assets Input for order groups */
export type RecurrenceAssetsInput = {
  assetId?: InputMaybe<Scalars['ID']['input']>;
  productId: Scalars['ID']['input'];
  requestedVolume?: InputMaybe<Scalars['Float']['input']>;
  warehouseId?: InputMaybe<Scalars['ID']['input']>;
};

export type RecurrenceData = {
  __typename?: 'RecurrenceData';
  lastDelivery?: Maybe<Scalars['String']['output']>;
  lastOrderGroup?: Maybe<OrderGroup>;
  nextDate?: Maybe<Scalars['String']['output']>;
  nextOrderGroup?: Maybe<OrderGroup>;
  recurrence: RecurrenceOrderGroup;
};

export type RecurrenceDayNthWeek = {
  __typename?: 'RecurrenceDayNthWeek';
  friday?: Maybe<Array<Scalars['Int']['output']>>;
  monday?: Maybe<Array<Scalars['Int']['output']>>;
  saturday?: Maybe<Array<Scalars['Int']['output']>>;
  sunday?: Maybe<Array<Scalars['Int']['output']>>;
  thursday?: Maybe<Array<Scalars['Int']['output']>>;
  tuesday?: Maybe<Array<Scalars['Int']['output']>>;
  wednesday?: Maybe<Array<Scalars['Int']['output']>>;
};

/** Recurrence monthly when day happens in Nth week of the month */
export type RecurrenceDayNthWeekInput = {
  friday?: InputMaybe<Array<Scalars['Int']['input']>>;
  monday?: InputMaybe<Array<Scalars['Int']['input']>>;
  saturday?: InputMaybe<Array<Scalars['Int']['input']>>;
  sunday?: InputMaybe<Array<Scalars['Int']['input']>>;
  thursday?: InputMaybe<Array<Scalars['Int']['input']>>;
  tuesday?: InputMaybe<Array<Scalars['Int']['input']>>;
  wednesday?: InputMaybe<Array<Scalars['Int']['input']>>;
};

/** Recurrence Input for order groups */
export type RecurrenceInput = {
  recurrenceAllAssets?: InputMaybe<Scalars['Boolean']['input']>;
  recurrenceDates?: InputMaybe<Array<Scalars['String']['input']>>;
  recurrenceDayNthWeek?: InputMaybe<RecurrenceDayNthWeekInput>;
  recurrenceDays?: InputMaybe<Array<Scalars['Int']['input']>>;
  recurrenceDaysInAdvance?: InputMaybe<Scalars['Int']['input']>;
  recurrenceDaysOfWeek?: InputMaybe<Array<DaysOfWeek>>;
  recurrenceFromTimestamp?: InputMaybe<Scalars['Int']['input']>;
  recurrenceInterval?: InputMaybe<Scalars['Int']['input']>;
  recurrenceOccurrences?: InputMaybe<Scalars['Int']['input']>;
  recurrenceType: Recurrence;
  recurrenceUntil?: InputMaybe<Scalars['String']['input']>;
};

export type RecurrenceOrder = {
  __typename?: 'RecurrenceOrder';
  customer?: Maybe<Customer>;
  customerBranch?: Maybe<CustomerBranch>;
  lastDelivery?: Maybe<Scalars['String']['output']>;
  lastOrderGroup?: Maybe<OrderGroup>;
  nextDate?: Maybe<Scalars['String']['output']>;
  nextOrderGroup?: Maybe<OrderGroup>;
  orderGroup: OrderGroup;
  recurrence: RecurrenceOrderGroup;
};

export type RecurrenceOrderGroup = {
  __typename?: 'RecurrenceOrderGroup';
  recurrenceDates?: Maybe<Array<Scalars['String']['output']>>;
  recurrenceDayNthWeek?: Maybe<RecurrenceDayNthWeek>;
  recurrenceDays?: Maybe<Array<Scalars['Int']['output']>>;
  recurrenceDaysInAdvance?: Maybe<Scalars['Int']['output']>;
  recurrenceDaysOfWeek?: Maybe<Array<DaysOfWeek>>;
  recurrenceFromTimestamp?: Maybe<Scalars['String']['output']>;
  recurrenceInterval?: Maybe<Scalars['Int']['output']>;
  recurrenceOccurrences?: Maybe<Scalars['Int']['output']>;
  recurrenceType: Recurrence;
  recurrenceUntil?: Maybe<Scalars['String']['output']>;
};

/** Autogenerated input type of RefetchCustomersAsynchronously */
export type RefetchCustomersAsynchronouslyInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated return type of RefetchCustomersAsynchronously */
export type RefetchCustomersAsynchronouslyPayload = {
  __typename?: 'RefetchCustomersAsynchronouslyPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  success?: Maybe<Scalars['Boolean']['output']>;
};

/** Autogenerated input type of RefetchOrderQueueStatus */
export type RefetchOrderQueueStatusInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  deliveryOrderId: Scalars['ID']['input'];
};

/** Autogenerated return type of RefetchOrderQueueStatus */
export type RefetchOrderQueueStatusPayload = {
  __typename?: 'RefetchOrderQueueStatusPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  deliveryOrder?: Maybe<DeliveryOrder>;
};

/** Autogenerated input type of RefreshApiToken */
export type RefreshApiTokenInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  tenantId?: InputMaybe<Scalars['ID']['input']>;
};

/** Autogenerated return type of RefreshApiToken */
export type RefreshApiTokenPayload = {
  __typename?: 'RefreshApiTokenPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  setting?: Maybe<Setting>;
};

/** Autogenerated input type of RemoveFeeToOrderGroup */
export type RemoveFeeToOrderGroupInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  orderGroupsFeeId: Scalars['ID']['input'];
};

/** Autogenerated return type of RemoveFeeToOrderGroup */
export type RemoveFeeToOrderGroupPayload = {
  __typename?: 'RemoveFeeToOrderGroupPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  orderGroup?: Maybe<OrderGroup>;
};

/** Autogenerated input type of RemoveFeesFromOrderGroup */
export type RemoveFeesFromOrderGroupInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  orderGroupId: Scalars['ID']['input'];
  orderGroupsFeeIds: Array<Scalars['ID']['input']>;
};

/** Autogenerated return type of RemoveFeesFromOrderGroup */
export type RemoveFeesFromOrderGroupPayload = {
  __typename?: 'RemoveFeesFromOrderGroupPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  orderGroup?: Maybe<OrderGroup>;
};

/** Autogenerated input type of RemoveQrCode */
export type RemoveQrCodeInput = {
  assetId: Scalars['ID']['input'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated return type of RemoveQrCode */
export type RemoveQrCodePayload = {
  __typename?: 'RemoveQrCodePayload';
  asset?: Maybe<Asset>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
};

/** Enum for metabase report types */
export enum ReportEnum {
  /** Dashboard */
  Dashboard = 'dashboard',
  /** Question */
  Question = 'question'
}

export type RequestedMovementOrderLineItem = {
  __typename?: 'RequestedMovementOrderLineItem';
  id: Scalars['ID']['output'];
  peripheral?: Maybe<Peripheral>;
  peripheralApprovedStatus?: Maybe<Scalars['Boolean']['output']>;
  peripheralInstances?: Maybe<Array<PeripheralInstance>>;
  requestedPeripheralInstances?: Maybe<Array<RequestedPeripheralInstance>>;
};

/** Requested Movement Order Line Item Input */
export type RequestedMovementOrderLineItemInput = {
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  /** ID of Movement Order Line Item. Required on update. */
  id?: InputMaybe<Scalars['ID']['input']>;
  /** Movement Order ID. */
  movementOrderId?: InputMaybe<Scalars['ID']['input']>;
  /** Peripheral Approved Status */
  peripheralApprovedStatus?: InputMaybe<Scalars['Boolean']['input']>;
  /** Peripheral Input object */
  peripheralAttributes?: InputMaybe<PeripheralInput>;
  /** Peripheral ID. */
  peripheralId?: InputMaybe<Scalars['ID']['input']>;
  /** Requested Peripheral Instance Input object. */
  requestedPeripheralInstancesAttributes?: InputMaybe<Array<RequestedPeripheralInstanceInput>>;
};

export type RequestedPeripheralInstance = {
  __typename?: 'RequestedPeripheralInstance';
  id?: Maybe<Scalars['ID']['output']>;
  peripheralAttribute?: Maybe<PeripheralAttribute>;
  value?: Maybe<Scalars['String']['output']>;
};

/** Requested Peripheral Instance Input */
export type RequestedPeripheralInstanceInput = {
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  /** ID of PeripheralInstance. Required on update. */
  id?: InputMaybe<Scalars['ID']['input']>;
  /** Peripheral Attribute ID. */
  peripheralAttributeId?: InputMaybe<Scalars['ID']['input']>;
  /** Movement Order Line Item ID. */
  requestedMovementOrderLineItemId?: InputMaybe<Scalars['ID']['input']>;
  /** Peripheral Attribute Value. */
  value?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated input type of ResetPricing */
export type ResetPricingInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: ManualUpdateInput;
};

/** Autogenerated return type of ResetPricing */
export type ResetPricingPayload = {
  __typename?: 'ResetPricingPayload';
  appliedPricing?: Maybe<AppliedPricing>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
};

export type ResourceDetails = {
  __typename?: 'ResourceDetails';
  id: Scalars['ID']['output'];
  type: Scalars['String']['output'];
};

export enum ResourceDetailsEnum {
  /** ResourceDetailsEnum 'Customer' for applied pricing enum */
  Customer = 'Customer',
  /** ResourceDetailsEnum 'CustomerBranch' for applied pricing enum */
  CustomerBranch = 'CustomerBranch'
}

/** Applied Tax Input */
export type ResourceDetailsInput = {
  id?: InputMaybe<Scalars['ID']['input']>;
  type?: InputMaybe<ResourceDetailsEnum>;
};

/** Enum for resource to be fetch */
export enum ResourceFetchEnum {
  Asset = 'Asset',
  Customer = 'Customer',
  CustomerBranch = 'CustomerBranch',
  Hub = 'Hub',
  Market = 'Market',
  Product = 'Product',
  ProductCategory = 'ProductCategory',
  Supplier = 'Supplier',
  Terminal = 'Terminal'
}

/** Members of resource groups */
export type ResourceFetchableById = Asset | DeliveryAsset;

export type ResourcePricing = {
  __typename?: 'ResourcePricing';
  applicableMargins: Array<ApplicableMargin>;
  applicableTaxes: Array<ApplicableTax>;
  discount?: Maybe<Scalars['Float']['output']>;
  discountUnit?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  pocEmail?: Maybe<Scalars['String']['output']>;
  pocName?: Maybe<Scalars['String']['output']>;
  pocPhone?: Maybe<Scalars['String']['output']>;
  priceConfigurations: Array<PriceConfiguration>;
  productCategories?: Maybe<Array<ProductCategory>>;
  /** Deprecated: Use productCategoryResources */
  productCategoryId?: Maybe<Scalars['ID']['output']>;
  productCategoryResources?: Maybe<Array<ProductCategoryResource>>;
  rateType: RateType;
  resourceId: Scalars['ID']['output'];
  resourceType: Scalars['String']['output'];
};

/** Enum for resource pricing */
export enum ResourcePricingEnum {
  /** Customer */
  Customer = 'Customer',
  /** Customer Branch */
  CustomerBranch = 'CustomerBranch'
}

export type ResourcePricingFilter = {
  endDateTimestamp: Scalars['Int']['input'];
  startDateTimestamp: Scalars['Int']['input'];
};

export type ResourcePricingFiltersInput = {
  customerId?: InputMaybe<Scalars['ID']['input']>;
  resourceType?: InputMaybe<ResourcePricingEnum>;
};

export type ResourceStatus = {
  __typename?: 'ResourceStatus';
  createdAt?: Maybe<Scalars['ISO8601DateTime']['output']>;
  createdAtTimestamp?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['ID']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  postValue?: Maybe<Scalars['String']['output']>;
  preValue?: Maybe<Scalars['String']['output']>;
  resourceStatusType?: Maybe<ResourceStatusTypes>;
  updatedAt?: Maybe<Scalars['ISO8601DateTime']['output']>;
  updatedAtTimestamp?: Maybe<Scalars['Int']['output']>;
};

/** Resource Status Input */
export type ResourceStatusInput = {
  id?: InputMaybe<Scalars['ID']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  postValue?: InputMaybe<Scalars['String']['input']>;
  preValue?: InputMaybe<Scalars['String']['input']>;
  resourceStatusTypeId: Scalars['ID']['input'];
};

export type ResourceStatusTypes = {
  __typename?: 'ResourceStatusTypes';
  id: Scalars['ID']['output'];
  name?: Maybe<Scalars['String']['output']>;
  options?: Maybe<Array<Scalars['String']['output']>>;
  resourceAttributeType: Scalars['String']['output'];
};

/** Members of generic resource */
export type ResourceUpdatable = BolRetain | CcTenant | Setting | Site;

/** Enum for resource */
export enum ResourceUpdateEnum {
  BolRetain = 'BolRetain',
  CcTenant = 'CcTenant',
  Setting = 'Setting',
  Site = 'Site'
}

/** Default Resource Input for update */
export type ResourceUpdateInput = {
  /** Attribute/field name of resource. */
  fieldName: Scalars['String']['input'];
  /** New value of Attribute/field of resource */
  fieldValue?: InputMaybe<Scalars['String']['input']>;
  /** ID of resource */
  id: Scalars['ID']['input'];
};

export type Role = {
  __typename?: 'Role';
  createdAt?: Maybe<Scalars['ISO8601DateTime']['output']>;
  id: Scalars['ID']['output'];
  label?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  resourceType?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['ISO8601DateTime']['output']>;
};

/** Autogenerated input type of SalesOrderSync */
export type SalesOrderSyncInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  deliveryOrderId: Scalars['ID']['input'];
};

/** Autogenerated return type of SalesOrderSync */
export type SalesOrderSyncPayload = {
  __typename?: 'SalesOrderSyncPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  errors?: Maybe<Array<Scalars['JSON']['output']>>;
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type Setting = {
  __typename?: 'Setting';
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  value?: Maybe<Scalars['String']['output']>;
};

/** Default settings Input */
export type SettingsInput = {
  autoLogoutAfter?: InputMaybe<Scalars['String']['input']>;
  broadcastExpiresAfter?: InputMaybe<Scalars['String']['input']>;
  companyAddress?: InputMaybe<Scalars['String']['input']>;
  countryCode?: InputMaybe<Scalars['String']['input']>;
  dispatchNumber?: InputMaybe<Scalars['String']['input']>;
  features?: InputMaybe<Array<FeatureInput>>;
  incentiveEffectiveFrom?: InputMaybe<Scalars['String']['input']>;
  multipleBases?: InputMaybe<Scalars['String']['input']>;
  odometerReadingThreshold?: InputMaybe<Scalars['String']['input']>;
  overrideRecipientPhoneNumber?: InputMaybe<Scalars['String']['input']>;
  publishApiKey?: InputMaybe<Scalars['String']['input']>;
  shiftEndAfter?: InputMaybe<Scalars['String']['input']>;
  shiftStartMethod?: InputMaybe<ShiftStartMethodEnum>;
  shiftStartTimeBarrier?: InputMaybe<Scalars['String']['input']>;
  shiftTasksAllowedTimeDifference?: InputMaybe<Scalars['String']['input']>;
  shift_status_id_4?: InputMaybe<Scalars['String']['input']>;
  shift_status_id_5?: InputMaybe<Scalars['String']['input']>;
  shift_status_id_6?: InputMaybe<Scalars['String']['input']>;
  timezone?: InputMaybe<Scalars['String']['input']>;
  twimlApplicationSid?: InputMaybe<Scalars['String']['input']>;
  warningMessage?: InputMaybe<Scalars['String']['input']>;
};

export type Shift = {
  __typename?: 'Shift';
  activity?: Maybe<Scalars['JSON']['output']>;
  actualDuration?: Maybe<Scalars['Int']['output']>;
  bolErrors?: Maybe<Array<BolError>>;
  bolRetains?: Maybe<Array<BolRetain>>;
  /** @deprecated Dont use this. This uses too much resuorces */
  currentTask?: Maybe<Task>;
  deliveryTruck?: Maybe<DeliveryAsset>;
  distributionTransferOrders?: Maybe<Array<TransferOrder>>;
  duration?: Maybe<Scalars['Int']['output']>;
  enableClearingAccountingData?: Maybe<Scalars['Boolean']['output']>;
  endLocation?: Maybe<Scalars['String']['output']>;
  endOnTimestamp?: Maybe<Scalars['Int']['output']>;
  errors?: Maybe<Scalars['JSON']['output']>;
  hasData?: Maybe<Scalars['Boolean']['output']>;
  id: Scalars['ID']['output'];
  /** @deprecated Obselete!!! */
  inspectionFormSubmissions?: Maybe<Array<DvirBeCompatibilitySupport>>;
  notes?: Maybe<Array<Note>>;
  offlineOperation?: Maybe<Scalars['Boolean']['output']>;
  orderGroups?: Maybe<Array<OrderGroup>>;
  orphanTransferOrders?: Maybe<Array<TransferOrder>>;
  receiptTransferOrders?: Maybe<Array<TransferOrder>>;
  shiftAssetProducts?: Maybe<Array<ShiftAssetProduct>>;
  shiftCompartmentInstances?: Maybe<Array<ShiftCompartmentInstance>>;
  shiftDeliveryUnitsAssets?: Maybe<Array<ShiftDeliveryUnitsAsset>>;
  skipNote?: Maybe<Note>;
  startLocation?: Maybe<Scalars['String']['output']>;
  startOnTimestamp?: Maybe<Scalars['Int']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  /** @deprecated Dont use this. This uses too much resuorces */
  tasks?: Maybe<Array<Task>>;
  worker?: Maybe<Worker>;
};

export type ShiftAssetProduct = {
  __typename?: 'ShiftAssetProduct';
  deliveryAsset: DeliveryAsset;
  dispatchInitialQty?: Maybe<Scalars['Int']['output']>;
  driverInitialQty?: Maybe<Scalars['Int']['output']>;
  id: Scalars['ID']['output'];
  previousShiftQty?: Maybe<Scalars['Int']['output']>;
  product: Product;
  reconciliationQty?: Maybe<Scalars['Int']['output']>;
  retainQty: Scalars['Int']['output'];
  shiftStartQty?: Maybe<Scalars['Int']['output']>;
};

export type ShiftCollection = {
  __typename?: 'ShiftCollection';
  collection: Array<Shift>;
  metadata: MetaQuery;
};

export type ShiftCompartmentInstance = {
  __typename?: 'ShiftCompartmentInstance';
  compartment: Compartment;
  dispatchInitialInventory?: Maybe<Inventory>;
  driverInitialInventory?: Maybe<Inventory>;
  id: Scalars['ID']['output'];
  /** @deprecated Please use pervious_shift_retain_inventory */
  initialInventory?: Maybe<Inventory>;
  inventoryAdjustments: Array<InventoryAdjustment>;
  latestInventory: Inventory;
  previousShiftRetainInventory?: Maybe<Inventory>;
  retainInventory?: Maybe<Array<Inventory>>;
  shiftDeliveryUnitsAsset: ShiftDeliveryUnitsAsset;
  shiftStartInventory?: Maybe<Inventory>;
};

/** ShiftCompartmentInstance Input */
export type ShiftCompartmentInstanceInput = {
  /** Compartment's ID. */
  compartmentId?: InputMaybe<Scalars['ID']['input']>;
  /** Product's ID */
  driverInitialProductId?: InputMaybe<Scalars['ID']['input']>;
  /** Initial Volume confimed by Driver */
  driverInitialVolume?: InputMaybe<Scalars['Float']['input']>;
  /** ID of the ShiftCompartmentInstance. Required during update. */
  id?: InputMaybe<Scalars['ID']['input']>;
  /** InventoryAdjustment Object. */
  inventoryAdjustmentsAttributes?: InputMaybe<Array<InventoryAdjustmentInput>>;
  /** ShiftDeliveryUnitsAsset's ID. */
  shiftDeliveryUnitsAssetId?: InputMaybe<Scalars['ID']['input']>;
};

/** Create Shift Input */
export type ShiftCreateInput = {
  /** Shift end time value in Unix. */
  endOnTimestamp?: InputMaybe<Scalars['Int']['input']>;
  /** Shift's ID. */
  id?: InputMaybe<Scalars['ID']['input']>;
  /** Notes object. */
  notesAttributes?: InputMaybe<Array<NoteInput>>;
  /** Set true incase of offline operation */
  offlineOperation?: InputMaybe<Scalars['Boolean']['input']>;
  /** OrderGroups object. */
  orderGroupsAttributes?: InputMaybe<Array<OrderGroupInput>>;
  /** ShiftDeliveryUnit object */
  shiftDeliveryUnitAttributes?: InputMaybe<ShiftDeliveryUnitInput>;
  /** Shift start time value in Unix. */
  startOnTimestamp?: InputMaybe<Scalars['Int']['input']>;
  /** One among active, completed, verified, review1, review2, review3, accounting_sync_ready, partial_accounting_synced, queued_for_accounting_sync, accounting_synced, and archived. */
  state?: InputMaybe<Scalars['String']['input']>;
  /** Driver's ID. */
  workerId?: InputMaybe<Scalars['ID']['input']>;
};

/** ShiftDeliveryUnit Input */
export type ShiftDeliveryUnitInput = {
  /** ShiftDeliveryUnitsAsset Object. */
  shiftDeliveryUnitsAssetsAttributes?: InputMaybe<Array<ShiftDeliveryUnitsAssetInput>>;
  /** Shift's ID. */
  shiftId?: InputMaybe<Scalars['ID']['input']>;
};

export type ShiftDeliveryUnitsAsset = {
  __typename?: 'ShiftDeliveryUnitsAsset';
  /** @deprecated Not available anymore */
  activeInspectionForm?: Maybe<DvirBeCompatibilitySupport>;
  deliveryAsset?: Maybe<DeliveryAsset>;
  id: Scalars['ID']['output'];
  preInventoryConfirmed: Scalars['Boolean']['output'];
};

/** ShiftDeliveryUnitsAsset Input */
export type ShiftDeliveryUnitsAssetInput = {
  /** DeliveryAsset's ID. */
  assetId?: InputMaybe<Scalars['ID']['input']>;
  /** ID of the ShiftDeliveryUnitsAsset. Required during update. */
  id?: InputMaybe<Scalars['ID']['input']>;
  /** ShiftCompartmentInstance Object. */
  shiftCompartmentInstancesAttributes?: InputMaybe<Array<ShiftCompartmentInstanceInput>>;
};

/** End Shift by Driver */
export type ShiftEndInput = {
  /** QrCode that's been scanned */
  code?: InputMaybe<Scalars['String']['input']>;
  /** Shift's ID. */
  id: Scalars['ID']['input'];
  /** OrderGroup Id's to do later */
  idsToCarryOver?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** OrderGroup Id's to send back to dispatch */
  idsToUnassign?: InputMaybe<Array<Scalars['ID']['input']>>;
  /** Shift end location's latitude */
  latitude?: InputMaybe<Scalars['Float']['input']>;
  /** Shift end location's longitude */
  longitude?: InputMaybe<Scalars['Float']['input']>;
  /** Shift skip note */
  skipNote?: InputMaybe<Scalars['String']['input']>;
  /** End time in unix */
  timestamp?: InputMaybe<Scalars['Int']['input']>;
  /** Provide only if unload is performed */
  unloadOrderAttributes?: InputMaybe<UnloadOrderInput>;
};

export type ShiftFilter = {
  all?: InputMaybe<Scalars['String']['input']>;
  fromTimestamp?: InputMaybe<Scalars['Int']['input']>;
  or?: InputMaybe<Array<ShiftFilter>>;
  /** No. of items to display */
  perPage?: InputMaybe<Scalars['Int']['input']>;
  /** Array has one or more element among: active and completed */
  states?: InputMaybe<Array<Scalars['String']['input']>>;
  /** one among: today, this_week, next_week, fortnight */
  timeFrame?: InputMaybe<Scalars['String']['input']>;
  toTimestamp?: InputMaybe<Scalars['Int']['input']>;
  workerId?: InputMaybe<Scalars['ID']['input']>;
};

export type ShiftFiltersInput = {
  fromTimestamp?: InputMaybe<Scalars['Int']['input']>;
  /** Array has one or more element among: active and completed */
  states?: InputMaybe<Array<Scalars['String']['input']>>;
  /** one among: today, this_week, next_week, fortnight */
  timeFrame?: InputMaybe<Scalars['String']['input']>;
  toTimestamp?: InputMaybe<Scalars['Int']['input']>;
};

/** Shift Input */
export type ShiftInput = {
  /** Shift end time value in Unix. */
  endOnTimestamp?: InputMaybe<Scalars['Int']['input']>;
  /** Shift's ID. */
  id?: InputMaybe<Scalars['ID']['input']>;
  /** Notes object. */
  notesAttributes?: InputMaybe<Array<NoteInput>>;
  /** Set this to true incase of offline */
  offlineOperation?: InputMaybe<Scalars['Boolean']['input']>;
  /** OrderGroups object. */
  orderGroupsAttributes?: InputMaybe<Array<OrderGroupInput>>;
  /** ShiftDeliveryUnit object */
  shiftDeliveryUnitAttributes?: InputMaybe<ShiftDeliveryUnitInput>;
  /** Shift start time value in Unix. */
  startOnTimestamp?: InputMaybe<Scalars['Int']['input']>;
  /** One among active, completed, verified, review1, review2, review3, accounting_sync_ready, partial_accounting_synced, queued_for_accounting_sync, accounting_synced, and archived. */
  state?: InputMaybe<ShiftStateEnum>;
  /** Driver's ID. */
  workerId?: InputMaybe<Scalars['ID']['input']>;
};

export enum ShiftInventoryAdjustmentTypes {
  /** Changes to reflect in initial inventory */
  Initial = 'INITIAL',
  /** Changes to reflect in reconciliation inventory */
  Reconciliation = 'RECONCILIATION'
}

export type ShiftPlan = {
  __typename?: 'ShiftPlan';
  completedDeliveries?: Maybe<Array<ShiftPlanDelivery>>;
  completedDeliveriesMetrics?: Maybe<ShiftPlanDeliveryMetric>;
  customerPods?: Maybe<Scalars['String']['output']>;
  deliveries?: Maybe<Array<ShiftPlanDelivery>>;
  deliveriesMetrics?: Maybe<ShiftPlanDeliveryMetric>;
  deliveriesRoutes?: Maybe<Array<Scalars['JSON']['output']>>;
  earliestStart?: Maybe<Scalars['Int']['output']>;
  errors?: Maybe<Array<Scalars['String']['output']>>;
  estimatedVolume?: Maybe<Scalars['Float']['output']>;
  hub?: Maybe<ShiftPlanHub>;
  id: Scalars['ID']['output'];
  latestEnd?: Maybe<Scalars['Int']['output']>;
  lineOfServices?: Maybe<Array<LineOfService>>;
  location?: Maybe<Scalars['String']['output']>;
  noUnassigned?: Maybe<Scalars['Int']['output']>;
  optimized: Scalars['Boolean']['output'];
  optimizedReloading?: Maybe<Scalars['Int']['output']>;
  planned?: Maybe<Array<ShiftPlanDelivery>>;
  plannedCount?: Maybe<Scalars['Int']['output']>;
  plannedMetrics?: Maybe<ShiftPlanDeliveryMetric>;
  productsDelivered?: Maybe<Scalars['String']['output']>;
  queued?: Maybe<Scalars['Boolean']['output']>;
  routingRequestId?: Maybe<Scalars['ID']['output']>;
  shift: Scalars['Int']['output'];
  shiftDate: Scalars['ISO8601Date']['output'];
  status: Scalars['String']['output'];
  truckId: Scalars['String']['output'];
  unassignedList?: Maybe<Array<ShiftPlanUnassigned>>;
};

export type ShiftPlanCollection = {
  __typename?: 'ShiftPlanCollection';
  collection: Array<ShiftPlan>;
  metadata: MetaQuery;
};

export type ShiftPlanDeliveries = {
  __typename?: 'ShiftPlanDeliveries';
  address?: Maybe<Scalars['String']['output']>;
  customerName: Scalars['String']['output'];
  earliest?: Maybe<Scalars['Int']['output']>;
  ignore?: Maybe<Scalars['Boolean']['output']>;
  lat?: Maybe<Scalars['Float']['output']>;
  latest?: Maybe<Scalars['Int']['output']>;
  lon?: Maybe<Scalars['Float']['output']>;
  optimizationError?: Maybe<Scalars['String']['output']>;
  orderId: Scalars['ID']['output'];
  priority?: Maybe<Scalars['Int']['output']>;
  product?: Maybe<Scalars['String']['output']>;
  updateTimeWindow?: Maybe<Scalars['Boolean']['output']>;
  volume?: Maybe<Scalars['Float']['output']>;
};

export type ShiftPlanDelivery = {
  __typename?: 'ShiftPlanDelivery';
  address: Scalars['String']['output'];
  arrTime?: Maybe<Scalars['Int']['output']>;
  compartments?: Maybe<Array<Scalars['Int']['output']>>;
  contact?: Maybe<Scalars['String']['output']>;
  customerId?: Maybe<Scalars['String']['output']>;
  customerName?: Maybe<Scalars['String']['output']>;
  /** Delivery Comments */
  deliveryInstruction?: Maybe<Scalars['String']['output']>;
  deliveryZone?: Maybe<Scalars['String']['output']>;
  distanceMiles?: Maybe<Scalars['Float']['output']>;
  division?: Maybe<Scalars['String']['output']>;
  drivingTimeSeconds?: Maybe<Scalars['Int']['output']>;
  estimatedVolume?: Maybe<Scalars['Float']['output']>;
  ffm?: Maybe<Scalars['String']['output']>;
  inconsistent?: Maybe<Scalars['Boolean']['output']>;
  lastDeliveryDate?: Maybe<Scalars['String']['output']>;
  lastDistanceInMiles?: Maybe<Scalars['Float']['output']>;
  lastEndTime?: Maybe<Scalars['Int']['output']>;
  lastWaitingTime?: Maybe<Scalars['Int']['output']>;
  lat?: Maybe<Scalars['Float']['output']>;
  lineComment?: Maybe<Scalars['String']['output']>;
  lon?: Maybe<Scalars['Float']['output']>;
  orderNumber?: Maybe<Scalars['String']['output']>;
  podNo?: Maybe<Scalars['Int']['output']>;
  product?: Maybe<Scalars['String']['output']>;
  productCode?: Maybe<Scalars['String']['output']>;
  secondLastDeliveryDate?: Maybe<Scalars['String']['output']>;
  tankSize?: Maybe<Scalars['Float']['output']>;
  timeSeconds?: Maybe<Scalars['Int']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  volume?: Maybe<Scalars['Float']['output']>;
  waitingTimeSeconds?: Maybe<Scalars['Int']['output']>;
};

/** Shift Plan delivery Input */
export type ShiftPlanDeliveryInput = {
  address?: InputMaybe<Scalars['String']['input']>;
  earliest?: InputMaybe<Scalars['Int']['input']>;
  ignore?: InputMaybe<Scalars['Boolean']['input']>;
  lat?: InputMaybe<Scalars['Float']['input']>;
  latest?: InputMaybe<Scalars['Int']['input']>;
  lon?: InputMaybe<Scalars['Float']['input']>;
  priority?: InputMaybe<Scalars['Int']['input']>;
};

export type ShiftPlanDeliveryMetric = {
  __typename?: 'ShiftPlanDeliveryMetric';
  deliveriesCount?: Maybe<Scalars['Int']['output']>;
  distance?: Maybe<Scalars['Float']['output']>;
  hubsDistance?: Maybe<Scalars['Float']['output']>;
  hubsTime?: Maybe<Scalars['Int']['output']>;
  serviceTime?: Maybe<Scalars['Int']['output']>;
  time?: Maybe<Scalars['String']['output']>;
  timeSeconds?: Maybe<Scalars['Int']['output']>;
  volumeDelivered?: Maybe<Scalars['Float']['output']>;
};

export type ShiftPlanFilter = {
  all?: InputMaybe<Scalars['String']['input']>;
  customers?: InputMaybe<Scalars['String']['input']>;
  fromTimestamp?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  ids?: InputMaybe<Array<Scalars['ID']['input']>>;
  lineOfServices?: InputMaybe<Array<Scalars['String']['input']>>;
  location?: InputMaybe<Array<Scalars['String']['input']>>;
  locationName?: InputMaybe<Scalars['String']['input']>;
  or?: InputMaybe<Array<ShiftPlanFilter>>;
  /** No. of items to display */
  perPage?: InputMaybe<Scalars['Int']['input']>;
  product?: InputMaybe<Scalars['String']['input']>;
  shift?: InputMaybe<Scalars['Int']['input']>;
  /** Array has one or more element among: 'active', 'completed', 'printed' */
  status?: InputMaybe<Array<Scalars['String']['input']>>;
  /** one among: today, this_week, next_week, fortnight */
  timeFrame?: InputMaybe<Scalars['String']['input']>;
  toTimestamp?: InputMaybe<Scalars['Int']['input']>;
  truckId?: InputMaybe<Scalars['String']['input']>;
};

export type ShiftPlanHub = {
  __typename?: 'ShiftPlanHub';
  address: Scalars['String']['output'];
  lat: Scalars['Float']['output'];
  lon: Scalars['Float']['output'];
  name?: Maybe<Scalars['String']['output']>;
};

export type ShiftPlanSorter = {
  field: ShiftPlanSorterEnum;
  order?: InputMaybe<FieldOrder>;
};

/** Enum to use on sorter fields when call a query */
export enum ShiftPlanSorterEnum {
  Date = 'DATE',
  Shift = 'SHIFT',
  Truck = 'TRUCK'
}

/** Shift Plan Truck Input */
export type ShiftPlanTruckInput = {
  earliestStart?: InputMaybe<Scalars['Int']['input']>;
  latestEnd?: InputMaybe<Scalars['Int']['input']>;
};

export type ShiftPlanUnassigned = {
  __typename?: 'ShiftPlanUnassigned';
  code?: Maybe<Scalars['Int']['output']>;
  id: Scalars['ID']['output'];
  reason?: Maybe<Scalars['String']['output']>;
};

/** Autogenerated input type of ShiftReconciliation */
export type ShiftReconciliationInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  shiftIds: Array<Scalars['Int']['input']>;
};

/** Autogenerated return type of ShiftReconciliation */
export type ShiftReconciliationPayload = {
  __typename?: 'ShiftReconciliationPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  reconciliation?: Maybe<ShiftReconciliationResponse>;
};

export type ShiftReconciliationResponse = {
  __typename?: 'ShiftReconciliationResponse';
  shiftResponses: Array<ShiftResponse>;
};

export type ShiftResponse = {
  __typename?: 'ShiftResponse';
  errors?: Maybe<Array<Scalars['JSON']['output']>>;
  shiftId: Scalars['ID']['output'];
  success: Scalars['Boolean']['output'];
  successRequests?: Maybe<Array<Scalars['JSON']['output']>>;
};

export type ShiftSorter = {
  field: ShiftSorterEnum;
  order?: InputMaybe<FieldOrder>;
};

/** Enum to use on sorter fields when call a query */
export enum ShiftSorterEnum {
  Asset = 'ASSET',
  Date = 'DATE',
  Driver = 'DRIVER',
  Enddate = 'ENDDATE',
  Hub = 'HUB',
  Id = 'ID',
  Startdate = 'STARTDATE',
  Status = 'STATUS'
}

export enum ShiftStartMethodEnum {
  /** Code */
  Code = 'code',
  /** One touch button */
  OneTouchButton = 'one_touch_button'
}

/** Enum for various state of shift */
export enum ShiftStateEnum {
  AccountingSynced = 'ACCOUNTING_SYNCED',
  AccountingSyncReady = 'ACCOUNTING_SYNC_READY',
  Active = 'ACTIVE',
  Archived = 'ARCHIVED',
  Completed = 'COMPLETED',
  PartialAccountingSynced = 'PARTIAL_ACCOUNTING_SYNCED',
  QueuedForAccountingSync = 'QUEUED_FOR_ACCOUNTING_SYNC',
  Review1 = 'REVIEW1',
  Review2 = 'REVIEW2',
  Review3 = 'REVIEW3',
  Verified = 'VERIFIED'
}

/** Autogenerated input type of ShiftsSync */
export type ShiftsSyncInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  shiftIds: Array<Scalars['Int']['input']>;
};

/** Autogenerated return type of ShiftsSync */
export type ShiftsSyncPayload = {
  __typename?: 'ShiftsSyncPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  errors?: Maybe<Array<Scalars['JSON']['output']>>;
  success?: Maybe<Scalars['Boolean']['output']>;
};

/** Autogenerated input type of SignIn */
export type SignInInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  credentials: AuthInput;
};

/** Autogenerated return type of SignIn */
export type SignInPayload = {
  __typename?: 'SignInPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  isCustomerClient?: Maybe<Scalars['Boolean']['output']>;
  message?: Maybe<Scalars['String']['output']>;
  refreshToken?: Maybe<Scalars['String']['output']>;
  token?: Maybe<Scalars['String']['output']>;
  user?: Maybe<User>;
};

export type Site = {
  __typename?: 'Site';
  address?: Maybe<Scalars['JSON']['output']>;
  city?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  lat?: Maybe<Scalars['String']['output']>;
  lng?: Maybe<Scalars['String']['output']>;
  qbAddress?: Maybe<Scalars['String']['output']>;
  radius?: Maybe<Scalars['Float']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  tags?: Maybe<Scalars['JSON']['output']>;
  zip?: Maybe<Scalars['String']['output']>;
};

export type SiteInput = {
  /** Shiptos address. */
  address?: InputMaybe<Scalars['JSON']['input']>;
  city?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  lat?: InputMaybe<Scalars['String']['input']>;
  lng?: InputMaybe<Scalars['String']['input']>;
  /** In meters */
  radius?: InputMaybe<Scalars['Float']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  zip?: InputMaybe<Scalars['String']['input']>;
};

export type SourceAsset = {
  __typename?: 'SourceAsset';
  asset: Asset;
  deliveryOrderLineItem: DeliveryOrderLineItem;
  dispensedQty?: Maybe<Scalars['Int']['output']>;
  id: Scalars['ID']['output'];
};

/** In case of package delivery Source Asset for delivery order line item input */
export type SourceAssetInput = {
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  /** Asset ID. */
  assetId?: InputMaybe<Scalars['ID']['input']>;
  /** Dispensed volume. */
  dispensedQty?: InputMaybe<Scalars['Int']['input']>;
  /** SourceAsset ID. */
  id?: InputMaybe<Scalars['ID']['input']>;
};

export type SourceCompartment = {
  __typename?: 'SourceCompartment';
  compartment: Compartment;
  deliveryOrderLineItems: DeliveryOrderLineItem;
  dispensedVolume?: Maybe<Scalars['Float']['output']>;
  id: Scalars['ID']['output'];
};

/** Source Compartment for delivery order line item input */
export type SourceCompartmentInput = {
  /** Deprecated. DO NOT USE. */
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  /** Compartment ID. */
  compartmentId: Scalars['ID']['input'];
  /** Dispensed volume. */
  dispensedVolume: Scalars['Float']['input'];
  /** SourceCompartment ID. */
  id?: InputMaybe<Scalars['ID']['input']>;
};

/** Autogenerated input type of StartShift */
export type StartShiftInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  latitude?: InputMaybe<Scalars['Float']['input']>;
  longitude?: InputMaybe<Scalars['Float']['input']>;
  method?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated return type of StartShift */
export type StartShiftPayload = {
  __typename?: 'StartShiftPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  shift?: Maybe<Shift>;
};

export enum StatusEnum {
  /** Active record */
  Active = 'active',
  /** Inactive record */
  Inactive = 'inactive'
}

/** Autogenerated input type of SubmitDelivery */
export type SubmitDeliveryInput = {
  assetProductCategoriesAttributes?: InputMaybe<Array<NestedAssetProductCategoryInput>>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  deliveryOrderAttributes: DeliveryOrderInput;
  deliveryOrderId?: InputMaybe<Scalars['ID']['input']>;
  /** Don't use, deprecated! */
  taskId?: InputMaybe<Scalars['ID']['input']>;
};

/** Autogenerated return type of SubmitDelivery */
export type SubmitDeliveryPayload = {
  __typename?: 'SubmitDeliveryPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  orderGroup?: Maybe<OrderGroup>;
};

/** Autogenerated input type of SubmitLoading */
export type SubmitLoadingInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  delay?: InputMaybe<DelayInput>;
  loadingOrderId?: InputMaybe<Scalars['ID']['input']>;
  loadingReceiptsAttributes: Array<LoadingReceiptInput>;
  noteAttributes?: InputMaybe<NoteInput>;
  /** Don't use, deprecated! */
  taskId?: InputMaybe<Scalars['ID']['input']>;
};

/** Autogenerated return type of SubmitLoading */
export type SubmitLoadingPayload = {
  __typename?: 'SubmitLoadingPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  delayNote?: Maybe<Note>;
  loadingOrder?: Maybe<LoadingOrder>;
  loadingReceipts?: Maybe<Array<LoadingReceipt>>;
  message?: Maybe<Scalars['String']['output']>;
  orderGroup?: Maybe<OrderGroup>;
};

export type Subscription = {
  __typename?: 'Subscription';
  asset: Asset;
  compartment?: Maybe<Compartment>;
  id: Scalars['ID']['output'];
  product: Product;
  status?: Maybe<Scalars['String']['output']>;
};

export enum SubscriptionStatusEnum {
  /** Active */
  Active = 'active',
  /** Inactive */
  Inactive = 'inactive'
}

export type Supplier = {
  __typename?: 'Supplier';
  active?: Maybe<Scalars['Boolean']['output']>;
  erpId?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  lineOfServices?: Maybe<Array<LineOfService>>;
  loadingAccounts?: Maybe<Array<LoadingAccount>>;
  name: Scalars['String']['output'];
  netsuiteId?: Maybe<Scalars['ID']['output']>;
  nonEditableRecords?: Maybe<Array<Scalars['JSON']['output']>>;
  supplierCode?: Maybe<Scalars['String']['output']>;
  supplierId?: Maybe<Scalars['String']['output']>;
  terminals?: Maybe<Array<Terminal>>;
  terminalsSuppliers?: Maybe<Array<TerminalsSupplier>>;
};

export type SupplierCollection = {
  __typename?: 'SupplierCollection';
  collection: Array<Supplier>;
  metadata: MetaQuery;
};

export type SupplierFilter = {
  all?: InputMaybe<Scalars['String']['input']>;
  erpId?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  or?: InputMaybe<Array<SupplierFilter>>;
  supplierCode?: InputMaybe<Scalars['String']['input']>;
  terminalId?: InputMaybe<Scalars['ID']['input']>;
};

export type SupplierSorter = {
  field: SupplierSorterEnum;
  order?: InputMaybe<FieldOrder>;
};

/** Enum to use on sorter fields when call a query */
export enum SupplierSorterEnum {
  Erpid = 'ERPID',
  Name = 'NAME',
  Supplierid = 'SUPPLIERID'
}

/** Autogenerated input type of SwitchTenant */
export type SwitchTenantInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  toCustomerId: Scalars['ID']['input'];
};

/** Autogenerated return type of SwitchTenant */
export type SwitchTenantPayload = {
  __typename?: 'SwitchTenantPayload';
  accessToken: Scalars['String']['output'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  message: Scalars['String']['output'];
};

/** Autogenerated input type of SyncAll */
export type SyncAllInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated return type of SyncAll */
export type SyncAllPayload = {
  __typename?: 'SyncAllPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  response?: Maybe<Scalars['String']['output']>;
};

/** Autogenerated input type of SyncIndividualTank */
export type SyncIndividualTankInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  manualSyncAttributes: Array<ManualSyncInput>;
};

/** Autogenerated return type of SyncIndividualTank */
export type SyncIndividualTankPayload = {
  __typename?: 'SyncIndividualTankPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  response?: Maybe<Scalars['String']['output']>;
};

/** Meta data used to fetch next records and retrive total records */
export type TankMonitorMetaDataQuery = {
  __typename?: 'TankMonitorMetaDataQuery';
  hasMore: Scalars['Boolean']['output'];
  totalCount?: Maybe<Scalars['Int']['output']>;
  total_entries?: Maybe<Scalars['Int']['output']>;
};

export type TankMonitorSorter = {
  field: DevicesSorterEnum;
  order?: InputMaybe<PandaTankMonitorFieldOrder>;
};

export type Task = {
  __typename?: 'Task';
  completeOnTimestamp?: Maybe<Scalars['Int']['output']>;
  completedOnTimestamp?: Maybe<Scalars['Int']['output']>;
  customerBranch: CustomerBranch;
  data?: Maybe<Scalars['JSON']['output']>;
  deliveryOrderId?: Maybe<Scalars['ID']['output']>;
  departOnTimestamp?: Maybe<Scalars['Int']['output']>;
  departedOnTimestamp?: Maybe<Scalars['Int']['output']>;
  driver?: Maybe<Driver>;
  driverAcceptance: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  note?: Maybe<Scalars['String']['output']>;
  site: Site;
  startOnTimestamp?: Maybe<Scalars['Int']['output']>;
  startedOnTimestamp?: Maybe<Scalars['Int']['output']>;
  status: Scalars['String']['output'];
  terminal?: Maybe<Terminal>;
  workerId?: Maybe<Scalars['Int']['output']>;
};

export type TaskFiltersInput = {
  driverAcceptance?: InputMaybe<Scalars['String']['input']>;
  fromTimestamp?: InputMaybe<Scalars['Int']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  timeFrame?: InputMaybe<Scalars['String']['input']>;
  toTimestamp?: InputMaybe<Scalars['Int']['input']>;
};

export type Tax = {
  __typename?: 'Tax';
  id?: Maybe<Scalars['ID']['output']>;
  marketId?: Maybe<Scalars['ID']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  productCategoryId?: Maybe<Scalars['ID']['output']>;
  rateInCurrency?: Maybe<Scalars['Float']['output']>;
  rateInPercent?: Maybe<Scalars['Float']['output']>;
  rateType?: Maybe<Scalars['String']['output']>;
};

export type TaxCollection = {
  __typename?: 'TaxCollection';
  collection: Array<Tax>;
  metadata: MetaDataQuery;
};

export type TaxFilter = {
  all?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  or?: InputMaybe<Array<TaxFilter>>;
};

export type Tenant = {
  __typename?: 'Tenant';
  adminUsers?: Maybe<Array<User>>;
  customers?: Maybe<Array<Customer>>;
  heroImage?: Maybe<AttachedFile>;
  id: Scalars['ID']['output'];
  logo?: Maybe<AttachedFile>;
  name?: Maybe<Scalars['String']['output']>;
  slug?: Maybe<Scalars['String']['output']>;
  status: Scalars['Int']['output'];
};

export type Terminal = {
  __typename?: 'Terminal';
  active?: Maybe<Scalars['Boolean']['output']>;
  erpId?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  isWarehouse?: Maybe<Scalars['Boolean']['output']>;
  loadingInstruction?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  nonEditableRecords?: Maybe<Array<Scalars['JSON']['output']>>;
  nsTags?: Maybe<Array<Scalars['String']['output']>>;
  products?: Maybe<Array<Product>>;
  site?: Maybe<Site>;
  suppliers?: Maybe<Array<Supplier>>;
  terminalNumber?: Maybe<Scalars['String']['output']>;
  terminalsSuppliers?: Maybe<Array<TerminalsSupplier>>;
};

export type TerminalCollection = {
  __typename?: 'TerminalCollection';
  collection: Array<Terminal>;
  metadata: MetaQuery;
};

export type TerminalDistance = {
  __typename?: 'TerminalDistance';
  distance: Scalars['Float']['output'];
  terminal: Terminal;
};

export type TerminalFilter = {
  all?: InputMaybe<Scalars['String']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  erpId?: InputMaybe<Scalars['String']['input']>;
  isWarehouse?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  or?: InputMaybe<Array<TerminalFilter>>;
};

/** Default terminal Input */
export type TerminalInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  erpId?: InputMaybe<Scalars['String']['input']>;
  isWarehouse?: InputMaybe<Scalars['Boolean']['input']>;
  loadingInstruction?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  nsTags?: InputMaybe<Array<Scalars['String']['input']>>;
  products?: InputMaybe<Array<NestedProductInput>>;
  siteAttributes?: InputMaybe<NestedSiteInput>;
  terminalsSuppliersAttributes?: InputMaybe<Array<NestedTerminalSupplierInput>>;
};

export type TerminalSorter = {
  field: TerminalSorterEnum;
  order?: InputMaybe<FieldOrder>;
};

/** Enum to use on sorter fields when call a query */
export enum TerminalSorterEnum {
  Erpid = 'ERPID',
  Name = 'NAME'
}

export type TerminalsSupplier = {
  __typename?: 'TerminalsSupplier';
  bolTimeAt?: Maybe<BolTimeAtEnum>;
  id: Scalars['ID']['output'];
  nonEditableRecords?: Maybe<Array<Scalars['JSON']['output']>>;
  /** @deprecated Dont use this. Use pickup_point_codes instead */
  pickupPointCode?: Maybe<Scalars['String']['output']>;
  pickupPointCodes?: Maybe<Array<PickupPointCode>>;
  supplier: Supplier;
  terminal: Terminal;
};

export type TerminalsSupplierCollection = {
  __typename?: 'TerminalsSupplierCollection';
  collection: Array<TerminalsSupplier>;
  metadata: MetaQuery;
};

export type TerminalsSupplierFilter = {
  all?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  or?: InputMaybe<Array<TerminalsSupplierFilter>>;
  supplierId?: InputMaybe<Scalars['ID']['input']>;
  terminalId?: InputMaybe<Scalars['ID']['input']>;
};

/** Default terminals supplier Input */
export type TerminalsSupplierInput = {
  bolTimeAt?: InputMaybe<Scalars['String']['input']>;
  pickupPointCodesAttributes?: InputMaybe<Array<NestedPickupPointCodeInput>>;
  supplierId: Scalars['ID']['input'];
  terminalId: Scalars['ID']['input'];
};

export type TerminalsSupplierSorter = {
  field: TerminalsSupplierSorterEnum;
  order?: InputMaybe<FieldOrder>;
};

/** Enum to use on sorter fields when call a query on terminal suppliers resolver */
export enum TerminalsSupplierSorterEnum {
  SupplierName = 'SUPPLIER_NAME',
  TerminalName = 'TERMINAL_NAME'
}

export type TransferOrder = {
  __typename?: 'TransferOrder';
  comments?: Maybe<Array<Note>>;
  customerBranch?: Maybe<CustomerBranch>;
  fromAsset?: Maybe<Asset>;
  fromDriver?: Maybe<Driver>;
  fromShift?: Maybe<Shift>;
  id: Scalars['ID']['output'];
  lineItemSummary?: Maybe<Array<LineItem>>;
  lineItems?: Maybe<Array<TransferOrderLineItem>>;
  notes?: Maybe<Scalars['String']['output']>;
  orderGroup?: Maybe<OrderGroup>;
  orderGroupId?: Maybe<Scalars['Int']['output']>;
  orderLinks?: Maybe<Array<OrderLink>>;
  ticketId: Scalars['Int']['output'];
  toAsset?: Maybe<Asset>;
  toDriver?: Maybe<Driver>;
  toShift?: Maybe<Shift>;
  /** Obsolete!! Use orderGroup's completedOnTimestamp */
  transferDateTimestamp?: Maybe<Scalars['BigInt']['output']>;
};

export type TransferOrderCollection = {
  __typename?: 'TransferOrderCollection';
  collection: Array<TransferOrder>;
  metadata: MetaQuery;
};

export type TransferOrderFilter = {
  all?: InputMaybe<Scalars['String']['input']>;
  fromTimestamp?: InputMaybe<Scalars['Int']['input']>;
  or?: InputMaybe<Array<TransferOrderFilter>>;
  toTimestamp?: InputMaybe<Scalars['Int']['input']>;
};

/** TransferOrder Input */
export type TransferOrderInput = {
  /** Deprecated. DO NOT USE. */
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  /** Branch/Site ID. */
  customerBranchId?: InputMaybe<Scalars['ID']['input']>;
  /** Source asset ID. Required. */
  fromAssetId?: InputMaybe<Scalars['ID']['input']>;
  /** Transfer 'from' Driver ID. */
  fromDriverId?: InputMaybe<Scalars['ID']['input']>;
  /** Transfer order ID. Required during update. */
  id?: InputMaybe<Scalars['ID']['input']>;
  /** Descriptive notes. */
  notes?: InputMaybe<Scalars['String']['input']>;
  /** Destination asset ID. Required. */
  toAssetId?: InputMaybe<Scalars['ID']['input']>;
  /** Transfer 'to' Driver ID. */
  toDriverId?: InputMaybe<Scalars['ID']['input']>;
  /** Transfer date time. */
  transferDateTimestamp?: InputMaybe<Scalars['Int']['input']>;
  /** TransferOrderLineItemInput object. */
  transferOrderLineItemsAttributes?: InputMaybe<Array<TransferOrderLineItemInput>>;
};

export type TransferOrderLineItem = {
  __typename?: 'TransferOrderLineItem';
  fromCompartment?: Maybe<Compartment>;
  fromCompartmentInstances?: Maybe<Array<CompartmentInstance>>;
  id: Scalars['ID']['output'];
  product?: Maybe<Product>;
  requestedVolume?: Maybe<Scalars['Float']['output']>;
  toCompartment?: Maybe<Compartment>;
  toCompartmentInstances?: Maybe<Array<CompartmentInstance>>;
  transferOrder: TransferOrder;
  volume?: Maybe<Scalars['Float']['output']>;
};

/** TransferOrderLineItem Input */
export type TransferOrderLineItemInput = {
  /** Deprecated. DO NOT USE. */
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  /** 'From' compartment. */
  fromCompartmentId?: InputMaybe<Scalars['ID']['input']>;
  /** ID of TransferOrderLineItem. Required on update. */
  id?: InputMaybe<Scalars['ID']['input']>;
  /** Product ID. */
  productId?: InputMaybe<Scalars['ID']['input']>;
  /** Requested volume information. */
  requestedVolume?: InputMaybe<Scalars['Float']['input']>;
  /** 'To' compartment. */
  toCompartmentId?: InputMaybe<Scalars['ID']['input']>;
  /** Transfer order ID. */
  transferOrderId?: InputMaybe<Scalars['ID']['input']>;
  /** Volume information. */
  volume?: InputMaybe<Scalars['Float']['input']>;
};

export type TransferOrderSorter = {
  field: TransferOrderSorterEnum;
  order?: InputMaybe<FieldOrder>;
};

/** Enum to use on sorter fields when call a query */
export enum TransferOrderSorterEnum {
  Fromasset = 'FROMASSET',
  Fromdriver = 'FROMDRIVER',
  Id = 'ID',
  Toasset = 'TOASSET',
  Todriver = 'TODRIVER'
}

export enum UnitEnum {
  /** Each */
  Ea = 'ea',
  /** Gal */
  Gal = 'gal',
  /** Gallon */
  Gallon = 'gallon',
  /** Liter */
  Liter = 'liter',
  /** Milliliter */
  Milliliter = 'milliliter',
  /** Once */
  Ounce = 'ounce'
}

export type UnloadOrder = {
  __typename?: 'UnloadOrder';
  id: Scalars['ID']['output'];
  notes?: Maybe<Array<Note>>;
  orderGroup: OrderGroup;
  terminal: Terminal;
  unloadOrderLineItems: Array<UnloadOrderLineItem>;
};

/** Unload Order Input */
export type UnloadOrderInput = {
  /** Unload comment and reason */
  note?: InputMaybe<Scalars['String']['input']>;
  /** Warehouse ID. Required incase of new order. */
  terminalId: Scalars['ID']['input'];
  /** LoadingOrderLineItemInput object. */
  unloadOrderLineItemsAttributes?: InputMaybe<Array<UnloadOrderLineItemInput>>;
};

export type UnloadOrderLineItem = {
  __typename?: 'UnloadOrderLineItem';
  asset: DeliveryAsset;
  assetId: Scalars['ID']['output'];
  id?: Maybe<Scalars['ID']['output']>;
  product: Product;
  productId: Scalars['ID']['output'];
  volume: Scalars['Float']['output'];
};

/** Unload Order Line Item Input */
export type UnloadOrderLineItemInput = {
  /** Delivery Asset ID. */
  assetId: Scalars['ID']['input'];
  /** Product ID. */
  productId: Scalars['ID']['input'];
  volume: Scalars['Float']['input'];
};

/** Update TransferOrder Input */
export type UpdTransferOrderInput = {
  /** Deprecated. DO NOT USE. */
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  /** Branch/Site ID. */
  customerBranchId?: InputMaybe<Scalars['ID']['input']>;
  fromAssetId?: InputMaybe<Scalars['ID']['input']>;
  /** Transfer 'from' Driver ID. */
  fromDriverId?: InputMaybe<Scalars['ID']['input']>;
  id: Scalars['ID']['input'];
  /** Descriptive notes. */
  notes?: InputMaybe<Scalars['String']['input']>;
  toAssetId?: InputMaybe<Scalars['ID']['input']>;
  /** Transfer 'to' Driver ID. */
  toDriverId?: InputMaybe<Scalars['ID']['input']>;
  /** Transfer date time. */
  transferDateTimestamp?: InputMaybe<Scalars['Int']['input']>;
  /** TransferOrderLineItemInput object. */
  transferOrderLineItemsAttributes?: InputMaybe<Array<TransferOrderLineItemInput>>;
};

export type Updatable = Driver | User | Worker;

/** Update fee input */
export type UpdateApplicableFeeInput = {
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  feeId?: InputMaybe<Scalars['ID']['input']>;
  hardcoded?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  isDefault?: InputMaybe<Scalars['Boolean']['input']>;
  price?: InputMaybe<Scalars['Float']['input']>;
  quantity?: InputMaybe<Scalars['Float']['input']>;
};

/** Autogenerated input type of UpdateAppliedPricing */
export type UpdateAppliedPricingInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: UpdateAppliedPricingsInput;
};

/** Autogenerated return type of UpdateAppliedPricing */
export type UpdateAppliedPricingPayload = {
  __typename?: 'UpdateAppliedPricingPayload';
  appliedPricings?: Maybe<Array<AppliedPricing>>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
};

/** Update Applied Pricing Input */
export type UpdateAppliedPricingsInput = {
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  appliedMarginsAttributes?: InputMaybe<Array<AppliedMarginsInput>>;
  appliedTaxesAttributes?: InputMaybe<Array<AppliedTaxesInput>>;
  id: Scalars['ID']['input'];
  isManuallyUpdated?: InputMaybe<Scalars['Boolean']['input']>;
  price?: InputMaybe<Scalars['Float']['input']>;
  quantity?: InputMaybe<Scalars['Float']['input']>;
  sumTotal?: InputMaybe<Scalars['Float']['input']>;
  total?: InputMaybe<Scalars['Float']['input']>;
};

/** Update asset input */
export type UpdateAssetInput = {
  /** Use this for multiple locations. */
  assetMovementLocationsAttributes?: InputMaybe<Array<AssetMovementLocationInput>>;
  assetProductCategoriesAttributes?: InputMaybe<Array<NestedAssetProductCategoryInput>>;
  assetsPeripheralsAttributes?: InputMaybe<Array<AssetsPeripheralInput>>;
  category?: InputMaybe<AssetCategoryEnum>;
  color?: InputMaybe<Scalars['String']['input']>;
  compartmentsAttributes?: InputMaybe<Array<NestedCompartmentInput>>;
  completeMovementOrder?: InputMaybe<Scalars['Boolean']['input']>;
  costOfTank?: InputMaybe<Scalars['Float']['input']>;
  customerBranchId?: InputMaybe<Scalars['ID']['input']>;
  customerId?: InputMaybe<Scalars['ID']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  erpId?: InputMaybe<Scalars['String']['input']>;
  /** Send form_type in CamelCase example: rental asset would be RentalAsset */
  formType?: InputMaybe<Scalars['String']['input']>;
  fuelCategories?: InputMaybe<Array<Scalars['String']['input']>>;
  hubResourcesAttributes?: InputMaybe<Array<HubResourceInput>>;
  id: Scalars['ID']['input'];
  lat?: InputMaybe<Scalars['String']['input']>;
  licensePlateNumber?: InputMaybe<Scalars['String']['input']>;
  lineOfServiceIds?: InputMaybe<Array<Scalars['ID']['input']>>;
  lng?: InputMaybe<Scalars['String']['input']>;
  make?: InputMaybe<Scalars['String']['input']>;
  marketValue?: InputMaybe<Scalars['Float']['input']>;
  model?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  pandaDocuments?: InputMaybe<Array<NestedPandaDocumentsInput>>;
  purchasedOn?: InputMaybe<Scalars['ISO8601DateTime']['input']>;
  sites?: InputMaybe<Array<SiteInput>>;
  status?: InputMaybe<AssetStatusEnum>;
  subscriptionsAttributes?: InputMaybe<Array<NestedSubscriptionsInput>>;
  tankSize?: InputMaybe<Scalars['String']['input']>;
  tankType?: InputMaybe<Scalars['String']['input']>;
  terminals?: InputMaybe<Array<NestedTerminalInput>>;
  type?: InputMaybe<Scalars['String']['input']>;
  useInDelivery?: InputMaybe<Scalars['Boolean']['input']>;
  vin?: InputMaybe<Scalars['String']['input']>;
  year?: InputMaybe<Scalars['Int']['input']>;
};

/** Autogenerated input type of UpdateAssets */
export type UpdateAssetsInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: UpdateAssetInput;
};

/** Autogenerated return type of UpdateAssets */
export type UpdateAssetsPayload = {
  __typename?: 'UpdateAssetsPayload';
  asset?: Maybe<Asset>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
};

/** Autogenerated input type of UpdateAttachedAsset */
export type UpdateAttachedAssetInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: UpdateAttachedAssetsInput;
};

/** Autogenerated return type of UpdateAttachedAsset */
export type UpdateAttachedAssetPayload = {
  __typename?: 'UpdateAttachedAssetPayload';
  attachedAsset?: Maybe<AttachedAsset>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
};

/** Tank Monitor attached assets input */
export type UpdateAttachedAssetsInput = {
  autoOrder?: InputMaybe<Scalars['Boolean']['input']>;
  detachedAt?: InputMaybe<Scalars['String']['input']>;
  hubIds?: InputMaybe<Array<Scalars['ID']['input']>>;
  id: Scalars['ID']['input'];
  minThreshold: Scalars['Float']['input'];
  orderConfirmation?: InputMaybe<Scalars['Boolean']['input']>;
  purchaseOrder?: InputMaybe<Scalars['Boolean']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
};

/** Update Brand input */
export type UpdateBrandInput = {
  id: Scalars['ID']['input'];
  name?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated input type of UpdateBrands */
export type UpdateBrandsInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: UpdateBrandInput;
};

/** Autogenerated return type of UpdateBrands */
export type UpdateBrandsPayload = {
  __typename?: 'UpdateBrandsPayload';
  brand?: Maybe<Brand>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
};

/** Update ShipTos input */
export type UpdateCustomerBranchInput = {
  addressBooksAttributes?: InputMaybe<Array<AddressBookInput>>;
  applicableFeesAttributes?: InputMaybe<Array<UpdateApplicableFeeInput>>;
  attachBolOnDeliveryTicket?: InputMaybe<Scalars['Boolean']['input']>;
  autoEmailDeliveryTicket?: InputMaybe<Scalars['Boolean']['input']>;
  deliveryInstruction?: InputMaybe<Scalars['String']['input']>;
  erpId?: InputMaybe<Scalars['String']['input']>;
  hubResourcesAttributes?: InputMaybe<Array<HubResourceInput>>;
  id: Scalars['ID']['input'];
  isCustomerSignatureRequired?: InputMaybe<Scalars['Boolean']['input']>;
  lineOfServiceIds?: InputMaybe<Array<Scalars['ID']['input']>>;
  loadingAccountIds?: InputMaybe<Array<Scalars['ID']['input']>>;
  marketResourcesAttributes?: InputMaybe<Array<MarketResourceInput>>;
  name?: InputMaybe<Scalars['String']['input']>;
  pandaDocuments?: InputMaybe<Array<DirectAttachmentInput>>;
  pickupPointCodeIds?: InputMaybe<Array<Scalars['ID']['input']>>;
  poNumber?: InputMaybe<Scalars['String']['input']>;
  purchaseOrder?: InputMaybe<Scalars['Boolean']['input']>;
  purchaseOrderType?: InputMaybe<PurchaseOrderTypeEnum>;
  siteAttributes?: InputMaybe<SiteInput>;
  supplierIds?: InputMaybe<Array<Scalars['ID']['input']>>;
};

/** Autogenerated input type of UpdateCustomerBranches */
export type UpdateCustomerBranchesInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: UpdateCustomerBranchInput;
};

/** Autogenerated return type of UpdateCustomerBranches */
export type UpdateCustomerBranchesPayload = {
  __typename?: 'UpdateCustomerBranchesPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  customerBranch?: Maybe<CustomerBranch>;
};

/** Update customer input */
export type UpdateCustomerInput = {
  address?: InputMaybe<Scalars['String']['input']>;
  applicableFeesAttributes?: InputMaybe<Array<UpdateApplicableFeeInput>>;
  creditChecked?: InputMaybe<Scalars['Boolean']['input']>;
  creditLimit?: InputMaybe<Scalars['String']['input']>;
  creditLimitDaysOverdueBuffer?: InputMaybe<Scalars['String']['input']>;
  creditLimitPercentageBuffer?: InputMaybe<Scalars['String']['input']>;
  currentBalance?: InputMaybe<Scalars['String']['input']>;
  customerBranchesAttributes?: InputMaybe<Array<NestedCustomerBranchInput>>;
  daysOverdue?: InputMaybe<Scalars['String']['input']>;
  deliveryInstruction?: InputMaybe<Scalars['String']['input']>;
  dueDate?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  erpId?: InputMaybe<Scalars['String']['input']>;
  fees?: InputMaybe<Array<NestedFeeInput>>;
  hubResourcesAttributes?: InputMaybe<Array<HubResourceInput>>;
  id: Scalars['ID']['input'];
  isTenant?: InputMaybe<Scalars['Boolean']['input']>;
  lineOfServiceIds?: InputMaybe<Array<Scalars['ID']['input']>>;
  marketResourcesAttributes?: InputMaybe<Array<MarketResourceInput>>;
  name?: InputMaybe<Scalars['String']['input']>;
  originalCustomerId?: InputMaybe<Scalars['String']['input']>;
  poNumber?: InputMaybe<Scalars['String']['input']>;
  preferredDrivers?: InputMaybe<Array<NestedDriverInput>>;
  purchaseOrder?: InputMaybe<Scalars['Boolean']['input']>;
  purchaseOrderType?: InputMaybe<PurchaseOrderTypeEnum>;
  siteAttributes?: InputMaybe<SiteInput>;
  status?: InputMaybe<StatusEnum>;
  tankReadingThreshold?: InputMaybe<Scalars['Float']['input']>;
  updateAllThreshold?: InputMaybe<Scalars['Boolean']['input']>;
  usersAttributes?: InputMaybe<Array<NestedUserInput>>;
};

/** Autogenerated input type of UpdateCustomerPreferences */
export type UpdateCustomerPreferencesInput = {
  addressBook: AddressBookInput;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
};

/** Autogenerated return type of UpdateCustomerPreferences */
export type UpdateCustomerPreferencesPayload = {
  __typename?: 'UpdateCustomerPreferencesPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  customer?: Maybe<Customer>;
  error?: Maybe<Scalars['String']['output']>;
  message?: Maybe<Scalars['String']['output']>;
};

/** Update customer user input */
export type UpdateCustomerUserInput = {
  customerBranchId?: InputMaybe<Scalars['ID']['input']>;
  customerId?: InputMaybe<Scalars['ID']['input']>;
  hubResourcesAttributes?: InputMaybe<Array<HubResourceInput>>;
  id: Scalars['ID']['input'];
  lineOfServiceIds?: InputMaybe<Array<Scalars['ID']['input']>>;
  userAttributes?: InputMaybe<NestedUserAttributesInput>;
};

/** Autogenerated input type of UpdateCustomerUsers */
export type UpdateCustomerUsersInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: UpdateCustomerUserInput;
};

/** Autogenerated return type of UpdateCustomerUsers */
export type UpdateCustomerUsersPayload = {
  __typename?: 'UpdateCustomerUsersPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  customerUser?: Maybe<CustomerUser>;
};

/** Autogenerated input type of UpdateCustomers */
export type UpdateCustomersInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: UpdateCustomerInput;
};

/** Autogenerated return type of UpdateCustomers */
export type UpdateCustomersPayload = {
  __typename?: 'UpdateCustomersPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  customer?: Maybe<Customer>;
};

/** Autogenerated input type of UpdateDeliveryOrder */
export type UpdateDeliveryOrderInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  deliveryOrderAttributes?: InputMaybe<DeliveryOrderInput>;
};

/** Autogenerated input type of UpdateDeliveryOrderLineItem */
export type UpdateDeliveryOrderLineItemInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data?: InputMaybe<Scalars['JSON']['input']>;
  id: Scalars['ID']['input'];
  lat?: InputMaybe<Scalars['String']['input']>;
  lng?: InputMaybe<Scalars['String']['input']>;
  /** Name of LCR meter */
  meterName?: InputMaybe<Scalars['String']['input']>;
  notes?: InputMaybe<Scalars['String']['input']>;
  productId?: InputMaybe<Scalars['ID']['input']>;
  skipReason?: InputMaybe<Scalars['String']['input']>;
  source: Scalars['String']['input'];
  sourceAssetsAttributes?: InputMaybe<Array<SourceAssetInput>>;
  sourceCompartmentInstanceAttributes?: InputMaybe<Array<CompartmentInstanceInput>>;
  status: Scalars['String']['input'];
  targetCompartmentInstanceAttributes?: InputMaybe<CompartmentInstanceInput>;
  volume: Scalars['Float']['input'];
};

/** Autogenerated return type of UpdateDeliveryOrderLineItem */
export type UpdateDeliveryOrderLineItemPayload = {
  __typename?: 'UpdateDeliveryOrderLineItemPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  deliveryOrderLineItem?: Maybe<DeliveryOrderLineItem>;
};

/** Autogenerated return type of UpdateDeliveryOrder */
export type UpdateDeliveryOrderPayload = {
  __typename?: 'UpdateDeliveryOrderPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  deliveryOrder?: Maybe<DeliveryOrder>;
};

/** Update driver input */
export type UpdateDriverInput = {
  contractSignDate?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  endDate?: InputMaybe<Scalars['String']['input']>;
  erpId?: InputMaybe<Scalars['String']['input']>;
  homeAddress?: InputMaybe<Scalars['String']['input']>;
  hubResourcesAttributes?: InputMaybe<Array<HubResourceInput>>;
  id: Scalars['ID']['input'];
  imageSignedBlobId?: InputMaybe<Scalars['ID']['input']>;
  licenceExpiryDate?: InputMaybe<Scalars['String']['input']>;
  lineOfServiceIds?: InputMaybe<Array<Scalars['ID']['input']>>;
  name?: InputMaybe<Scalars['String']['input']>;
  paymentStrategy?: InputMaybe<Scalars['String']['input']>;
  phoneNumbersAttributes?: InputMaybe<Array<NestedPhoneInput>>;
  reasonForLeaving?: InputMaybe<Scalars['String']['input']>;
  s3BackgroundCheckBlobId?: InputMaybe<Scalars['ID']['input']>;
  s3DriverApplicationBlobId?: InputMaybe<Scalars['ID']['input']>;
  s3H6BlobId?: InputMaybe<Scalars['ID']['input']>;
  s3Licenses?: InputMaybe<Array<LicenseInput>>;
  startDate?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated input type of UpdateDriverShift */
export type UpdateDriverShiftInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  /** Shift input type. */
  shiftAttributes?: InputMaybe<ShiftCreateInput>;
};

/** Autogenerated return type of UpdateDriverShift */
export type UpdateDriverShiftPayload = {
  __typename?: 'UpdateDriverShiftPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  /** Shift type. */
  shift?: Maybe<Shift>;
};

/** Autogenerated input type of UpdateDrivers */
export type UpdateDriversInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: UpdateDriverInput;
};

/** Autogenerated return type of UpdateDrivers */
export type UpdateDriversPayload = {
  __typename?: 'UpdateDriversPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  driver?: Maybe<Driver>;
};

/** Update fee input */
export type UpdateFeeInput = {
  applicableType?: InputMaybe<ApplicableTypeEnum>;
  applyAsOnFee?: InputMaybe<ApplyAsOnFeeEnum>;
  calculatedAsOnFee?: InputMaybe<CalculatedAsOnFeeEnum>;
  code?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  erpId?: InputMaybe<Scalars['String']['input']>;
  feeProductCategoriesAttributes?: InputMaybe<Array<FeeProductCategoryInput>>;
  feeType?: InputMaybe<FeeTypeEnum>;
  id: Scalars['ID']['input'];
  lineOfServiceIds?: InputMaybe<Array<Scalars['ID']['input']>>;
  lineOfServiceRecordsAttributes?: InputMaybe<Array<NestedLineOfServiceRecord>>;
  name?: InputMaybe<Scalars['String']['input']>;
  nsManualVolume?: InputMaybe<Scalars['Boolean']['input']>;
  parentFeeId?: InputMaybe<Scalars['ID']['input']>;
  percentOnFee?: InputMaybe<Scalars['Float']['input']>;
  price?: InputMaybe<Scalars['Float']['input']>;
  productCategoryId?: InputMaybe<Scalars['ID']['input']>;
  rangeAttribute?: InputMaybe<Array<RangeAttributeInput>>;
  rangeCalculatedAsOnFee?: InputMaybe<CalculatedAsOnFeeEnum>;
  rangeTypeOnFee?: InputMaybe<RangeTypeOnFeeEnum>;
  rateOnFee?: InputMaybe<Scalars['Float']['input']>;
  rateUnitOnFee?: InputMaybe<RateUnitOnFeeEnum>;
};

/** Autogenerated input type of UpdateFees */
export type UpdateFeesInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: UpdateFeeInput;
};

/** Autogenerated return type of UpdateFees */
export type UpdateFeesPayload = {
  __typename?: 'UpdateFeesPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  fee?: Maybe<Fee>;
};

/** Autogenerated input type of UpdateGroup */
export type UpdateGroupInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: UpdateGroupsInput;
};

/** Autogenerated return type of UpdateGroup */
export type UpdateGroupPayload = {
  __typename?: 'UpdateGroupPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  group?: Maybe<Group>;
};

/** Update group Input */
export type UpdateGroupsInput = {
  groupMembershipsAttributes?: InputMaybe<Array<NestedGroupMembershipInput>>;
  id: Scalars['ID']['input'];
  /** Name of Group; letter, number, underscore and hypen are only accepted */
  name?: InputMaybe<Scalars['String']['input']>;
};

/** Default line of service Input */
export type UpdateLineOfServiceInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  erpId?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
  name?: InputMaybe<Scalars['String']['input']>;
  parentId?: InputMaybe<Scalars['ID']['input']>;
  shortName?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated input type of UpdateLineOfServices */
export type UpdateLineOfServicesInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: UpdateLineOfServiceInput;
};

/** Autogenerated return type of UpdateLineOfServices */
export type UpdateLineOfServicesPayload = {
  __typename?: 'UpdateLineOfServicesPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  lineOfService?: Maybe<LineOfService>;
};

/** Default loading Account Input */
export type UpdateLoadingAccountInput = {
  carrierCustomerCode?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  erpId?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
  loadingNumber?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  supplierCode?: InputMaybe<Scalars['String']['input']>;
  supplierId?: InputMaybe<Scalars['ID']['input']>;
};

/** Autogenerated input type of UpdateLoadingAccounts */
export type UpdateLoadingAccountsInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: UpdateLoadingAccountInput;
};

/** Autogenerated return type of UpdateLoadingAccounts */
export type UpdateLoadingAccountsPayload = {
  __typename?: 'UpdateLoadingAccountsPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  loadingAccount?: Maybe<LoadingAccount>;
};

/** Autogenerated input type of UpdateLoadingOrder */
export type UpdateLoadingOrderInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  loadingOrderAttributes?: InputMaybe<LoadingOrderInput>;
};

/** Autogenerated input type of UpdateLoadingOrderLineItem */
export type UpdateLoadingOrderLineItemInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  lineItemParams?: InputMaybe<LoadingOrderLineItemInput>;
};

/** Autogenerated return type of UpdateLoadingOrderLineItem */
export type UpdateLoadingOrderLineItemPayload = {
  __typename?: 'UpdateLoadingOrderLineItemPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  loadingOrderLineItem?: Maybe<LoadingOrderLineItem>;
};

/** Autogenerated return type of UpdateLoadingOrder */
export type UpdateLoadingOrderPayload = {
  __typename?: 'UpdateLoadingOrderPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  loadingOrder?: Maybe<LoadingOrder>;
};

/** Autogenerated input type of UpdateMargin */
export type UpdateMarginInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: UpdateMarginsInput;
};

/** Autogenerated return type of UpdateMargin */
export type UpdateMarginPayload = {
  __typename?: 'UpdateMarginPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  margin?: Maybe<Margin>;
};

/** Update Margin Input */
export type UpdateMarginsInput = {
  id: Scalars['ID']['input'];
  marginRate?: InputMaybe<Scalars['Float']['input']>;
  marginType: MarginTypeEnum;
  marginUnit?: InputMaybe<RateUnitEnum>;
  name: Scalars['String']['input'];
  range?: InputMaybe<Array<MarginRangeAttributeInput>>;
};

/** Update market input */
export type UpdateMarketInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  address?: InputMaybe<Scalars['String']['input']>;
  hubResourcesAttributes?: InputMaybe<Array<HubResourceInput>>;
  id: Scalars['ID']['input'];
  name?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated input type of UpdateMarkets */
export type UpdateMarketsInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: UpdateMarketInput;
};

/** Autogenerated return type of UpdateMarkets */
export type UpdateMarketsPayload = {
  __typename?: 'UpdateMarketsPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  market?: Maybe<Market>;
};

/** Autogenerated input type of UpdateMovementOrder */
export type UpdateMovementOrderInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  movementOrderAttributes?: InputMaybe<MovementOrderInput>;
};

/** Autogenerated return type of UpdateMovementOrder */
export type UpdateMovementOrderPayload = {
  __typename?: 'UpdateMovementOrderPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  movementOrder?: Maybe<MovementOrder>;
};

/** Autogenerated input type of UpdateNote */
export type UpdateNoteInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
  showInDeliveryTicket: Scalars['Boolean']['input'];
};

/** Autogenerated return type of UpdateNote */
export type UpdateNotePayload = {
  __typename?: 'UpdateNotePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  note?: Maybe<Note>;
};

/** Update Order-Group-Fee input */
export type UpdateOrderGroupFeeInput = {
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  feeId?: InputMaybe<Scalars['ID']['input']>;
  id?: InputMaybe<Scalars['ID']['input']>;
  price?: InputMaybe<Scalars['Float']['input']>;
  quantity?: InputMaybe<Scalars['Float']['input']>;
};

/** Autogenerated input type of UpdateOrderGroupMutation */
export type UpdateOrderGroupMutationInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  orderGroupAttributes?: InputMaybe<OrderGroupInput>;
};

/** Autogenerated return type of UpdateOrderGroupMutation */
export type UpdateOrderGroupMutationPayload = {
  __typename?: 'UpdateOrderGroupMutationPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  orderGroup?: Maybe<OrderGroup>;
};

/** Autogenerated input type of UpdateOrderLink */
export type UpdateOrderLinkInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: UpdateOrderLinksInput;
};

/** Autogenerated return type of UpdateOrderLink */
export type UpdateOrderLinkPayload = {
  __typename?: 'UpdateOrderLinkPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  orderLink?: Maybe<OrderLink>;
};

/** Update order link Input */
export type UpdateOrderLinksInput = {
  deliveryOrderId?: InputMaybe<Scalars['ID']['input']>;
  id: Scalars['ID']['input'];
  loadingOrderId?: InputMaybe<Scalars['ID']['input']>;
};

/** Autogenerated input type of UpdatePeripheral */
export type UpdatePeripheralInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: PeripheralInput;
};

/** Autogenerated return type of UpdatePeripheral */
export type UpdatePeripheralPayload = {
  __typename?: 'UpdatePeripheralPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  peripheral?: Maybe<Peripheral>;
};

/** Autogenerated input type of UpdatePoc */
export type UpdatePocInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  email: Scalars['String']['input'];
  name: Scalars['String']['input'];
  phone: Scalars['String']['input'];
  userId: Scalars['ID']['input'];
};

/** Autogenerated return type of UpdatePoc */
export type UpdatePocPayload = {
  __typename?: 'UpdatePocPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  poc?: Maybe<User>;
};

/** Autogenerated input type of UpdatePricing */
export type UpdatePricingInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: UpdatePricingsInput;
};

/** Autogenerated return type of UpdatePricing */
export type UpdatePricingPayload = {
  __typename?: 'UpdatePricingPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  response?: Maybe<DeletePricingResponse>;
};

/** Update Rate Type input */
export type UpdatePricingsInput = {
  _destroy?: InputMaybe<Scalars['Boolean']['input']>;
  effectiveEndDate?: InputMaybe<Scalars['Int']['input']>;
  effectiveStartDate?: InputMaybe<Scalars['Int']['input']>;
  hubId?: InputMaybe<Scalars['ID']['input']>;
  id: Scalars['ID']['input'];
  marketId?: InputMaybe<Scalars['ID']['input']>;
  price?: InputMaybe<Scalars['Float']['input']>;
  productId?: InputMaybe<Scalars['ID']['input']>;
  supplierId?: InputMaybe<Scalars['ID']['input']>;
  terminalId?: InputMaybe<Scalars['ID']['input']>;
};

/** Update product input */
export type UpdateProductInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  barcode?: InputMaybe<Scalars['String']['input']>;
  brandId?: InputMaybe<Scalars['ID']['input']>;
  code?: InputMaybe<Scalars['String']['input']>;
  erpId?: InputMaybe<Scalars['String']['input']>;
  hubResourceAttributes?: InputMaybe<HubResourceInput>;
  id: Scalars['ID']['input'];
  ignoreNsPush?: InputMaybe<Scalars['Boolean']['input']>;
  legalDescription?: InputMaybe<Scalars['String']['input']>;
  lineOfServiceIds?: InputMaybe<Array<Scalars['ID']['input']>>;
  longDescription?: InputMaybe<Scalars['String']['input']>;
  productCategoryId?: InputMaybe<Scalars['ID']['input']>;
  productConstituentsAttributes?: InputMaybe<Array<NestedProductConstituentsInput>>;
  productResourcesAttributes?: InputMaybe<Array<NestedProductResourceInput>>;
  productSubCategoryId?: InputMaybe<Scalars['ID']['input']>;
  productType?: InputMaybe<ProductTypeEnum>;
  shortName?: InputMaybe<Scalars['String']['input']>;
  soldAs?: InputMaybe<Scalars['String']['input']>;
  unit?: InputMaybe<UnitEnum>;
};

/** Autogenerated input type of UpdateProducts */
export type UpdateProductsInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: UpdateProductInput;
};

/** Autogenerated return type of UpdateProducts */
export type UpdateProductsPayload = {
  __typename?: 'UpdateProductsPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  product?: Maybe<Product>;
};

/** Autogenerated input type of UpdateRate */
export type UpdateRateInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: UpdateRateTypeInput;
};

/** Autogenerated return type of UpdateRate */
export type UpdateRatePayload = {
  __typename?: 'UpdateRatePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  rateType?: Maybe<RateType>;
};

/** Update Rate Type input */
export type UpdateRateTypeInput = {
  description?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
  name: Scalars['String']['input'];
  status?: InputMaybe<RateTypeStatusEnum>;
};

/** Autogenerated input type of UpdateResource */
export type UpdateResourceInput = {
  attributes: Array<ResourceUpdateInput>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  resource: ResourceUpdateEnum;
};

/** Autogenerated return type of UpdateResource */
export type UpdateResourcePayload = {
  __typename?: 'UpdateResourcePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  error?: Maybe<Scalars['String']['output']>;
  records?: Maybe<Array<ResourceUpdatable>>;
  success: Scalars['Boolean']['output'];
};

/** Autogenerated input type of UpdateResourcePricing */
export type UpdateResourcePricingInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: UpdateResourcePricingsInput;
};

/** Autogenerated return type of UpdateResourcePricing */
export type UpdateResourcePricingPayload = {
  __typename?: 'UpdateResourcePricingPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  resourcePricing?: Maybe<ResourcePricing>;
};

/** Update Resource Pricings Input */
export type UpdateResourcePricingsInput = {
  /** ApplicableMargin object. */
  applicableMarginsAttributes?: InputMaybe<Array<ApplicableMarginsInput>>;
  /** ApplicableTax object. */
  applicableTaxesAttributes?: InputMaybe<Array<ApplicableTaxesInput>>;
  discount?: InputMaybe<Scalars['Float']['input']>;
  discountUnit?: InputMaybe<RateUnitEnum>;
  id: Scalars['ID']['input'];
  pocEmail?: InputMaybe<Scalars['String']['input']>;
  pocName?: InputMaybe<Scalars['String']['input']>;
  pocPhone?: InputMaybe<Scalars['String']['input']>;
  /** PriceConfiguration object. */
  priceConfigurationsAttributes?: InputMaybe<Array<PriceConfigurationInput>>;
  /** Deprecated: Use productCategoryResourcesAttributes */
  productCategoryId?: InputMaybe<Scalars['ID']['input']>;
  /** Product Category Resource object. */
  productCategoryResourcesAttributes?: InputMaybe<Array<ProductCategoryResourceInput>>;
  rateTypeId?: InputMaybe<Scalars['ID']['input']>;
  resourceId?: InputMaybe<Scalars['ID']['input']>;
  resourceType?: InputMaybe<ResourcePricingEnum>;
};

/** Autogenerated input type of UpdateSettings */
export type UpdateSettingsInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: SettingsInput;
};

/** Autogenerated return type of UpdateSettings */
export type UpdateSettingsPayload = {
  __typename?: 'UpdateSettingsPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  settings?: Maybe<Array<Setting>>;
};

/** Autogenerated input type of UpdateShift */
export type UpdateShiftInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  /** Shift input type. */
  shiftAttributes?: InputMaybe<ShiftInput>;
};

/** Autogenerated return type of UpdateShift */
export type UpdateShiftPayload = {
  __typename?: 'UpdateShiftPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  /** Shift type. */
  shift?: Maybe<Shift>;
};

/** Autogenerated input type of UpdateStopDetails */
export type UpdateStopDetailsInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: ShiftPlanDeliveryInput;
  id: Scalars['ID']['input'];
  salesOrder: Scalars['ID']['input'];
};

/** Autogenerated return type of UpdateStopDetails */
export type UpdateStopDetailsPayload = {
  __typename?: 'UpdateStopDetailsPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  success: Scalars['Boolean']['output'];
};

/** Update supplier input */
export type UpdateSupplierInput = {
  erpId?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
  lineOfServiceIds?: InputMaybe<Array<Scalars['ID']['input']>>;
  loadingAccountsAttributes?: InputMaybe<Array<NestedLoadingAccountInput>>;
  name?: InputMaybe<Scalars['String']['input']>;
  supplierCode?: InputMaybe<Scalars['String']['input']>;
  terminalsSuppliersAttributes?: InputMaybe<Array<NestedTerminalSupplierInput>>;
};

/** Autogenerated input type of UpdateSuppliers */
export type UpdateSuppliersInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: UpdateSupplierInput;
};

/** Autogenerated return type of UpdateSuppliers */
export type UpdateSuppliersPayload = {
  __typename?: 'UpdateSuppliersPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  supplier?: Maybe<Supplier>;
};

/** Autogenerated input type of UpdateTax */
export type UpdateTaxInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: UpdateTaxesInput;
};

/** Autogenerated return type of UpdateTax */
export type UpdateTaxPayload = {
  __typename?: 'UpdateTaxPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  tax?: Maybe<Tax>;
};

/** Update Tax Input */
export type UpdateTaxesInput = {
  id: Scalars['ID']['input'];
  marketId?: InputMaybe<Scalars['ID']['input']>;
  name: Scalars['String']['input'];
  productCategoryId?: InputMaybe<Scalars['ID']['input']>;
  rateInCurrency?: InputMaybe<Scalars['Float']['input']>;
  rateInPercent?: InputMaybe<Scalars['Float']['input']>;
  rateType: RateUnitEnum;
};

/** Update terminal input */
export type UpdateTerminalInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  erpId?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
  isWarehouse?: InputMaybe<Scalars['Boolean']['input']>;
  loadingInstruction?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  nsTags?: InputMaybe<Array<Scalars['String']['input']>>;
  products?: InputMaybe<Array<NestedProductInput>>;
  siteAttributes?: InputMaybe<NestedSiteInput>;
  terminalsSuppliersAttributes?: InputMaybe<Array<NestedTerminalSupplierInput>>;
};

/** Autogenerated input type of UpdateTerminals */
export type UpdateTerminalsInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: UpdateTerminalInput;
};

/** Autogenerated return type of UpdateTerminals */
export type UpdateTerminalsPayload = {
  __typename?: 'UpdateTerminalsPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  terminal?: Maybe<Terminal>;
};

/** Update terminals supplier input */
export type UpdateTerminalsSupplierInput = {
  bolTimeAt?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
  pickupPointCodesAttributes?: InputMaybe<Array<NestedPickupPointCodeInput>>;
  supplierId?: InputMaybe<Scalars['ID']['input']>;
  terminalId?: InputMaybe<Scalars['ID']['input']>;
};

/** Autogenerated input type of UpdateTerminalsSuppliers */
export type UpdateTerminalsSuppliersInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: UpdateTerminalsSupplierInput;
};

/** Autogenerated return type of UpdateTerminalsSuppliers */
export type UpdateTerminalsSuppliersPayload = {
  __typename?: 'UpdateTerminalsSuppliersPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  terminalsSupplier?: Maybe<TerminalsSupplier>;
};

/** Updating transfer orders assets */
export type UpdateTransferOrderAssetInput = {
  /** ID of new from_asset */
  fromAssetId?: InputMaybe<Scalars['ID']['input']>;
  /** Compartments of from_asset for mapping */
  fromCompartmentAttributes?: InputMaybe<Array<CompartmentMappingInput>>;
  /** ID of order group */
  id?: InputMaybe<Scalars['ID']['input']>;
  /** ID of old from_asset */
  oldFromAssetId?: InputMaybe<Scalars['ID']['input']>;
  /** ID of old to_asset */
  oldToAssetId?: InputMaybe<Scalars['ID']['input']>;
  /** ID of new to_asset */
  toAssetId?: InputMaybe<Scalars['ID']['input']>;
  /** Compartments of to_asset for mapping */
  toCompartmentAttributes?: InputMaybe<Array<CompartmentMappingInput>>;
};

/** Autogenerated input type of UpdateTransferOrderAssets */
export type UpdateTransferOrderAssetsInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: UpdateTransferOrderAssetInput;
};

/** Autogenerated return type of UpdateTransferOrderAssets */
export type UpdateTransferOrderAssetsPayload = {
  __typename?: 'UpdateTransferOrderAssetsPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  orderGroup: OrderGroup;
};

/** Autogenerated input type of UpdateTransferOrder */
export type UpdateTransferOrderInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  transferOrderAttributes?: InputMaybe<UpdTransferOrderInput>;
};

/** Autogenerated return type of UpdateTransferOrder */
export type UpdateTransferOrderPayload = {
  __typename?: 'UpdateTransferOrderPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  transferOrder?: Maybe<TransferOrder>;
};

/** Autogenerated input type of UpdateTruckDetails */
export type UpdateTruckDetailsInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: ShiftPlanTruckInput;
  id: Scalars['ID']['input'];
};

/** Autogenerated return type of UpdateTruckDetails */
export type UpdateTruckDetailsPayload = {
  __typename?: 'UpdateTruckDetailsPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  success: Scalars['Boolean']['output'];
};

/** Update user input */
export type UpdateUserInput = {
  address?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
  imageSignedBlobId?: InputMaybe<Scalars['ID']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated input type of UpdateUsers */
export type UpdateUsersInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: UpdateUserInput;
};

/** Autogenerated return type of UpdateUsers */
export type UpdateUsersPayload = {
  __typename?: 'UpdateUsersPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  user?: Maybe<User>;
};

/** Autogenerated input type of UploadPandaDocument */
export type UploadPandaDocumentInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: AttachmentInput;
};

/** Autogenerated return type of UploadPandaDocument */
export type UploadPandaDocumentPayload = {
  __typename?: 'UploadPandaDocumentPayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  message?: Maybe<Scalars['String']['output']>;
  pandaDocument?: Maybe<PandaDocument>;
  success: Scalars['Boolean']['output'];
};

export type UsedAsset = {
  __typename?: 'UsedAsset';
  assetId?: Maybe<Scalars['ID']['output']>;
  usedCompartmentCount?: Maybe<Scalars['Int']['output']>;
};

export type User = {
  __typename?: 'User';
  address?: Maybe<Scalars['String']['output']>;
  email: Scalars['String']['output'];
  gravatar?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  image?: Maybe<AttachedFile>;
  isSuperAdmin: Scalars['Boolean']['output'];
  name?: Maybe<Scalars['String']['output']>;
  otp?: Maybe<Scalars['String']['output']>;
  phone?: Maybe<Scalars['String']['output']>;
  roles?: Maybe<Array<Role>>;
  status?: Maybe<Scalars['Int']['output']>;
};

/** Default user input */
export type UserInput = {
  address?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  imageSignedBlobId?: InputMaybe<Scalars['ID']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
};

export type Version = {
  __typename?: 'Version';
  date?: Maybe<Scalars['Int']['output']>;
  event: Scalars['String']['output'];
  id: Scalars['ID']['output'];
  itemType: Scalars['String']['output'];
  objectChanges?: Maybe<Scalars['String']['output']>;
};

export type VersionCollection = {
  __typename?: 'VersionCollection';
  collection: Array<Version>;
  metadata: MetaQuery;
};

export type Worker = {
  __typename?: 'Worker';
  email?: Maybe<Scalars['String']['output']>;
  homeAddress?: Maybe<Scalars['String']['output']>;
  hubResources?: Maybe<Array<HubResource>>;
  hubs?: Maybe<Array<Hub>>;
  id: Scalars['ID']['output'];
  isCarrier?: Maybe<Scalars['Boolean']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  phoneModel?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
};

export type LoginUserMutationVariables = Exact<{
  phone: Scalars['String']['input'];
  password: Scalars['String']['input'];
}>;


export type LoginUserMutation = { __typename?: 'Mutation', signInUser?: { __typename?: 'SignInPayload', token?: string | null } | null };


export const LoginUserDocument = gql`
    mutation LoginUser($phone: String!, $password: String!) {
  signInUser(input: {credentials: {password: $password, phone: $phone}}) {
    token
  }
}
    `;
export type LoginUserMutationFn = Apollo.MutationFunction<LoginUserMutation, LoginUserMutationVariables>;

/**
 * __useLoginUserMutation__
 *
 * To run a mutation, you first call `useLoginUserMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useLoginUserMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [loginUserMutation, { data, loading, error }] = useLoginUserMutation({
 *   variables: {
 *      phone: // value for 'phone'
 *      password: // value for 'password'
 *   },
 * });
 */
export function useLoginUserMutation(baseOptions?: Apollo.MutationHookOptions<LoginUserMutation, LoginUserMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<LoginUserMutation, LoginUserMutationVariables>(LoginUserDocument, options);
      }
export type LoginUserMutationHookResult = ReturnType<typeof useLoginUserMutation>;
export type LoginUserMutationResult = Apollo.MutationResult<LoginUserMutation>;
export type LoginUserMutationOptions = Apollo.BaseMutationOptions<LoginUserMutation, LoginUserMutationVariables>;